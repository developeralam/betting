{"version":3,"sources":["webpack:///./node_modules/color/index.js"],"names":["colorString","convert","_slice","slice","skippedModels","hashedModelKeys","Object","keys","forEach","model","call","labels","sort","join","limiters","Color","obj","this","Error","i","channels","color","valpha","result","get","value","length","newArr","zeroArray","splice","indexOf","alpha","hashedKeys","JSON","stringify","push","limit","Math","max","min","freeze","getset","channel","modifier","Array","isArray","m","val","arguments","maxfn","v","assertArray","arr","prototype","toString","string","toJSON","places","self","to","rgb","args","round","concat","percentString","percent","array","object","unitArray","unitObject","r","g","b","map","num","Number","toFixed","roundTo","roundToPlace","red","green","blue","hue","saturationl","lightness","saturationv","chroma","gray","white","wblack","cyan","magenta","yellow","black","x","y","z","l","a","keyword","hex","rgbNumber","luminosity","lum","chan","pow","contrast","color2","lum1","lum2","level","contrastRatio","isDark","isLight","negate","lighten","ratio","hsl","darken","saturate","desaturate","whiten","hwb","blacken","grayscale","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","p","undefined","w","w1","w2","newAlpha","raw","module","exports"],"mappings":"oFAEA,IAAIA,EAAc,EAAQ,OACtBC,EAAU,EAAQ,OAElBC,EAAS,GAAGC,MAEZC,EAAgB,CAEnB,UAGA,OAGA,OAGGC,EAAkB,GACtBC,OAAOC,KAAKN,GAASO,SAAQ,SAAUC,GACtCJ,EAAgBH,EAAOQ,KAAKT,EAAQQ,GAAOE,QAAQC,OAAOC,KAAK,KAAOJ,KAGvE,IAAIK,EAAW,GAEf,SAASC,EAAMC,EAAKP,GACnB,KAAMQ,gBAAgBF,GACrB,OAAO,IAAIA,EAAMC,EAAKP,GAOvB,GAJIA,GAASA,KAASL,IACrBK,EAAQ,MAGLA,KAAWA,KAASR,GACvB,MAAM,IAAIiB,MAAM,kBAAoBT,GAGrC,IAAIU,EACAC,EAEJ,GAAW,MAAPJ,EACHC,KAAKR,MAAQ,MACbQ,KAAKI,MAAQ,CAAC,EAAG,EAAG,GACpBJ,KAAKK,OAAS,OACR,GAAIN,aAAeD,EACzBE,KAAKR,MAAQO,EAAIP,MACjBQ,KAAKI,MAAQL,EAAIK,MAAMlB,QACvBc,KAAKK,OAASN,EAAIM,YACZ,GAAmB,iBAARN,EAAkB,CACnC,IAAIO,EAASvB,EAAYwB,IAAIR,GAC7B,GAAe,OAAXO,EACH,MAAM,IAAIL,MAAM,sCAAwCF,GAGzDC,KAAKR,MAAQc,EAAOd,MACpBW,EAAWnB,EAAQgB,KAAKR,OAAOW,SAC/BH,KAAKI,MAAQE,EAAOE,MAAMtB,MAAM,EAAGiB,GACnCH,KAAKK,OAA2C,iBAA3BC,EAAOE,MAAML,GAAyBG,EAAOE,MAAML,GAAY,OAC9E,GAAIJ,EAAIU,OAAQ,CACtBT,KAAKR,MAAQA,GAAS,MACtBW,EAAWnB,EAAQgB,KAAKR,OAAOW,SAC/B,IAAIO,EAASzB,EAAOQ,KAAKM,EAAK,EAAGI,GACjCH,KAAKI,MAAQO,EAAUD,EAAQP,GAC/BH,KAAKK,OAAkC,iBAAlBN,EAAII,GAAyBJ,EAAII,GAAY,OAC5D,GAAmB,iBAARJ,EAEjBA,GAAO,SACPC,KAAKR,MAAQ,MACbQ,KAAKI,MAAQ,CACXL,GAAO,GAAM,IACbA,GAAO,EAAK,IACP,IAANA,GAEDC,KAAKK,OAAS,MACR,CACNL,KAAKK,OAAS,EAEd,IAAIf,EAAOD,OAAOC,KAAKS,GACnB,UAAWA,IACdT,EAAKsB,OAAOtB,EAAKuB,QAAQ,SAAU,GACnCb,KAAKK,OAA8B,iBAAdN,EAAIe,MAAqBf,EAAIe,MAAQ,GAG3D,IAAIC,EAAazB,EAAKK,OAAOC,KAAK,IAClC,KAAMmB,KAAc3B,GACnB,MAAM,IAAIa,MAAM,sCAAwCe,KAAKC,UAAUlB,IAGxEC,KAAKR,MAAQJ,EAAgB2B,GAE7B,IAAIrB,EAASV,EAAQgB,KAAKR,OAAOE,OAC7BU,EAAQ,GACZ,IAAKF,EAAI,EAAGA,EAAIR,EAAOe,OAAQP,IAC9BE,EAAMc,KAAKnB,EAAIL,EAAOQ,KAGvBF,KAAKI,MAAQO,EAAUP,GAIxB,GAAIP,EAASG,KAAKR,OAEjB,IADAW,EAAWnB,EAAQgB,KAAKR,OAAOW,SAC1BD,EAAI,EAAGA,EAAIC,EAAUD,IAAK,CAC9B,IAAIiB,EAAQtB,EAASG,KAAKR,OAAOU,GAC7BiB,IACHnB,KAAKI,MAAMF,GAAKiB,EAAMnB,KAAKI,MAAMF,KAKpCF,KAAKK,OAASe,KAAKC,IAAI,EAAGD,KAAKE,IAAI,EAAGtB,KAAKK,SAEvChB,OAAOkC,QACVlC,OAAOkC,OAAOvB,MA4ThB,SAASwB,EAAOhC,EAAOiC,EAASC,GAS/B,OARAlC,EAAQmC,MAAMC,QAAQpC,GAASA,EAAQ,CAACA,IAElCD,SAAQ,SAAUsC,IACtBhC,EAASgC,KAAOhC,EAASgC,GAAK,KAAKJ,GAAWC,KAGhDlC,EAAQA,EAAM,GAEP,SAAUsC,GAChB,IAAIxB,EAEJ,OAAIyB,UAAUtB,QACTiB,IACHI,EAAMJ,EAASI,KAGhBxB,EAASN,KAAKR,MACPY,MAAMqB,GAAWK,EACjBxB,IAGRA,EAASN,KAAKR,KAASY,MAAMqB,GACzBC,IACHpB,EAASoB,EAASpB,IAGZA,IAIT,SAAS0B,EAAMX,GACd,OAAO,SAAUY,GAChB,OAAOb,KAAKC,IAAI,EAAGD,KAAKE,IAAID,EAAKY,KAInC,SAASC,EAAYJ,GACpB,OAAOH,MAAMC,QAAQE,GAAOA,EAAM,CAACA,GAGpC,SAASnB,EAAUwB,EAAK1B,GACvB,IAAK,IAAIP,EAAI,EAAGA,EAAIO,EAAQP,IACL,iBAAXiC,EAAIjC,KACdiC,EAAIjC,GAAK,GAIX,OAAOiC,EAxWRrC,EAAMsC,UAAY,CACjBC,SAAU,WACT,OAAOrC,KAAKsC,UAGbC,OAAQ,WACP,OAAOvC,KAAKA,KAAKR,UAGlB8C,OAAQ,SAAUE,GACjB,IAAIC,EAAOzC,KAAKR,SAAST,EAAY2D,GAAK1C,KAAOA,KAAK2C,MAElDC,EAAuB,KAD3BH,EAAOA,EAAKI,MAAwB,iBAAXL,EAAsBA,EAAS,IACxCnC,OAAeoC,EAAKrC,MAAQqC,EAAKrC,MAAM0C,OAAO9C,KAAKK,QACnE,OAAOtB,EAAY2D,GAAGD,EAAKjD,OAAOoD,IAGnCG,cAAe,SAAUP,GACxB,IAAIC,EAAOzC,KAAK2C,MAAME,MAAwB,iBAAXL,EAAsBA,EAAS,GAC9DI,EAAuB,IAAhBH,EAAKpC,OAAeoC,EAAKrC,MAAQqC,EAAKrC,MAAM0C,OAAO9C,KAAKK,QACnE,OAAOtB,EAAY2D,GAAGC,IAAIK,QAAQJ,IAGnCK,MAAO,WACN,OAAuB,IAAhBjD,KAAKK,OAAeL,KAAKI,MAAMlB,QAAUc,KAAKI,MAAM0C,OAAO9C,KAAKK,SAGxE6C,OAAQ,WAKP,IAJA,IAAI5C,EAAS,GACTH,EAAWnB,EAAQgB,KAAKR,OAAOW,SAC/BT,EAASV,EAAQgB,KAAKR,OAAOE,OAExBQ,EAAI,EAAGA,EAAIC,EAAUD,IAC7BI,EAAOZ,EAAOQ,IAAMF,KAAKI,MAAMF,GAOhC,OAJoB,IAAhBF,KAAKK,SACRC,EAAOQ,MAAQd,KAAKK,QAGdC,GAGR6C,UAAW,WACV,IAAIR,EAAM3C,KAAK2C,MAAMvC,MASrB,OARAuC,EAAI,IAAM,IACVA,EAAI,IAAM,IACVA,EAAI,IAAM,IAEU,IAAhB3C,KAAKK,QACRsC,EAAIzB,KAAKlB,KAAKK,QAGRsC,GAGRS,WAAY,WACX,IAAIT,EAAM3C,KAAK2C,MAAMO,SASrB,OARAP,EAAIU,GAAK,IACTV,EAAIW,GAAK,IACTX,EAAIY,GAAK,IAEW,IAAhBvD,KAAKK,SACRsC,EAAI7B,MAAQd,KAAKK,QAGXsC,GAGRE,MAAO,SAAUL,GAEhB,OADAA,EAASpB,KAAKC,IAAImB,GAAU,EAAG,GACxB,IAAI1C,EAAME,KAAKI,MAAMoD,IA4O9B,SAAsBhB,GACrB,OAAO,SAAUiB,GAChB,OANF,SAAiBA,EAAKjB,GACrB,OAAOkB,OAAOD,EAAIE,QAAQnB,IAKlBoB,CAAQH,EAAKjB,IA9OYqB,CAAarB,IAASM,OAAO9C,KAAKK,QAASL,KAAKR,QAGjFsB,MAAO,SAAUgB,GAChB,OAAIC,UAAUtB,OACN,IAAIX,EAAME,KAAKI,MAAM0C,OAAO1B,KAAKC,IAAI,EAAGD,KAAKE,IAAI,EAAGQ,KAAQ9B,KAAKR,OAGlEQ,KAAKK,QAIbyD,IAAKtC,EAAO,MAAO,EAAGQ,EAAM,MAC5B+B,MAAOvC,EAAO,MAAO,EAAGQ,EAAM,MAC9BgC,KAAMxC,EAAO,MAAO,EAAGQ,EAAM,MAE7BiC,IAAKzC,EAAO,CAAC,MAAO,MAAO,MAAO,MAAO,OAAQ,GAAG,SAAUM,GAAO,OAASA,EAAM,IAAO,KAAO,OAElGoC,YAAa1C,EAAO,MAAO,EAAGQ,EAAM,MACpCmC,UAAW3C,EAAO,MAAO,EAAGQ,EAAM,MAElCoC,YAAa5C,EAAO,MAAO,EAAGQ,EAAM,MACpCxB,MAAOgB,EAAO,MAAO,EAAGQ,EAAM,MAE9BqC,OAAQ7C,EAAO,MAAO,EAAGQ,EAAM,MAC/BsC,KAAM9C,EAAO,MAAO,EAAGQ,EAAM,MAE7BuC,MAAO/C,EAAO,MAAO,EAAGQ,EAAM,MAC9BwC,OAAQhD,EAAO,MAAO,EAAGQ,EAAM,MAE/ByC,KAAMjD,EAAO,OAAQ,EAAGQ,EAAM,MAC9B0C,QAASlD,EAAO,OAAQ,EAAGQ,EAAM,MACjC2C,OAAQnD,EAAO,OAAQ,EAAGQ,EAAM,MAChC4C,MAAOpD,EAAO,OAAQ,EAAGQ,EAAM,MAE/B6C,EAAGrD,EAAO,MAAO,EAAGQ,EAAM,MAC1B8C,EAAGtD,EAAO,MAAO,EAAGQ,EAAM,MAC1B+C,EAAGvD,EAAO,MAAO,EAAGQ,EAAM,MAE1BgD,EAAGxD,EAAO,MAAO,EAAGQ,EAAM,MAC1BiD,EAAGzD,EAAO,MAAO,GACjB+B,EAAG/B,EAAO,MAAO,GAEjB0D,QAAS,SAAUpD,GAClB,OAAIC,UAAUtB,OACN,IAAIX,EAAMgC,GAGX9C,EAAQgB,KAAKR,OAAO0F,QAAQlF,KAAKI,QAGzC+E,IAAK,SAAUrD,GACd,OAAIC,UAAUtB,OACN,IAAIX,EAAMgC,GAGX/C,EAAY2D,GAAGyC,IAAInF,KAAK2C,MAAME,QAAQzC,QAG9CgF,UAAW,WACV,IAAIzC,EAAM3C,KAAK2C,MAAMvC,MACrB,OAAkB,IAATuC,EAAI,KAAc,IAAiB,IAATA,EAAI,KAAc,EAAe,IAATA,EAAI,IAGhE0C,WAAY,WAKX,IAHA,IAAI1C,EAAM3C,KAAK2C,MAAMvC,MAEjBkF,EAAM,GACDpF,EAAI,EAAGA,EAAIyC,EAAIlC,OAAQP,IAAK,CACpC,IAAIqF,EAAO5C,EAAIzC,GAAK,IACpBoF,EAAIpF,GAAMqF,GAAQ,OAAWA,EAAO,MAAQnE,KAAKoE,KAAMD,EAAO,MAAS,MAAQ,KAGhF,MAAO,MAASD,EAAI,GAAK,MAASA,EAAI,GAAK,MAASA,EAAI,IAGzDG,SAAU,SAAUC,GAEnB,IAAIC,EAAO3F,KAAKqF,aACZO,EAAOF,EAAOL,aAElB,OAAIM,EAAOC,GACFD,EAAO,MAASC,EAAO,MAGxBA,EAAO,MAASD,EAAO,MAGhCE,MAAO,SAAUH,GAChB,IAAII,EAAgB9F,KAAKyF,SAASC,GAClC,OAAII,GAAiB,IACb,MAGAA,GAAiB,IAAO,KAAO,IAGxCC,OAAQ,WAEP,IAAIpD,EAAM3C,KAAK2C,MAAMvC,MAErB,OADoB,IAATuC,EAAI,GAAoB,IAATA,EAAI,GAAoB,IAATA,EAAI,IAAY,IAC5C,KAGdqD,QAAS,WACR,OAAQhG,KAAK+F,UAGdE,OAAQ,WAEP,IADA,IAAItD,EAAM3C,KAAK2C,MACNzC,EAAI,EAAGA,EAAI,EAAGA,IACtByC,EAAIvC,MAAMF,GAAK,IAAMyC,EAAIvC,MAAMF,GAEhC,OAAOyC,GAGRuD,QAAS,SAAUC,GAClB,IAAIC,EAAMpG,KAAKoG,MAEf,OADAA,EAAIhG,MAAM,IAAMgG,EAAIhG,MAAM,GAAK+F,EACxBC,GAGRC,OAAQ,SAAUF,GACjB,IAAIC,EAAMpG,KAAKoG,MAEf,OADAA,EAAIhG,MAAM,IAAMgG,EAAIhG,MAAM,GAAK+F,EACxBC,GAGRE,SAAU,SAAUH,GACnB,IAAIC,EAAMpG,KAAKoG,MAEf,OADAA,EAAIhG,MAAM,IAAMgG,EAAIhG,MAAM,GAAK+F,EACxBC,GAGRG,WAAY,SAAUJ,GACrB,IAAIC,EAAMpG,KAAKoG,MAEf,OADAA,EAAIhG,MAAM,IAAMgG,EAAIhG,MAAM,GAAK+F,EACxBC,GAGRI,OAAQ,SAAUL,GACjB,IAAIM,EAAMzG,KAAKyG,MAEf,OADAA,EAAIrG,MAAM,IAAMqG,EAAIrG,MAAM,GAAK+F,EACxBM,GAGRC,QAAS,SAAUP,GAClB,IAAIM,EAAMzG,KAAKyG,MAEf,OADAA,EAAIrG,MAAM,IAAMqG,EAAIrG,MAAM,GAAK+F,EACxBM,GAGRE,UAAW,WAEV,IAAIhE,EAAM3C,KAAK2C,MAAMvC,MACjB0B,EAAe,GAATa,EAAI,GAAoB,IAATA,EAAI,GAAqB,IAATA,EAAI,GAC7C,OAAO7C,EAAM6C,IAAIb,EAAKA,EAAKA,IAG5B8E,KAAM,SAAUT,GACf,OAAOnG,KAAKc,MAAMd,KAAKK,OAAUL,KAAKK,OAAS8F,IAGhDU,QAAS,SAAUV,GAClB,OAAOnG,KAAKc,MAAMd,KAAKK,OAAUL,KAAKK,OAAS8F,IAGhDW,OAAQ,SAAUC,GACjB,IAAIX,EAAMpG,KAAKoG,MACXnC,EAAMmC,EAAIhG,MAAM,GAIpB,OAFA6D,GADAA,GAAOA,EAAM8C,GAAW,KACZ,EAAI,IAAM9C,EAAMA,EAC5BmC,EAAIhG,MAAM,GAAK6D,EACRmC,GAGRY,IAAK,SAAUC,EAAYC,GAG1B,IAAKD,IAAeA,EAAWtE,IAC9B,MAAM,IAAI1C,MAAM,gFAAkFgH,GAEnG,IAAIE,EAASF,EAAWtE,MACpB+C,EAAS1F,KAAK2C,MACdyE,OAAeC,IAAXH,EAAuB,GAAMA,EAEjCI,EAAI,EAAIF,EAAI,EACZnC,EAAIkC,EAAOrG,QAAU4E,EAAO5E,QAE5ByG,IAAQD,EAAIrC,IAAO,EAAKqC,GAAKA,EAAIrC,IAAM,EAAIqC,EAAIrC,IAAM,GAAK,EAC1DuC,EAAK,EAAID,EAEb,OAAOzH,EAAM6C,IACX4E,EAAKJ,EAAOrD,MAAQ0D,EAAK9B,EAAO5B,MAChCyD,EAAKJ,EAAOpD,QAAUyD,EAAK9B,EAAO3B,QAClCwD,EAAKJ,EAAOnD,OAASwD,EAAK9B,EAAO1B,OACjCmD,EAAOrG,QAAUsG,EAAI1B,EAAO5E,SAAW,EAAIsG,MAK/C/H,OAAOC,KAAKN,GAASO,SAAQ,SAAUC,GACtC,IAAsC,IAAlCL,EAAc0B,QAAQrB,GAA1B,CAIA,IAAIW,EAAWnB,EAAQQ,GAAOW,SAG9BL,EAAMsC,UAAU5C,GAAS,WACxB,GAAIQ,KAAKR,QAAUA,EAClB,OAAO,IAAIM,EAAME,MAGlB,GAAI+B,UAAUtB,OACb,OAAO,IAAIX,EAAMiC,UAAWvC,GAG7B,IAAIiI,EAA0C,iBAAxB1F,UAAU5B,GAAyBA,EAAWH,KAAKK,OACzE,OAAO,IAAIP,EAAMoC,EAAYlD,EAAQgB,KAAKR,OAAOA,GAAOkI,IAAI1H,KAAKI,QAAQ0C,OAAO2E,GAAWjI,IAI5FM,EAAMN,GAAS,SAAUY,GAIxB,MAHqB,iBAAVA,IACVA,EAAQO,EAAU1B,EAAOQ,KAAKsC,WAAY5B,IAEpC,IAAIL,EAAMM,EAAOZ,QAiE1BmI,EAAOC,QAAU9H","file":"js/vendor/color.js","sourcesContent":["'use strict';\n\nvar colorString = require('color-string');\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (obj == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight: function () {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n"],"sourceRoot":""}