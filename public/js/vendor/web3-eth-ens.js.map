{"version":3,"sources":["webpack:///./node_modules/web3-eth-ens/lib/ENS.js","webpack:///./node_modules/web3-eth-ens/lib/config.js","webpack:///./node_modules/web3-eth-ens/lib/contracts/Registry.js","webpack:///./node_modules/web3-eth-ens/lib/index.js","webpack:///./node_modules/web3-eth-ens/lib/lib/ResolverMethodHandler.js","webpack:///./node_modules/web3-eth-ens/lib/lib/contentHash.js","webpack:///./node_modules/web3-eth-ens/lib/resources/ABI/Registry.js","webpack:///./node_modules/web3-eth-ens/lib/resources/ABI/Resolver.js"],"names":["config","formatters","utils","Registry","ResolverMethodHandler","contenthash","ENS","eth","this","registryAddress","_detectedAddress","_lastSyncCheck","Object","defineProperty","get","enumerable","registry","set","value","inputAddressFormatter","prototype","supportsInterface","name","interfaceId","callback","getResolver","then","resolver","isHexStrict","sha3","slice","methods","call","catch","error","setResolver","address","txConfig","setRecord","owner","ttl","setSubnodeRecord","label","setApprovalForAll","operator","approved","isApprovedForAll","recordExists","setSubnodeOwner","getTTL","setTTL","getOwner","setOwner","getAddress","resolverMethodHandler","method","setAddress","send","getPubkey","setPubkey","x","y","getContent","setContent","hash","getContenthash","decode","setContenthash","encoded","encode","err","Error","getMultihash","setMultihash","checkNetwork","async","now","Date","headAge","getBlock","timestamp","networkType","net","getNetworkType","addr","addresses","module","exports","main","ropsten","rinkeby","goerli","interfaceIds","setAddr","pubkey","content","Contract","namehash","PromiEvent","REGISTRY_ABI","RESOLVER_ABI","ens","self","contract","setProvider","currentProvider","console","warn","promiEvent","receipt","resolve","reject","eventEmitter","errors","ensName","methodName","methodArguments","outputFormatter","bind","parent","preparedArguments","prepareArguments","checkInterfaceSupport","handleCall","sendOptions","handleSend","apply","result","on","emit","confirmationNumber","node","length","unshift","supported","options","ResolverMethodMissingError","contentHash","decoded","protocolType","codec","getCodec","e","message","text","contentType","matched","match","fromIpfs","fromSwarm"],"mappings":"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","file":"js/vendor/web3-eth-ens.js","sourcesContent":["/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file ENS.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\"use strict\";\nvar config = require('./config');\nvar formatters = require('web3-core-helpers').formatters;\nvar utils = require('web3-utils');\nvar Registry = require('./contracts/Registry');\nvar ResolverMethodHandler = require('./lib/ResolverMethodHandler');\nvar contenthash = require('./lib/contentHash');\n/**\n * Constructs a new instance of ENS\n *\n * @param {Eth} eth\n *\n * @constructor\n */\nfunction ENS(eth) {\n    this.eth = eth;\n    var registryAddress = null;\n    this._detectedAddress = null;\n    this._lastSyncCheck = null;\n    Object.defineProperty(this, 'registry', {\n        get: function () {\n            return new Registry(this);\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'resolverMethodHandler', {\n        get: function () {\n            return new ResolverMethodHandler(this.registry);\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'registryAddress', {\n        get: function () {\n            return registryAddress;\n        },\n        set: function (value) {\n            if (value === null) {\n                registryAddress = value;\n                return;\n            }\n            registryAddress = formatters.inputAddressFormatter(value);\n        },\n        enumerable: true\n    });\n}\n/**\n * Returns true if the given interfaceId is supported and otherwise false.\n *\n * @method supportsInterface\n *\n * @param {string} name\n * @param {string} interfaceId\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<boolean>}\n */\nENS.prototype.supportsInterface = function (name, interfaceId, callback) {\n    return this.getResolver(name).then(function (resolver) {\n        if (!utils.isHexStrict(interfaceId)) {\n            interfaceId = utils.sha3(interfaceId).slice(0, 10);\n        }\n        return resolver.methods.supportsInterface(interfaceId).call(callback);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        throw error;\n    });\n};\n/**\n * Returns the Resolver by the given address\n *\n * @deprecated Please use the \"getResolver\" method instead of \"resolver\"\n *\n * @method resolver\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<Contract>}\n */\nENS.prototype.resolver = function (name, callback) {\n    return this.registry.resolver(name, callback);\n};\n/**\n * Returns the Resolver by the given address\n *\n * @method getResolver\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<Contract>}\n */\nENS.prototype.getResolver = function (name, callback) {\n    return this.registry.getResolver(name, callback);\n};\n/**\n * Does set the resolver of the given name\n *\n * @method setResolver\n *\n * @param {string} name\n * @param {string} address\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setResolver = function (name, address, txConfig, callback) {\n    return this.registry.setResolver(name, address, txConfig, callback);\n};\n/**\n * Sets the owner, resolver, and TTL for an ENS record in a single operation.\n *\n * @method setRecord\n *\n * @param {string} name\n * @param {string} owner\n * @param {string} resolver\n * @param {string | number} ttl\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setRecord = function (name, owner, resolver, ttl, txConfig, callback) {\n    return this.registry.setRecord(name, owner, resolver, ttl, txConfig, callback);\n};\n/**\n * Sets the owner, resolver and TTL for a subdomain, creating it if necessary.\n *\n * @method setSubnodeRecord\n *\n * @param {string} name\n * @param {string} label\n * @param {string} owner\n * @param {string} resolver\n * @param {string | number} ttl\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setSubnodeRecord = function (name, label, owner, resolver, ttl, txConfig, callback) {\n    return this.registry.setSubnodeRecord(name, label, owner, resolver, ttl, txConfig, callback);\n};\n/**\n * Sets or clears an approval by the given operator.\n *\n * @method setApprovalForAll\n *\n * @param {string} operator\n * @param {boolean} approved\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setApprovalForAll = function (operator, approved, txConfig, callback) {\n    return this.registry.setApprovalForAll(operator, approved, txConfig, callback);\n};\n/**\n * Returns true if the operator is approved\n *\n * @method isApprovedForAll\n *\n * @param {string} owner\n * @param {string} operator\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<boolean>}\n */\nENS.prototype.isApprovedForAll = function (owner, operator, callback) {\n    return this.registry.isApprovedForAll(owner, operator, callback);\n};\n/**\n * Returns true if the record exists\n *\n * @method recordExists\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<boolean>}\n */\nENS.prototype.recordExists = function (name, callback) {\n    return this.registry.recordExists(name, callback);\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setSubnodeOwner\n *\n * @param {string} name\n * @param {string} label\n * @param {string} address\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setSubnodeOwner = function (name, label, address, txConfig, callback) {\n    return this.registry.setSubnodeOwner(name, label, address, txConfig, callback);\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method getTTL\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.getTTL = function (name, callback) {\n    return this.registry.getTTL(name, callback);\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setTTL\n *\n * @param {string} name\n * @param {number} ttl\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setTTL = function (name, ttl, txConfig, callback) {\n    return this.registry.setTTL(name, ttl, txConfig, callback);\n};\n/**\n * Returns the owner by the given name and current configured or detected Registry\n *\n * @method getOwner\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.getOwner = function (name, callback) {\n    return this.registry.getOwner(name, callback);\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setOwner\n *\n * @param {string} name\n * @param {string} address\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setOwner = function (name, address, txConfig, callback) {\n    return this.registry.setOwner(name, address, txConfig, callback);\n};\n/**\n * Returns the address record associated with a name.\n *\n * @method getAddress\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.getAddress = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'addr', []).call(callback);\n};\n/**\n * Sets a new address\n *\n * @method setAddress\n *\n * @param {string} name\n * @param {string} address\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setAddress = function (name, address, txConfig, callback) {\n    return this.resolverMethodHandler.method(name, 'setAddr', [address]).send(txConfig, callback);\n};\n/**\n * Returns the public key\n *\n * @method getPubkey\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.getPubkey = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'pubkey', [], null, callback).call(callback);\n};\n/**\n * Set the new public key\n *\n * @method setPubkey\n *\n * @param {string} name\n * @param {string} x\n * @param {string} y\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setPubkey = function (name, x, y, txConfig, callback) {\n    return this.resolverMethodHandler.method(name, 'setPubkey', [x, y]).send(txConfig, callback);\n};\n/**\n * Returns the content\n *\n * @method getContent\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.getContent = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'content', []).call(callback);\n};\n/**\n * Set the content\n *\n * @method setContent\n *\n * @param {string} name\n * @param {string} hash\n * @param {function} callback\n * @param {TransactionConfig} txConfig\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setContent = function (name, hash, txConfig, callback) {\n    return this.resolverMethodHandler.method(name, 'setContent', [hash]).send(txConfig, callback);\n};\n/**\n * Returns the contenthash\n *\n * @method getContenthash\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<ContentHash>}\n */\nENS.prototype.getContenthash = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'contenthash', [], contenthash.decode).call(callback);\n};\n/**\n * Set the contenthash\n *\n * @method setContent\n *\n * @param {string} name\n * @param {string} hash\n * @param {function} callback\n * @param {TransactionConfig} txConfig\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setContenthash = function (name, hash, txConfig, callback) {\n    var encoded;\n    try {\n        encoded = contenthash.encode(hash);\n    }\n    catch (err) {\n        var error = new Error('Could not encode ' + hash + '. See docs for supported hash protocols.');\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        throw error;\n    }\n    return this.resolverMethodHandler.method(name, 'setContenthash', [encoded]).send(txConfig, callback);\n};\n/**\n * Get the multihash\n *\n * @method getMultihash\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.getMultihash = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'multihash', []).call(callback);\n};\n/**\n * Set the multihash\n *\n * @method setMultihash\n *\n * @param {string} name\n * @param {string} hash\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setMultihash = function (name, hash, txConfig, callback) {\n    return this.resolverMethodHandler.method(name, 'multihash', [hash]).send(txConfig, callback);\n};\n/**\n * Checks if the current used network is synced and looks for ENS support there.\n * Throws an error if not.\n *\n * @returns {Promise<string>}\n */\nENS.prototype.checkNetwork = async function () {\n    var now = new Date() / 1000;\n    if (!this._lastSyncCheck || (now - this._lastSyncCheck) > 3600) {\n        var block = await this.eth.getBlock('latest');\n        var headAge = now - block.timestamp;\n        if (headAge > 3600) {\n            throw new Error(\"Network not synced; last block was \" + headAge + \" seconds ago\");\n        }\n        this._lastSyncCheck = now;\n    }\n    if (this.registryAddress) {\n        return this.registryAddress;\n    }\n    if (!this._detectedAddress) {\n        var networkType = await this.eth.net.getNetworkType();\n        var addr = config.addresses[networkType];\n        if (typeof addr === 'undefined') {\n            throw new Error(\"ENS is not supported on network \" + networkType);\n        }\n        this._detectedAddress = addr;\n        return this._detectedAddress;\n    }\n    return this._detectedAddress;\n};\nmodule.exports = ENS;\n","/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file config.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2017\n */\n\"use strict\";\n/**\n * Source: https://docs.ens.domains/ens-deployments\n *\n * @type {{addresses: {main: string, rinkeby: string, goerli: string, ropsten: string}}}\n */\nvar config = {\n    addresses: {\n        main: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        ropsten: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        rinkeby: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        goerli: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\"\n    },\n    // These ids obtained at ensdomains docs:\n    // https://docs.ens.domains/contract-developer-guide/writing-a-resolver\n    interfaceIds: {\n        addr: \"0x3b3b57de\",\n        setAddr: \"0x3b3b57de\",\n        pubkey: \"0xc8690233\",\n        setPubkey: \"0xc8690233\",\n        contenthash: \"0xbc1c58d1\",\n        setContenthash: \"0xbc1c58d1\",\n        content: \"0xd8389dc5\",\n        setContent: \"0xd8389dc5\"\n    }\n};\nmodule.exports = config;\n","/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file Registry.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\"use strict\";\nvar Contract = require('web3-eth-contract');\nvar namehash = require('eth-ens-namehash');\nvar PromiEvent = require('web3-core-promievent');\nvar formatters = require('web3-core-helpers').formatters;\nvar utils = require('web3-utils');\nvar REGISTRY_ABI = require('../resources/ABI/Registry');\nvar RESOLVER_ABI = require('../resources/ABI/Resolver');\n/**\n * A wrapper around the ENS registry contract.\n *\n * @method Registry\n * @param {Ens} ens\n * @constructor\n */\nfunction Registry(ens) {\n    var self = this;\n    this.ens = ens;\n    this.contract = ens.checkNetwork().then(function (address) {\n        var contract = new Contract(REGISTRY_ABI, address);\n        contract.setProvider(self.ens.eth.currentProvider);\n        return contract;\n    });\n}\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @deprecated Please use the \"getOwner\" method instead of \"owner\"\n *\n * @method owner\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<string>}\n */\nRegistry.prototype.owner = function (name, callback) {\n    console.warn('Deprecated: Please use the \"getOwner\" method instead of \"owner\".');\n    return this.getOwner(name, callback);\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method getOwner\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<string>}\n */\nRegistry.prototype.getOwner = function (name, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.owner(namehash.hash(name)).call();\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setOwner\n *\n * @param {string} name\n * @param {string} address\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setOwner = function (name, address, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.setOwner(namehash.hash(name), formatters.inputAddressFormatter(address)).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns the TTL of the given node by his name\n *\n * @method getTTL\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returnss {Promise<string>}\n */\nRegistry.prototype.getTTL = function (name, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.ttl(namehash.hash(name)).call();\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setTTL\n *\n * @param {string} name\n * @param {number} ttl\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setTTL = function (name, ttl, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.setTTL(namehash.hash(name), ttl).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setSubnodeOwner\n *\n * @param {string} name\n * @param {string} label\n * @param {string} address\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setSubnodeOwner = function (name, label, address, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    if (!utils.isHexStrict(label)) {\n        label = utils.sha3(label);\n    }\n    this.contract.then(function (contract) {\n        return contract.methods.setSubnodeOwner(namehash.hash(name), label, formatters.inputAddressFormatter(address)).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Sets the owner, resolver, and TTL for an ENS record in a single operation.\n *\n * @method setRecord\n *\n * @param {string} name\n * @param {string} owner\n * @param {string} resolver\n * @param {string | number} ttl\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setRecord = function (name, owner, resolver, ttl, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.setRecord(namehash.hash(name), formatters.inputAddressFormatter(owner), formatters.inputAddressFormatter(resolver), ttl).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Sets the owner, resolver and TTL for a subdomain, creating it if necessary.\n *\n * @method setSubnodeRecord\n *\n * @param {string} name\n * @param {string} label\n * @param {string} owner\n * @param {string} resolver\n * @param {string | number} ttl\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setSubnodeRecord = function (name, label, owner, resolver, ttl, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    if (!utils.isHexStrict(label)) {\n        label = utils.sha3(label);\n    }\n    this.contract.then(function (contract) {\n        return contract.methods.setSubnodeRecord(namehash.hash(name), label, formatters.inputAddressFormatter(owner), formatters.inputAddressFormatter(resolver), ttl).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Sets or clears an approval by the given operator.\n *\n * @method setApprovalForAll\n *\n * @param {string} operator\n * @param {boolean} approved\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setApprovalForAll = function (operator, approved, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.setApprovalForAll(formatters.inputAddressFormatter(operator), approved).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns true if the operator is approved\n *\n * @method isApprovedForAll\n *\n * @param {string} owner\n * @param {string} operator\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<boolean>}\n */\nRegistry.prototype.isApprovedForAll = function (owner, operator, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.isApprovedForAll(formatters.inputAddressFormatter(owner), formatters.inputAddressFormatter(operator)).call();\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns true if the record exists\n *\n * @method recordExists\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<boolean>}\n */\nRegistry.prototype.recordExists = function (name, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.recordExists(namehash.hash(name)).call();\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns the resolver contract associated with a name.\n *\n * @deprecated Please use the \"getResolver\" method instead of \"resolver\"\n *\n * @method resolver\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<Contract>}\n */\nRegistry.prototype.resolver = function (name, callback) {\n    console.warn('Deprecated: Please use the \"getResolver\" method instead of \"resolver\".');\n    return this.getResolver(name, callback);\n};\n/**\n * Returns the resolver contract associated with a name.\n *\n * @method getResolver\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<Contract>}\n */\nRegistry.prototype.getResolver = function (name, callback) {\n    var self = this;\n    return this.contract.then(function (contract) {\n        return contract.methods.resolver(namehash.hash(name)).call();\n    }).then(function (address) {\n        var contract = new Contract(RESOLVER_ABI, address);\n        contract.setProvider(self.ens.eth.currentProvider);\n        if (typeof callback === 'function') {\n            // It's required to pass the contract to the first argument to be backward compatible and to have the required consistency\n            callback(contract, contract);\n            return;\n        }\n        return contract;\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        throw error;\n    });\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setResolver\n *\n * @param {string} name\n * @param {string} address\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setResolver = function (name, address, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.setResolver(namehash.hash(name), formatters.inputAddressFormatter(address)).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\nmodule.exports = Registry;\n","/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file index.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\"use strict\";\nvar ENS = require('./ENS');\nmodule.exports = ENS;\n","/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file ResolverMethodHandler.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\"use strict\";\nvar PromiEvent = require('web3-core-promievent');\nvar namehash = require('eth-ens-namehash');\nvar errors = require('web3-core-helpers').errors;\nvar interfaceIds = require('../config').interfaceIds;\n/**\n * @param {Registry} registry\n * @constructor\n */\nfunction ResolverMethodHandler(registry) {\n    this.registry = registry;\n}\n/**\n * Executes an resolver method and returns an eventifiedPromise\n *\n * @param {string} ensName\n * @param {string} methodName\n * @param {array} methodArguments\n * @param {function} callback\n * @returns {Object}\n */\nResolverMethodHandler.prototype.method = function (ensName, methodName, methodArguments, outputFormatter, callback) {\n    return {\n        call: this.call.bind({\n            ensName: ensName,\n            methodName: methodName,\n            methodArguments: methodArguments,\n            callback: callback,\n            parent: this,\n            outputFormatter: outputFormatter\n        }),\n        send: this.send.bind({\n            ensName: ensName,\n            methodName: methodName,\n            methodArguments: methodArguments,\n            callback: callback,\n            parent: this\n        })\n    };\n};\n/**\n * Executes call\n *\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.call = function (callback) {\n    var self = this;\n    var promiEvent = new PromiEvent();\n    var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n    var outputFormatter = this.outputFormatter || null;\n    this.parent.registry.getResolver(this.ensName).then(async function (resolver) {\n        await self.parent.checkInterfaceSupport(resolver, self.methodName);\n        self.parent.handleCall(promiEvent, resolver.methods[self.methodName], preparedArguments, outputFormatter, callback);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Executes send\n *\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.send = function (sendOptions, callback) {\n    var self = this;\n    var promiEvent = new PromiEvent();\n    var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n    this.parent.registry.getResolver(this.ensName).then(async function (resolver) {\n        await self.parent.checkInterfaceSupport(resolver, self.methodName);\n        self.parent.handleSend(promiEvent, resolver.methods[self.methodName], preparedArguments, sendOptions, callback);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Handles a call method\n *\n * @param {eventifiedPromise} promiEvent\n * @param {function} method\n * @param {array} preparedArguments\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.handleCall = function (promiEvent, method, preparedArguments, outputFormatter, callback) {\n    method.apply(this, preparedArguments).call()\n        .then(function (result) {\n        if (outputFormatter) {\n            result = outputFormatter(result);\n        }\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the second argument to be backwards compatible and to have the required consistency\n            callback(result, result);\n            return;\n        }\n        promiEvent.resolve(result);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent;\n};\n/**\n * Handles a send method\n *\n * @param {eventifiedPromise} promiEvent\n * @param {function} method\n * @param {array} preparedArguments\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.handleSend = function (promiEvent, method, preparedArguments, sendOptions, callback) {\n    method.apply(this, preparedArguments).send(sendOptions)\n        .on('sending', function () {\n        promiEvent.eventEmitter.emit('sending');\n    })\n        .on('sent', function () {\n        promiEvent.eventEmitter.emit('sent');\n    })\n        .on('transactionHash', function (hash) {\n        promiEvent.eventEmitter.emit('transactionHash', hash);\n    })\n        .on('confirmation', function (confirmationNumber, receipt) {\n        promiEvent.eventEmitter.emit('confirmation', confirmationNumber, receipt);\n    })\n        .on('receipt', function (receipt) {\n        promiEvent.eventEmitter.emit('receipt', receipt);\n        promiEvent.resolve(receipt);\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the second argument to be backwards compatible and to have the required consistency\n            callback(receipt, receipt);\n        }\n    })\n        .on('error', function (error) {\n        promiEvent.eventEmitter.emit('error', error);\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent;\n};\n/**\n * Adds the ENS node to the arguments\n *\n * @param {string} name\n * @param {array} methodArguments\n *\n * @returns {array}\n */\nResolverMethodHandler.prototype.prepareArguments = function (name, methodArguments) {\n    var node = namehash.hash(name);\n    if (methodArguments.length > 0) {\n        methodArguments.unshift(node);\n        return methodArguments;\n    }\n    return [node];\n};\n/**\n *\n *\n * @param {Contract} resolver\n * @param {string} methodName\n *\n * @returns {Promise}\n */\nResolverMethodHandler.prototype.checkInterfaceSupport = async function (resolver, methodName) {\n    // Skip validation for undocumented interface ids (ex: multihash)\n    if (!interfaceIds[methodName])\n        return;\n    var supported = false;\n    try {\n        supported = await resolver\n            .methods\n            .supportsInterface(interfaceIds[methodName])\n            .call();\n    }\n    catch (err) {\n        console.warn('Could not verify interface of resolver contract at \"' + resolver.options.address + '\". ');\n    }\n    if (!supported) {\n        throw errors.ResolverMethodMissingError(resolver.options.address, methodName);\n    }\n};\nmodule.exports = ResolverMethodHandler;\n","/*\nAdapted from ensdomains/ui\nhttps://github.com/ensdomains/ui/blob/3e62e440b53466eeec9dd1c63d73924eefbd88c1/src/utils/contents.js#L1-L85\n\nBSD 2-Clause License\n\nCopyright (c) 2019, Ethereum Name Service\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nvar contentHash = require('content-hash');\nfunction decode(encoded) {\n    var decoded = null;\n    var protocolType = null;\n    var error = null;\n    if (encoded && encoded.error) {\n        return {\n            protocolType: null,\n            decoded: encoded.error\n        };\n    }\n    if (encoded) {\n        try {\n            decoded = contentHash.decode(encoded);\n            var codec = contentHash.getCodec(encoded);\n            if (codec === 'ipfs-ns') {\n                protocolType = 'ipfs';\n            }\n            else if (codec === 'swarm-ns') {\n                protocolType = 'bzz';\n            }\n            else if (codec === 'onion') {\n                protocolType = 'onion';\n            }\n            else if (codec === 'onion3') {\n                protocolType = 'onion3';\n            }\n            else {\n                decoded = encoded;\n            }\n        }\n        catch (e) {\n            error = e.message;\n        }\n    }\n    return {\n        protocolType: protocolType,\n        decoded: decoded,\n        error: error\n    };\n}\nfunction encode(text) {\n    var content, contentType;\n    var encoded = false;\n    if (!!text) {\n        var matched = text.match(/^(ipfs|bzz|onion|onion3):\\/\\/(.*)/) || text.match(/\\/(ipfs)\\/(.*)/);\n        if (matched) {\n            contentType = matched[1];\n            content = matched[2];\n        }\n        try {\n            if (contentType === 'ipfs') {\n                if (content.length >= 4) {\n                    encoded = '0x' + contentHash.fromIpfs(content);\n                }\n            }\n            else if (contentType === 'bzz') {\n                if (content.length >= 4) {\n                    encoded = '0x' + contentHash.fromSwarm(content);\n                }\n            }\n            else if (contentType === 'onion') {\n                if (content.length === 16) {\n                    encoded = '0x' + contentHash.encode('onion', content);\n                }\n            }\n            else if (contentType === 'onion3') {\n                if (content.length === 56) {\n                    encoded = '0x' + contentHash.encode('onion3', content);\n                }\n            }\n            else {\n                throw new Error('Could not encode content hash: unsupported content type');\n            }\n        }\n        catch (err) {\n            throw err;\n        }\n    }\n    return encoded;\n}\nmodule.exports = {\n    decode: decode,\n    encode: encode\n};\n","\"use strict\";\nvar REGISTRY = [\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"resolver\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"label\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setSubnodeOwner\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"ttl\",\n                \"type\": \"uint64\"\n            }\n        ],\n        \"name\": \"setTTL\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"ttl\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"uint64\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"resolver\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setResolver\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setOwner\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": true,\n                \"name\": \"label\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"NewOwner\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"resolver\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"NewResolver\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"ttl\",\n                \"type\": \"uint64\"\n            }\n        ],\n        \"name\": \"NewTTL\",\n        \"type\": \"event\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"resolver\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"ttl\",\n                \"type\": \"uint64\"\n            }\n        ],\n        \"name\": \"setRecord\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"setApprovalForAll\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"ApprovalForAll\",\n        \"type\": \"event\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isApprovedForAll\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"recordExists\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"label\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"resolver\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"ttl\",\n                \"type\": \"uint64\"\n            }\n        ],\n        \"name\": \"setSubnodeRecord\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\nmodule.exports = REGISTRY;\n","\"use strict\";\nvar RESOLVER = [\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"interfaceID\",\n                \"type\": \"bytes4\"\n            }\n        ],\n        \"name\": \"supportsInterface\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"contentTypes\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ABI\",\n        \"outputs\": [\n            {\n                \"name\": \"contentType\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"hash\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"setMultihash\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"multihash\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"x\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"y\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"setPubkey\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"content\",\n        \"outputs\": [\n            {\n                \"name\": \"ret\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"addr\",\n        \"outputs\": [\n            {\n                \"name\": \"ret\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"contentType\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"setABI\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"name\": \"ret\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"name\",\n                \"type\": \"string\"\n            }\n        ],\n        \"name\": \"setName\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"hash\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"setContent\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"pubkey\",\n        \"outputs\": [\n            {\n                \"name\": \"x\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"y\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"addr\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setAddr\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"name\": \"ensAddr\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"a\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"AddrChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"hash\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"ContentChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"name\",\n                \"type\": \"string\"\n            }\n        ],\n        \"name\": \"NameChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": true,\n                \"name\": \"contentType\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ABIChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"x\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"y\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"PubkeyChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"hash\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"ContenthashChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"contenthash\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"hash\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"setContenthash\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\nmodule.exports = RESOLVER;\n"],"sourceRoot":""}