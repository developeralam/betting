{"version":3,"sources":["webpack:///./node_modules/color-string/index.js"],"names":["colorNames","swizzle","reverseNames","name","hasOwnProperty","cs","module","exports","to","get","clamp","num","min","max","Math","hexDouble","str","toString","toUpperCase","length","string","val","model","substring","toLowerCase","hsl","hwb","rgb","value","match","i","hexAlpha","i2","parseInt","slice","parseFloat","round","alpha","isNaN","hex","rgba","arguments","percent","r","g","b","hsla","hwba","a","keyword"],"mappings":"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","file":"js/vendor/color-string.js","sourcesContent":["/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d*\\.)?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = (parseFloat(match[1]) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n"],"sourceRoot":""}