{"version":3,"sources":["webpack:///./node_modules/create-ecdh/browser.js","webpack:///./node_modules/create-ecdh/node_modules/bn.js/lib/bn.js"],"names":["elliptic","BN","module","exports","curve","ECDH","aliases","secp256k1","name","byteLength","secp224r1","prime256v1","prime192v1","ed25519","secp384r1","secp521r1","this","curveType","ec","keys","formatReturnValue","bn","enc","len","Array","isArray","toArray","buf","Buffer","length","zeros","fill","concat","toString","p224","p256","secp256r1","p192","secp192r1","p384","p521","prototype","generateKeys","format","genKeyPair","getPublicKey","computeSecret","other","inenc","isBuffer","keyFromPublic","getPublic","mul","getPrivate","getX","key","getPrivateKey","setPublicKey","pub","_importPublic","setPrivateKey","priv","_priv","_importPrivate","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","constructor","number","base","endian","isBN","negative","words","red","_init","wordSize","e","parseHex","str","start","end","r","Math","min","i","c","charCodeAt","parseBase","num","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","strip","ceil","j","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","groupSizes","groupBases","smallMulTo","self","out","a","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p25519","MPrime","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u"],"mappings":"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","file":"js/vendor/create-ecdh.js","sourcesContent":["var elliptic = require('elliptic')\nvar BN = require('bn.js')\n\nmodule.exports = function createECDH (curve) {\n  return new ECDH(curve)\n}\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n}\n\naliases.p224 = aliases.secp224r1\naliases.p256 = aliases.secp256r1 = aliases.prime256v1\naliases.p192 = aliases.secp192r1 = aliases.prime192v1\naliases.p384 = aliases.secp384r1\naliases.p521 = aliases.secp521r1\n\nfunction ECDH (curve) {\n  this.curveType = aliases[curve]\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    }\n  }\n  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap\n  this.keys = void 0\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair()\n  return this.getPublicKey(enc, format)\n}\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8'\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc)\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic()\n  var out = otherPub.mul(this.keys.getPrivate()).getX()\n  return formatReturnValue(out, enc, this.curveType.byteLength)\n}\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true)\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7\n    } else {\n      key[0] = 6\n    }\n  }\n  return formatReturnValue(key, enc)\n}\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc)\n}\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc)\n  }\n  this.keys._importPublic(pub)\n  return this\n}\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc)\n  }\n\n  var _priv = new BN(priv)\n  _priv = _priv.toString(16)\n  this.keys = this.curve.genKeyPair()\n  this.keys._importPrivate(_priv)\n  return this\n}\n\nfunction formatReturnValue (bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray()\n  }\n  var buf = new Buffer(bn)\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length)\n    zeros.fill(0)\n    buf = Buffer.concat([zeros, buf])\n  }\n  if (!enc) {\n    return buf\n  } else {\n    return buf.toString(enc)\n  }\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"sourceRoot":""}