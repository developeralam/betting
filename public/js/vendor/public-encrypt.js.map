{"version":3,"sources":["webpack:///./node_modules/public-encrypt/browser.js","webpack:///./node_modules/public-encrypt/mgf.js","webpack:///./node_modules/public-encrypt/node_modules/bn.js/lib/bn.js","webpack:///./node_modules/public-encrypt/privateDecrypt.js","webpack:///./node_modules/public-encrypt/publicEncrypt.js","webpack:///./node_modules/public-encrypt/withPublic.js","webpack:///./node_modules/public-encrypt/xor.js"],"names":["exports","publicEncrypt","privateDecrypt","privateEncrypt","key","buf","publicDecrypt","createHash","Buffer","i2ops","c","out","allocUnsafe","writeUInt32BE","module","seed","len","t","alloc","i","length","concat","update","digest","slice","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","this","negative","words","red","_init","wordSize","e","parseHex","str","start","end","r","Math","min","charCodeAt","parseBase","mul","num","Array","isArray","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","strip","toArray","ceil","j","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","a","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","parseKeys","mgf","crt","withPublic","privateKey","enc","reverse","modulus","zBuffer","iHash","hLen","maskedSeed","maskedDb","db","from","dif","compare","oaep","p1","status","ps","pkcs1","randomBytes","publicKey","paddedMsg","mLen","hLen2","dblen","cache","cur","nonZero","publicExponent"],"mappings":"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","file":"js/vendor/public-encrypt.js","sourcesContent":["exports.publicEncrypt = require('./publicEncrypt')\nexports.privateDecrypt = require('./privateDecrypt')\n\nexports.privateEncrypt = function privateEncrypt (key, buf) {\n  return exports.publicEncrypt(key, buf, true)\n}\n\nexports.publicDecrypt = function publicDecrypt (key, buf) {\n  return exports.privateDecrypt(key, buf, true)\n}\n","var createHash = require('create-hash')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (seed, len) {\n  var t = Buffer.alloc(0)\n  var i = 0\n  var c\n  while (t.length < len) {\n    c = i2ops(i++)\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])\n  }\n  return t.slice(0, len)\n}\n\nfunction i2ops (c) {\n  var out = Buffer.allocUnsafe(4)\n  out.writeUInt32BE(c, 0)\n  return out\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var parseKeys = require('parse-asn1')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar crt = require('browserify-rsa')\nvar createHash = require('create-hash')\nvar withPublic = require('./withPublic')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function privateDecrypt (privateKey, enc, reverse) {\n  var padding\n  if (privateKey.padding) {\n    padding = privateKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n\n  var key = parseKeys(privateKey)\n  var k = key.modulus.byteLength()\n  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error')\n  }\n  var msg\n  if (reverse) {\n    msg = withPublic(new BN(enc), key)\n  } else {\n    msg = crt(enc, key)\n  }\n  var zBuffer = Buffer.alloc(k - msg.length)\n  msg = Buffer.concat([zBuffer, msg], k)\n  if (padding === 4) {\n    return oaep(key, msg)\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    return msg\n  } else {\n    throw new Error('unknown padding')\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  if (msg[0] !== 0) {\n    throw new Error('decryption error')\n  }\n  var maskedSeed = msg.slice(1, hLen + 1)\n  var maskedDb = msg.slice(hLen + 1)\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen))\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1))\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error')\n  }\n  var i = hLen\n  while (db[i] === 0) {\n    i++\n  }\n  if (db[i++] !== 1) {\n    throw new Error('decryption error')\n  }\n  return db.slice(i)\n}\n\nfunction pkcs1 (key, msg, reverse) {\n  var p1 = msg.slice(0, 2)\n  var i = 2\n  var status = 0\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++\n      break\n    }\n  }\n  var ps = msg.slice(2, i - 1)\n\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {\n    status++\n  }\n  if (ps.length < 8) {\n    status++\n  }\n  if (status) {\n    throw new Error('decryption error')\n  }\n  return msg.slice(i)\n}\nfunction compare (a, b) {\n  a = Buffer.from(a)\n  b = Buffer.from(b)\n  var dif = 0\n  var len = a.length\n  if (a.length !== b.length) {\n    dif++\n    len = Math.min(a.length, b.length)\n  }\n  var i = -1\n  while (++i < len) {\n    dif += (a[i] ^ b[i])\n  }\n  return dif\n}\n","var parseKeys = require('parse-asn1')\nvar randomBytes = require('randombytes')\nvar createHash = require('create-hash')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar withPublic = require('./withPublic')\nvar crt = require('browserify-rsa')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function publicEncrypt (publicKey, msg, reverse) {\n  var padding\n  if (publicKey.padding) {\n    padding = publicKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n  var key = parseKeys(publicKey)\n  var paddedMsg\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg)\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    paddedMsg = new BN(msg)\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus')\n    }\n  } else {\n    throw new Error('unknown padding')\n  }\n  if (reverse) {\n    return crt(paddedMsg, key)\n  } else {\n    return withPublic(paddedMsg, key)\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var mLen = msg.length\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  var hLen2 = 2 * hLen\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long')\n  }\n  var ps = Buffer.alloc(k - mLen - hLen2 - 2)\n  var dblen = k - hLen - 1\n  var seed = randomBytes(hLen)\n  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen))\n  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))\n}\nfunction pkcs1 (key, msg, reverse) {\n  var mLen = msg.length\n  var k = key.modulus.byteLength()\n  if (mLen > k - 11) {\n    throw new Error('message too long')\n  }\n  var ps\n  if (reverse) {\n    ps = Buffer.alloc(k - mLen - 3, 0xff)\n  } else {\n    ps = nonZero(k - mLen - 3)\n  }\n  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))\n}\nfunction nonZero (len) {\n  var out = Buffer.allocUnsafe(len)\n  var i = 0\n  var cache = randomBytes(len * 2)\n  var cur = 0\n  var num\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len * 2)\n      cur = 0\n    }\n    num = cache[cur++]\n    if (num) {\n      out[i++] = num\n    }\n  }\n  return out\n}\n","var BN = require('bn.js')\nvar Buffer = require('safe-buffer').Buffer\n\nfunction withPublic (paddedMsg, key) {\n  return Buffer.from(paddedMsg\n    .toRed(BN.mont(key.modulus))\n    .redPow(new BN(key.publicExponent))\n    .fromRed()\n    .toArray())\n}\n\nmodule.exports = withPublic\n","module.exports = function xor (a, b) {\n  var len = a.length\n  var i = -1\n  while (++i < len) {\n    a[i] ^= b[i]\n  }\n  return a\n}\n"],"sourceRoot":""}