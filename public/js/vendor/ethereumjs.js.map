{"version":3,"sources":["webpack:///./node_modules/@ethereumjs/common/dist.browser/chains/index.js","webpack:///./node_modules/@ethereumjs/common/dist.browser/eips/index.js","webpack:///./node_modules/@ethereumjs/common/dist.browser/hardforks/index.js","webpack:///./node_modules/@ethereumjs/common/dist.browser/index.js","webpack:///./node_modules/@ethereumjs/tx/dist.browser/baseTransaction.js","webpack:///./node_modules/@ethereumjs/tx/dist.browser/eip1559Transaction.js","webpack:///./node_modules/@ethereumjs/tx/dist.browser/eip2930Transaction.js","webpack:///./node_modules/@ethereumjs/tx/dist.browser/index.js","webpack:///./node_modules/@ethereumjs/tx/dist.browser/legacyTransaction.js","webpack:///./node_modules/@ethereumjs/tx/dist.browser/transactionFactory.js","webpack:///./node_modules/@ethereumjs/tx/dist.browser/types.js","webpack:///./node_modules/@ethereumjs/tx/dist.browser/util.js"],"names":["__values","this","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__importDefault","mod","__esModule","Object","defineProperty","exports","chains","_getInitializedChains","mainnet_json_1","ropsten_json_1","rinkeby_json_1","kovan_json_1","goerli_json_1","sepolia_json_1","customChains","e_1","_a","names","mainnet","default","ropsten","rinkeby","kovan","goerli","sepolia","customChains_1","customChains_1_1","chain","name_1","name","chainId","toString","e_1_1","error","return","EIPs","1153","1559","2315","2537","2565","2718","2929","2930","3198","3529","3540","3541","3554","3607","3651","3670","3675","3855","3860","4345","4399","hardforks","extendStatics","__extends","d","b","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","String","__","constructor","create","__assign","assign","t","n","arguments","apply","ConsensusAlgorithm","ConsensusType","Hardfork","Chain","CustomChain","events_1","crc_32_1","ethereumjs_util_1","chains_1","hardforks_1","eips_1","Common","_super","opts","_b","_c","_this","_supportedHardforks","_eips","_customChains","_chainParams","setChain","DEFAULT_HARDFORK","defaultHardfork","Istanbul","_d","_e","hf","forkHash","_calcForkHash","_hardfork","supportedHardforks","hardfork","setHardfork","eips","setEIPs","custom","chainParamsOrName","baseChain","standardChainParams","_getChainParams","PolygonMainnet","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","Error","concat","forCustomChain","customChainParams","isSupportedChainId","initializedChains","Boolean","BN","isBN","e_2","plainCustomChains","isArray","map","e","required_1","required_1_1","param","undefined","e_2_1","e_3","_isSupportedHardfork","existing","HARDFORK_CHANGES_1","HARDFORK_CHANGES_1_1","emit","e_3_1","getHardforkByBlockNumber","blockNumber","td","e_4","toType","TypeOutput","minTdHF","maxTdHF","previousHF","Chainstart","block","gte","e_4_1","msgAdd","hardforkGteHardfork","msg","setHardforkByBlockNumber","_chooseHardfork","onlySupported","_getHardfork","e_5","hfs","hfs_1","hfs_1_1","e_5_1","chainName","e_6","e_6_1","e_7","_loop_1","eip","minHF","this_1","gteHardfork","requiredEIPs","forEach","elem","includes","isActivatedEIP","eips_2","eips_2_1","e_7_1","topic","e_8","paramByEIP","e_8_1","paramByHardfork","e_9","e_10","HARDFORK_CHANGES_2","HARDFORK_CHANGES_2_1","hfChanges","hfEIPs","hfEIPs_1","hfEIPs_1_1","valueEIP","e_10_1","v","e_9_1","eipParams","paramByBlock","activeHfs","activeHardforks","e_11","HARDFORK_CHANGES_3","HARDFORK_CHANGES_3_1","e_11_1","hardforkIsActiveOnBlock","hfBlock","hardforkBlockBN","activeOnBlock","hardfork1","hardfork2","e_12","onlyActive","posHf1","posHf2","index","hardforks_2","hardforks_2_1","e_12_1","hardforkIsActiveOnChain","e_13","e_13_1","e_14","hfs_2","hfs_2_1","push","e_14_1","activeHardfork","hardforkBlock","Number","hardforkTD","isHardforkBlock","eq","nextHardforkBlock","nextHardforkBlockBN","reduce","acc","gt","isNextHardforkBlock","e_15","genesis","Buffer","from","hash","substr","hfBuffer","alloc","prevBlock","hfBlockBuffer","padStart","e_15_1","inputBuffer","forkhash","intToBuffer","buf","data","hardforkForForkHash","resArray","filter","genesisState","e_16","chainArrayWithGenesis","e_16_1","bootstrapNodes","dnsNetworks","chainIdBN","networkIdBN","consensusType","e_17","HARDFORK_CHANGES_4","HARDFORK_CHANGES_4_1","e_17_1","consensusAlgorithm","e_18","HARDFORK_CHANGES_5","HARDFORK_CHANGES_5_1","e_18_1","consensusConfig","e_19","HARDFORK_CHANGES_6","HARDFORK_CHANGES_6_1","e_19_1","copy","getPrototypeOf","removeAllListeners","EventEmitter","__createBinding","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","get","__setModuleDefault","__importStar","result","__read","r","ar","BaseTransaction","common_1","types_1","txData","cache","dataFee","activeCapabilities","DEFAULT_CHAIN","Mainnet","nonce","gasLimit","to","type","_type","toBuffer","toNumber","toB","vB","rB","sB","Address","_validateCannotExceedMaxInteger","supports","capability","validate","stringError","errors","getBaseFee","isSigned","verifySignature","fee","getDataFee","addn","common","toCreationAddress","iaddn","txDataZero","txDataNonZero","cost","dataLength","Math","ceil","initCodeCost","imuln","iadd","publicKey","getSenderPublicKey","unpadBuffer","getSenderAddress","publicToAddress","sign","privateKey","_errorMsg","hackApplied","Capability","EIP155ReplayProtection","msgHash","getMessageToSign","ecsign","tx","_processSignature","indexOf","splice","_getCommon","values","bits","cannotEqual","entries","key","MAX_UINT64","MAX_INTEGER","_getSharedErrorPostfix","bufferToHex","postfix","baseTransaction_1","util_1","TRANSACTION_TYPE_BUFFER","FeeMarketEIP1559Transaction","accessList","maxFeePerGas","maxPriorityFeePerGas","accessListData","AccessLists","getAccessListData","AccessListJSON","verifyAccessList","mul","lt","eqn","N_DIV_2","checkMaxInitCodeSize","freeze","fromTxData","fromSerializedTx","serialized","slice","equals","rlp","decode","fromValuesArray","fromRlpSerializedTx","validateNoLeadingZeroes","getDataFeeEIP2930","isFrozen","getUpfrontCost","baseFee","gasPrice","min","sub","add","raw","bnToUnpaddedBuffer","serialize","base","encode","hashMessage","message","keccak256","getMessageToVerifySignature","ecrecover","toJSON","accessListJSON","getAccessListJSON","bnToHex","errorStr","AccessListEIP2930Transaction","yParity","__exportStar","TransactionFactory","Transaction","legacyTransaction_1","eip2930Transaction_1","transactionFactory_1","eip1559Transaction_1","_validateTxV","chainIdDoubled","muln","_getMessageToSign","rlphash","vBN","numSub","subn","isEven","divn","_unsignedTxImplementsEIP155","_signedTxImplementsEIP155","onEIP155BlockOrLater","_1","txOptions","txType","fromSerializedData","EIP","fromBlockBodyData","isBuffer","getTransactionClass","transactionID","_common","isAccessList","isAccessListBuffer","input","firstItem","bufferAccessList","newAccessList","item","addressBuffer","address","storageItems","storageKeys","json","jsonItem","accessListItem","storageSlots","storageSlot","JSONItem","setLengthLeft","slot","accessListStorageKeyCost","accessListAddressCost","slots"],"mappings":"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","file":"js/vendor/ethereumjs.js","sourcesContent":["\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chains = exports._getInitializedChains = void 0;\nvar mainnet_json_1 = __importDefault(require(\"./mainnet.json\"));\nvar ropsten_json_1 = __importDefault(require(\"./ropsten.json\"));\nvar rinkeby_json_1 = __importDefault(require(\"./rinkeby.json\"));\nvar kovan_json_1 = __importDefault(require(\"./kovan.json\"));\nvar goerli_json_1 = __importDefault(require(\"./goerli.json\"));\nvar sepolia_json_1 = __importDefault(require(\"./sepolia.json\"));\n/**\n * @hidden\n */\nfunction _getInitializedChains(customChains) {\n    var e_1, _a;\n    var names = {\n        '1': 'mainnet',\n        '3': 'ropsten',\n        '4': 'rinkeby',\n        '42': 'kovan',\n        '5': 'goerli',\n        '11155111': 'sepolia',\n    };\n    var chains = {\n        mainnet: mainnet_json_1.default,\n        ropsten: ropsten_json_1.default,\n        rinkeby: rinkeby_json_1.default,\n        kovan: kovan_json_1.default,\n        goerli: goerli_json_1.default,\n        sepolia: sepolia_json_1.default,\n    };\n    if (customChains) {\n        try {\n            for (var customChains_1 = __values(customChains), customChains_1_1 = customChains_1.next(); !customChains_1_1.done; customChains_1_1 = customChains_1.next()) {\n                var chain = customChains_1_1.value;\n                var name_1 = chain.name;\n                names[chain.chainId.toString()] = name_1;\n                chains[name_1] = chain;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (customChains_1_1 && !customChains_1_1.done && (_a = customChains_1.return)) _a.call(customChains_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    chains['names'] = names;\n    return chains;\n}\nexports._getInitializedChains = _getInitializedChains;\n/**\n * @deprecated this constant will be internalized (removed)\n * on next major version update\n */\nexports.chains = _getInitializedChains();\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIPs = void 0;\nexports.EIPs = {\n    1153: require('./1153.json'),\n    1559: require('./1559.json'),\n    2315: require('./2315.json'),\n    2537: require('./2537.json'),\n    2565: require('./2565.json'),\n    2718: require('./2718.json'),\n    2929: require('./2929.json'),\n    2930: require('./2930.json'),\n    3198: require('./3198.json'),\n    3529: require('./3529.json'),\n    3540: require('./3540.json'),\n    3541: require('./3541.json'),\n    3554: require('./3554.json'),\n    3607: require('./3607.json'),\n    3651: require('./3651.json'),\n    3670: require('./3670.json'),\n    3675: require('./3675.json'),\n    3855: require('./3855.json'),\n    3860: require('./3860.json'),\n    4345: require('./4345.json'),\n    4399: require('./4399.json'),\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hardforks = void 0;\nexports.hardforks = [\n    ['chainstart', require('./chainstart.json')],\n    ['homestead', require('./homestead.json')],\n    ['dao', require('./dao.json')],\n    ['tangerineWhistle', require('./tangerineWhistle.json')],\n    ['spuriousDragon', require('./spuriousDragon.json')],\n    ['byzantium', require('./byzantium.json')],\n    ['constantinople', require('./constantinople.json')],\n    ['petersburg', require('./petersburg.json')],\n    ['istanbul', require('./istanbul.json')],\n    ['muirGlacier', require('./muirGlacier.json')],\n    ['berlin', require('./berlin.json')],\n    ['london', require('./london.json')],\n    ['shanghai', require('./shanghai.json')],\n    ['arrowGlacier', require('./arrowGlacier.json')],\n    ['mergeForkIdTransition', require('./mergeForkIdTransition.json')],\n    ['merge', require('./merge.json')],\n];\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsensusAlgorithm = exports.ConsensusType = exports.Hardfork = exports.Chain = exports.CustomChain = void 0;\nvar events_1 = require(\"events\");\nvar crc_32_1 = require(\"crc-32\");\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar chains_1 = require(\"./chains\");\nvar hardforks_1 = require(\"./hardforks\");\nvar eips_1 = require(\"./eips\");\nvar CustomChain;\n(function (CustomChain) {\n    /**\n     * Polygon (Matic) Mainnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMainnet\"] = \"polygon-mainnet\";\n    /**\n     * Polygon (Matic) Mumbai Testnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMumbai\"] = \"polygon-mumbai\";\n    /**\n     * Arbitrum Rinkeby Testnet\n     *\n     * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n     */\n    CustomChain[\"ArbitrumRinkebyTestnet\"] = \"arbitrum-rinkeby-testnet\";\n    /**\n     * xDai EVM sidechain with a native stable token\n     *\n     * - [Documentation](https://www.xdaichain.com/)\n     */\n    CustomChain[\"xDaiChain\"] = \"x-dai-chain\";\n    /**\n     * Optimistic Kovan - testnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticKovan\"] = \"optimistic-kovan\";\n    /**\n     * Optimistic Ethereum - mainnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticEthereum\"] = \"optimistic-ethereum\";\n})(CustomChain = exports.CustomChain || (exports.CustomChain = {}));\nvar Chain;\n(function (Chain) {\n    Chain[Chain[\"Mainnet\"] = 1] = \"Mainnet\";\n    Chain[Chain[\"Ropsten\"] = 3] = \"Ropsten\";\n    Chain[Chain[\"Rinkeby\"] = 4] = \"Rinkeby\";\n    Chain[Chain[\"Kovan\"] = 42] = \"Kovan\";\n    Chain[Chain[\"Goerli\"] = 5] = \"Goerli\";\n    Chain[Chain[\"Sepolia\"] = 11155111] = \"Sepolia\";\n})(Chain = exports.Chain || (exports.Chain = {}));\nvar Hardfork;\n(function (Hardfork) {\n    Hardfork[\"Chainstart\"] = \"chainstart\";\n    Hardfork[\"Homestead\"] = \"homestead\";\n    Hardfork[\"Dao\"] = \"dao\";\n    Hardfork[\"TangerineWhistle\"] = \"tangerineWhistle\";\n    Hardfork[\"SpuriousDragon\"] = \"spuriousDragon\";\n    Hardfork[\"Byzantium\"] = \"byzantium\";\n    Hardfork[\"Constantinople\"] = \"constantinople\";\n    Hardfork[\"Petersburg\"] = \"petersburg\";\n    Hardfork[\"Istanbul\"] = \"istanbul\";\n    Hardfork[\"MuirGlacier\"] = \"muirGlacier\";\n    Hardfork[\"Berlin\"] = \"berlin\";\n    Hardfork[\"London\"] = \"london\";\n    Hardfork[\"ArrowGlacier\"] = \"arrowGlacier\";\n    Hardfork[\"Shanghai\"] = \"shanghai\";\n    Hardfork[\"MergeForkIdTransition\"] = \"mergeForkIdTransition\";\n    Hardfork[\"Merge\"] = \"merge\";\n})(Hardfork = exports.Hardfork || (exports.Hardfork = {}));\nvar ConsensusType;\n(function (ConsensusType) {\n    ConsensusType[\"ProofOfStake\"] = \"pos\";\n    ConsensusType[\"ProofOfWork\"] = \"pow\";\n    ConsensusType[\"ProofOfAuthority\"] = \"poa\";\n})(ConsensusType = exports.ConsensusType || (exports.ConsensusType = {}));\nvar ConsensusAlgorithm;\n(function (ConsensusAlgorithm) {\n    ConsensusAlgorithm[\"Ethash\"] = \"ethash\";\n    ConsensusAlgorithm[\"Clique\"] = \"clique\";\n    ConsensusAlgorithm[\"Casper\"] = \"casper\";\n})(ConsensusAlgorithm = exports.ConsensusAlgorithm || (exports.ConsensusAlgorithm = {}));\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nvar Common = /** @class */ (function (_super) {\n    __extends(Common, _super);\n    /**\n     *\n     * @constructor\n     */\n    function Common(opts) {\n        var e_1, _a;\n        var _this = this;\n        var _b, _c;\n        _this = _super.call(this) || this;\n        _this._supportedHardforks = [];\n        _this._eips = [];\n        _this._customChains = (_b = opts.customChains) !== null && _b !== void 0 ? _b : [];\n        _this._chainParams = _this.setChain(opts.chain);\n        _this.DEFAULT_HARDFORK = (_c = _this._chainParams.defaultHardfork) !== null && _c !== void 0 ? _c : Hardfork.Istanbul;\n        try {\n            for (var _d = __values(_this._chainParams.hardforks), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var hf = _e.value;\n                if (!hf.forkHash) {\n                    hf.forkHash = _this._calcForkHash(hf.name);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        _this._hardfork = _this.DEFAULT_HARDFORK;\n        if (opts.supportedHardforks) {\n            _this._supportedHardforks = opts.supportedHardforks;\n        }\n        if (opts.hardfork) {\n            _this.setHardfork(opts.hardfork);\n        }\n        if (opts.eips) {\n            _this.setEIPs(opts.eips);\n        }\n        return _this;\n    }\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one.\n     *\n     * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n     * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n     *\n     * ```javascript\n     * Common.custom({chainId: 123})\n     * ```\n     *\n     * There are also selected supported custom chains which can be initialized by using one of the\n     * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n     *\n     * ```javascript\n     * Common.custom(CustomChains.MaticMumbai)\n     * ```\n     *\n     * Note that these supported custom chains only provide some base parameters (usually the chain and\n     * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n     * the `@ethereumjs/tx` library to a Layer-2 chain).\n     *\n     * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n     * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n     */\n    Common.custom = function (chainParamsOrName, opts) {\n        var _a;\n        if (opts === void 0) { opts = {}; }\n        var baseChain = (_a = opts.baseChain) !== null && _a !== void 0 ? _a : 'mainnet';\n        var standardChainParams = __assign({}, Common._getChainParams(baseChain));\n        standardChainParams['name'] = 'custom-chain';\n        if (typeof chainParamsOrName !== 'string') {\n            return new Common(__assign({ chain: __assign(__assign({}, standardChainParams), chainParamsOrName) }, opts));\n        }\n        else {\n            if (chainParamsOrName === CustomChain.PolygonMainnet) {\n                return Common.custom({\n                    name: CustomChain.PolygonMainnet,\n                    chainId: 137,\n                    networkId: 137,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.PolygonMumbai) {\n                return Common.custom({\n                    name: CustomChain.PolygonMumbai,\n                    chainId: 80001,\n                    networkId: 80001,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n                return Common.custom({\n                    name: CustomChain.ArbitrumRinkebyTestnet,\n                    chainId: 421611,\n                    networkId: 421611,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.xDaiChain) {\n                return Common.custom({\n                    name: CustomChain.xDaiChain,\n                    chainId: 100,\n                    networkId: 100,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.OptimisticKovan) {\n                return Common.custom({\n                    name: CustomChain.OptimisticKovan,\n                    chainId: 69,\n                    networkId: 69,\n                }, __assign({ hardfork: Hardfork.Berlin }, opts));\n            }\n            if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n                return Common.custom({\n                    name: CustomChain.OptimisticEthereum,\n                    chainId: 10,\n                    networkId: 10,\n                }, __assign({ hardfork: Hardfork.Berlin }, opts));\n            }\n            throw new Error(\"Custom chain \".concat(chainParamsOrName, \" not supported\"));\n        }\n    };\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n     * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n     *\n     * @deprecated Use {@link Common.custom} instead\n     *\n     * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n     * chain params on.\n     * @param customChainParams The custom parameters of the chain.\n     * @param hardfork String identifier ('byzantium') for hardfork (optional)\n     * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n     */\n    Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n        var standardChainParams = Common._getChainParams(baseChain);\n        return new Common({\n            chain: __assign(__assign({}, standardChainParams), customChainParams),\n            hardfork: hardfork,\n            supportedHardforks: supportedHardforks,\n        });\n    };\n    /**\n     * Static method to determine if a {@link chainId} is supported as a standard chain\n     * @param chainId BN id (`1`) of a standard chain\n     * @returns boolean\n     */\n    Common.isSupportedChainId = function (chainId) {\n        var initializedChains = (0, chains_1._getInitializedChains)();\n        return Boolean(initializedChains['names'][chainId.toString()]);\n    };\n    Common._getChainParams = function (chain, customChains) {\n        var initializedChains = (0, chains_1._getInitializedChains)(customChains);\n        if (typeof chain === 'number' || ethereumjs_util_1.BN.isBN(chain)) {\n            chain = chain.toString();\n            if (initializedChains['names'][chain]) {\n                var name_1 = initializedChains['names'][chain];\n                return initializedChains[name_1];\n            }\n            throw new Error(\"Chain with ID \".concat(chain, \" not supported\"));\n        }\n        if (initializedChains[chain]) {\n            return initializedChains[chain];\n        }\n        throw new Error(\"Chain with name \".concat(chain, \" not supported\"));\n    };\n    /**\n     * Sets the chain\n     * @param chain String ('mainnet') or Number (1) chain\n     *     representation. Or, a Dictionary of chain parameters for a private network.\n     * @returns The dictionary with parameters set as chain\n     */\n    Common.prototype.setChain = function (chain) {\n        var e_2, _a;\n        if (typeof chain === 'number' || typeof chain === 'string' || ethereumjs_util_1.BN.isBN(chain)) {\n            // Filter out genesis states if passed in to customChains\n            var plainCustomChains = void 0;\n            if (this._customChains &&\n                this._customChains.length > 0 &&\n                Array.isArray(this._customChains[0])) {\n                plainCustomChains = this._customChains.map(function (e) { return e[0]; });\n            }\n            else {\n                plainCustomChains = this._customChains;\n            }\n            this._chainParams = Common._getChainParams(chain, plainCustomChains);\n        }\n        else if (typeof chain === 'object') {\n            if (this._customChains.length > 0) {\n                throw new Error('Chain must be a string, number, or BN when initialized with customChains passed in');\n            }\n            var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n            try {\n                for (var required_1 = __values(required), required_1_1 = required_1.next(); !required_1_1.done; required_1_1 = required_1.next()) {\n                    var param = required_1_1.value;\n                    if (chain[param] === undefined) {\n                        throw new Error(\"Missing required chain parameter: \".concat(param));\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (required_1_1 && !required_1_1.done && (_a = required_1.return)) _a.call(required_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            this._chainParams = chain;\n        }\n        else {\n            throw new Error('Wrong input format');\n        }\n        return this._chainParams;\n    };\n    /**\n     * Sets the hardfork to get params for\n     * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n     */\n    Common.prototype.setHardfork = function (hardfork) {\n        var e_3, _a;\n        if (!this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n        }\n        var existing = false;\n        try {\n            for (var HARDFORK_CHANGES_1 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next(); !HARDFORK_CHANGES_1_1.done; HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next()) {\n                var hfChanges = HARDFORK_CHANGES_1_1.value;\n                if (hfChanges[0] === hardfork) {\n                    if (this._hardfork !== hardfork) {\n                        this._hardfork = hardfork;\n                        this.emit('hardforkChanged', hardfork);\n                    }\n                    existing = true;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_1_1 && !HARDFORK_CHANGES_1_1.done && (_a = HARDFORK_CHANGES_1.return)) _a.call(HARDFORK_CHANGES_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        if (!existing) {\n            throw new Error(\"Hardfork with name \".concat(hardfork, \" not supported\"));\n        }\n    };\n    /**\n     * Returns the hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @returns The name of the HF\n     */\n    Common.prototype.getHardforkByBlockNumber = function (blockNumber, td) {\n        var e_4, _a;\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        td = (0, ethereumjs_util_1.toType)(td, ethereumjs_util_1.TypeOutput.BN);\n        var hardfork = Hardfork.Chainstart;\n        var minTdHF;\n        var maxTdHF;\n        var previousHF;\n        try {\n            for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var hf = _c.value;\n                // Skip comparison for not applied HFs\n                if (hf.block === null) {\n                    if (td !== undefined && td !== null && hf.td !== undefined && hf.td !== null) {\n                        if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n                            return hf.name;\n                        }\n                    }\n                    continue;\n                }\n                if (blockNumber.gte(new ethereumjs_util_1.BN(hf.block))) {\n                    hardfork = hf.name;\n                }\n                if (td && hf.td) {\n                    if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n                        minTdHF = hf.name;\n                    }\n                    else {\n                        maxTdHF = previousHF;\n                    }\n                }\n                previousHF = hf.name;\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        if (td) {\n            var msgAdd = \"block number: \".concat(blockNumber, \" (-> \").concat(hardfork, \"), \");\n            if (minTdHF) {\n                if (!this.hardforkGteHardfork(hardfork, minTdHF)) {\n                    var msg = 'HF determined by block number is lower than the minimum total difficulty HF';\n                    msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(minTdHF, \")\");\n                    throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n                }\n            }\n            if (maxTdHF) {\n                if (!this.hardforkGteHardfork(maxTdHF, hardfork)) {\n                    var msg = 'Maximum HF determined by total difficulty is lower than the block number HF';\n                    msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(maxTdHF, \")\");\n                    throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n                }\n            }\n        }\n        return hardfork;\n    };\n    /**\n     * Sets a new hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @returns The name of the HF set\n     */\n    Common.prototype.setHardforkByBlockNumber = function (blockNumber, td) {\n        var hardfork = this.getHardforkByBlockNumber(blockNumber, td);\n        this.setHardfork(hardfork);\n        return hardfork;\n    };\n    /**\n     * Internal helper function to choose between hardfork set and hardfork provided as param\n     * @param hardfork Hardfork given to function as a parameter\n     * @returns Hardfork chosen to be used\n     */\n    Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n        if (onlySupported === void 0) { onlySupported = true; }\n        if (!hardfork) {\n            hardfork = this._hardfork;\n        }\n        else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n        }\n        return hardfork;\n    };\n    /**\n     * Internal helper function, returns the params for the given hardfork for the chain set\n     * @param hardfork Hardfork name\n     * @returns Dictionary with hardfork params\n     */\n    Common.prototype._getHardfork = function (hardfork) {\n        var e_5, _a;\n        var hfs = this.hardforks();\n        try {\n            for (var hfs_1 = __values(hfs), hfs_1_1 = hfs_1.next(); !hfs_1_1.done; hfs_1_1 = hfs_1.next()) {\n                var hf = hfs_1_1.value;\n                if (hf['name'] === hardfork)\n                    return hf;\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (hfs_1_1 && !hfs_1_1.done && (_a = hfs_1.return)) _a.call(hfs_1);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        throw new Error(\"Hardfork \".concat(hardfork, \" not defined for chain \").concat(this.chainName()));\n    };\n    /**\n     * Internal helper function to check if a hardfork is set to be supported by the library\n     * @param hardfork Hardfork name\n     * @returns True if hardfork is supported\n     */\n    Common.prototype._isSupportedHardfork = function (hardfork) {\n        var e_6, _a;\n        if (this._supportedHardforks.length > 0) {\n            try {\n                for (var _b = __values(this._supportedHardforks), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var supportedHf = _c.value;\n                    if (hardfork === supportedHf)\n                        return true;\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n        }\n        else {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Sets the active EIPs\n     * @param eips\n     */\n    Common.prototype.setEIPs = function (eips) {\n        var e_7, _a;\n        var _this = this;\n        if (eips === void 0) { eips = []; }\n        var _loop_1 = function (eip) {\n            if (!(eip in eips_1.EIPs)) {\n                throw new Error(\"\".concat(eip, \" not supported\"));\n            }\n            var minHF = this_1.gteHardfork(eips_1.EIPs[eip]['minimumHardfork']);\n            if (!minHF) {\n                throw new Error(\"\".concat(eip, \" cannot be activated on hardfork \").concat(this_1.hardfork(), \", minimumHardfork: \").concat(minHF));\n            }\n            if (eips_1.EIPs[eip].requiredEIPs) {\n                ;\n                eips_1.EIPs[eip].requiredEIPs.forEach(function (elem) {\n                    if (!(eips.includes(elem) || _this.isActivatedEIP(elem))) {\n                        throw new Error(\"\".concat(eip, \" requires EIP \").concat(elem, \", but is not included in the EIP list\"));\n                    }\n                });\n            }\n        };\n        var this_1 = this;\n        try {\n            for (var eips_2 = __values(eips), eips_2_1 = eips_2.next(); !eips_2_1.done; eips_2_1 = eips_2.next()) {\n                var eip = eips_2_1.value;\n                _loop_1(eip);\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (eips_2_1 && !eips_2_1.done && (_a = eips_2.return)) _a.call(eips_2);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        this._eips = eips;\n    };\n    /**\n     * Returns a parameter for the current chain setup\n     *\n     * If the parameter is present in an EIP, the EIP always takes precendence.\n     * Otherwise the parameter if taken from the latest applied HF with\n     * a change on the respective parameter.\n     *\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.param = function (topic, name) {\n        var e_8, _a;\n        // TODO: consider the case that different active EIPs\n        // can change the same parameter\n        var value = null;\n        try {\n            for (var _b = __values(this._eips), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var eip = _c.value;\n                value = this.paramByEIP(topic, name, eip);\n                if (value !== null) {\n                    return value;\n                }\n            }\n        }\n        catch (e_8_1) { e_8 = { error: e_8_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_8) throw e_8.error; }\n        }\n        return this.paramByHardfork(topic, name, this._hardfork);\n    };\n    /**\n     * Returns the parameter corresponding to a hardfork\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param hardfork Hardfork name\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.paramByHardfork = function (topic, name, hardfork) {\n        var e_9, _a, e_10, _b;\n        hardfork = this._chooseHardfork(hardfork);\n        var value = null;\n        try {\n            for (var HARDFORK_CHANGES_2 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next(); !HARDFORK_CHANGES_2_1.done; HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next()) {\n                var hfChanges = HARDFORK_CHANGES_2_1.value;\n                // EIP-referencing HF file (e.g. berlin.json)\n                if ('eips' in hfChanges[1]) {\n                    var hfEIPs = hfChanges[1]['eips'];\n                    try {\n                        for (var hfEIPs_1 = (e_10 = void 0, __values(hfEIPs)), hfEIPs_1_1 = hfEIPs_1.next(); !hfEIPs_1_1.done; hfEIPs_1_1 = hfEIPs_1.next()) {\n                            var eip = hfEIPs_1_1.value;\n                            var valueEIP = this.paramByEIP(topic, name, eip);\n                            value = valueEIP !== null ? valueEIP : value;\n                        }\n                    }\n                    catch (e_10_1) { e_10 = { error: e_10_1 }; }\n                    finally {\n                        try {\n                            if (hfEIPs_1_1 && !hfEIPs_1_1.done && (_b = hfEIPs_1.return)) _b.call(hfEIPs_1);\n                        }\n                        finally { if (e_10) throw e_10.error; }\n                    }\n                    // Paramater-inlining HF file (e.g. istanbul.json)\n                }\n                else {\n                    if (!hfChanges[1][topic]) {\n                        throw new Error(\"Topic \".concat(topic, \" not defined\"));\n                    }\n                    if (hfChanges[1][topic][name] !== undefined) {\n                        value = hfChanges[1][topic][name].v;\n                    }\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_9_1) { e_9 = { error: e_9_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_2_1 && !HARDFORK_CHANGES_2_1.done && (_a = HARDFORK_CHANGES_2.return)) _a.call(HARDFORK_CHANGES_2);\n            }\n            finally { if (e_9) throw e_9.error; }\n        }\n        return value;\n    };\n    /**\n     * Returns a parameter corresponding to an EIP\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param eip Number of the EIP\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.paramByEIP = function (topic, name, eip) {\n        if (!(eip in eips_1.EIPs)) {\n            throw new Error(\"\".concat(eip, \" not supported\"));\n        }\n        var eipParams = eips_1.EIPs[eip];\n        if (!(topic in eipParams)) {\n            throw new Error(\"Topic \".concat(topic, \" not defined\"));\n        }\n        if (eipParams[topic][name] === undefined) {\n            return null;\n        }\n        var value = eipParams[topic][name].v;\n        return value;\n    };\n    /**\n     * Returns a parameter for the hardfork active on block number\n     * @param topic Parameter topic\n     * @param name Parameter name\n     * @param blockNumber Block number\n     */\n    Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n        var activeHfs = this.activeHardforks(blockNumber);\n        var hardfork = activeHfs[activeHfs.length - 1]['name'];\n        return this.paramByHardfork(topic, name, hardfork);\n    };\n    /**\n     * Checks if an EIP is activated by either being included in the EIPs\n     * manually passed in with the {@link CommonOpts.eips} or in a\n     * hardfork currently being active\n     *\n     * Note: this method only works for EIPs being supported\n     * by the {@link CommonOpts.eips} constructor option\n     * @param eip\n     */\n    Common.prototype.isActivatedEIP = function (eip) {\n        var e_11, _a;\n        if (this.eips().includes(eip)) {\n            return true;\n        }\n        try {\n            for (var HARDFORK_CHANGES_3 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next(); !HARDFORK_CHANGES_3_1.done; HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next()) {\n                var hfChanges = HARDFORK_CHANGES_3_1.value;\n                var hf = hfChanges[1];\n                if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n                    if (hf['eips'].includes(eip)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        catch (e_11_1) { e_11 = { error: e_11_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_3_1 && !HARDFORK_CHANGES_3_1.done && (_a = HARDFORK_CHANGES_3.return)) _a.call(HARDFORK_CHANGES_3);\n            }\n            finally { if (e_11) throw e_11.error; }\n        }\n        return false;\n    };\n    /**\n     * Checks if set or provided hardfork is active on block number\n     * @param hardfork Hardfork name or null (for HF set)\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n        var _a;\n        if (opts === void 0) { opts = {}; }\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        var onlySupported = (_a = opts.onlySupported) !== null && _a !== void 0 ? _a : false;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        var hfBlock = this.hardforkBlockBN(hardfork);\n        if (hfBlock && blockNumber.gte(hfBlock)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Alias to hardforkIsActiveOnBlock when hardfork is set\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.activeOnBlock = function (blockNumber, opts) {\n        return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n    };\n    /**\n     * Sequence based check if given or set HF1 is greater than or equal HF2\n     * @param hardfork1 Hardfork name or null (if set)\n     * @param hardfork2 Hardfork name\n     * @param opts Hardfork options\n     * @returns True if HF1 gte HF2\n     */\n    Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n        var e_12, _a;\n        if (opts === void 0) { opts = {}; }\n        var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n        hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n        var hardforks;\n        if (onlyActive) {\n            hardforks = this.activeHardforks(null, opts);\n        }\n        else {\n            hardforks = this.hardforks();\n        }\n        var posHf1 = -1, posHf2 = -1;\n        var index = 0;\n        try {\n            for (var hardforks_2 = __values(hardforks), hardforks_2_1 = hardforks_2.next(); !hardforks_2_1.done; hardforks_2_1 = hardforks_2.next()) {\n                var hf = hardforks_2_1.value;\n                if (hf['name'] === hardfork1)\n                    posHf1 = index;\n                if (hf['name'] === hardfork2)\n                    posHf2 = index;\n                index += 1;\n            }\n        }\n        catch (e_12_1) { e_12 = { error: e_12_1 }; }\n        finally {\n            try {\n                if (hardforks_2_1 && !hardforks_2_1.done && (_a = hardforks_2.return)) _a.call(hardforks_2);\n            }\n            finally { if (e_12) throw e_12.error; }\n        }\n        return posHf1 >= posHf2 && posHf2 !== -1;\n    };\n    /**\n     * Alias to hardforkGteHardfork when hardfork is set\n     * @param hardfork Hardfork name\n     * @param opts Hardfork options\n     * @returns True if hardfork set is greater than hardfork provided\n     */\n    Common.prototype.gteHardfork = function (hardfork, opts) {\n        return this.hardforkGteHardfork(null, hardfork, opts);\n    };\n    /**\n     * Checks if given or set hardfork is active on the chain\n     * @param hardfork Hardfork name, optional if HF set\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if hardfork is active on the chain\n     */\n    Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n        var e_13, _a;\n        var _b;\n        if (opts === void 0) { opts = {}; }\n        var onlySupported = (_b = opts.onlySupported) !== null && _b !== void 0 ? _b : false;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        try {\n            for (var _c = __values(this.hardforks()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var hf = _d.value;\n                if (hf['name'] === hardfork && hf['block'] !== null)\n                    return true;\n            }\n        }\n        catch (e_13_1) { e_13 = { error: e_13_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_13) throw e_13.error; }\n        }\n        return false;\n    };\n    /**\n     * Returns the active hardfork switches for the current chain\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Array with hardfork arrays\n     */\n    Common.prototype.activeHardforks = function (blockNumber, opts) {\n        var e_14, _a;\n        if (opts === void 0) { opts = {}; }\n        var activeHardforks = [];\n        var hfs = this.hardforks();\n        try {\n            for (var hfs_2 = __values(hfs), hfs_2_1 = hfs_2.next(); !hfs_2_1.done; hfs_2_1 = hfs_2.next()) {\n                var hf = hfs_2_1.value;\n                if (hf['block'] === null)\n                    continue;\n                if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block'])\n                    break;\n                if (opts.onlySupported && !this._isSupportedHardfork(hf['name']))\n                    continue;\n                activeHardforks.push(hf);\n            }\n        }\n        catch (e_14_1) { e_14 = { error: e_14_1 }; }\n        finally {\n            try {\n                if (hfs_2_1 && !hfs_2_1.done && (_a = hfs_2.return)) _a.call(hfs_2);\n            }\n            finally { if (e_14) throw e_14.error; }\n        }\n        return activeHardforks;\n    };\n    /**\n     * Returns the latest active hardfork name for chain or block or throws if unavailable\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Hardfork name\n     */\n    Common.prototype.activeHardfork = function (blockNumber, opts) {\n        if (opts === void 0) { opts = {}; }\n        var activeHardforks = this.activeHardforks(blockNumber, opts);\n        if (activeHardforks.length > 0) {\n            return activeHardforks[activeHardforks.length - 1]['name'];\n        }\n        else {\n            throw new Error(\"No (supported) active hardfork found\");\n        }\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     * @deprecated Please use {@link Common.hardforkBlockBN} for large number support\n     */\n    Common.prototype.hardforkBlock = function (hardfork) {\n        var block = this.hardforkBlockBN(hardfork);\n        return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     */\n    Common.prototype.hardforkBlockBN = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var block = this._getHardfork(hardfork)['block'];\n        if (block === undefined || block === null) {\n            return null;\n        }\n        return new ethereumjs_util_1.BN(block);\n    };\n    /**\n     * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Total difficulty or null if no set\n     */\n    Common.prototype.hardforkTD = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var td = this._getHardfork(hardfork)['td'];\n        if (td === undefined || td === null) {\n            return null;\n        }\n        return new ethereumjs_util_1.BN(td);\n    };\n    /**\n     * True if block number provided is the hardfork (given or set) change block\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        hardfork = this._chooseHardfork(hardfork, false);\n        var block = this.hardforkBlockBN(hardfork);\n        return block ? block.eq(blockNumber) : false;\n    };\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     * @deprecated Please use {@link Common.nextHardforkBlockBN} for large number support\n     */\n    Common.prototype.nextHardforkBlock = function (hardfork) {\n        var block = this.nextHardforkBlockBN(hardfork);\n        return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     */\n    Common.prototype.nextHardforkBlockBN = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var hfBlock = this.hardforkBlockBN(hardfork);\n        if (hfBlock === null) {\n            return null;\n        }\n        // Next fork block number or null if none available\n        // Logic: if accumulator is still null and on the first occurrence of\n        // a block greater than the current hfBlock set the accumulator,\n        // pass on the accumulator as the final result from this time on\n        var nextHfBlock = this.hardforks().reduce(function (acc, hf) {\n            var block = new ethereumjs_util_1.BN(hf.block);\n            return block.gt(hfBlock) && acc === null ? block : acc;\n        }, null);\n        return nextHfBlock;\n    };\n    /**\n     * True if block number provided is the hardfork change block following the hardfork given or set\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isNextHardforkBlock = function (blockNumber, hardfork) {\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        hardfork = this._chooseHardfork(hardfork, false);\n        var nextHardforkBlock = this.nextHardforkBlockBN(hardfork);\n        return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber);\n    };\n    /**\n     * Internal helper function to calculate a fork hash\n     * @param hardfork Hardfork name\n     * @returns Fork hash as hex string\n     */\n    Common.prototype._calcForkHash = function (hardfork) {\n        var e_15, _a;\n        var genesis = Buffer.from(this.genesis().hash.substr(2), 'hex');\n        var hfBuffer = Buffer.alloc(0);\n        var prevBlock = 0;\n        try {\n            for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var hf = _c.value;\n                var block = hf.block;\n                // Skip for chainstart (0), not applied HFs (null) and\n                // when already applied on same block number HFs\n                if (block !== 0 && block !== null && block !== prevBlock) {\n                    var hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex');\n                    hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer]);\n                }\n                if (hf.name === hardfork)\n                    break;\n                if (block !== null) {\n                    prevBlock = block;\n                }\n            }\n        }\n        catch (e_15_1) { e_15 = { error: e_15_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_15) throw e_15.error; }\n        }\n        var inputBuffer = Buffer.concat([genesis, hfBuffer]);\n        // CRC32 delivers result as signed (negative) 32-bit integer,\n        // convert to hex string\n        var forkhash = (0, ethereumjs_util_1.intToBuffer)((0, crc_32_1.buf)(inputBuffer) >>> 0).toString('hex');\n        return \"0x\".concat(forkhash);\n    };\n    /**\n     * Returns an eth/64 compliant fork hash (EIP-2124)\n     * @param hardfork Hardfork name, optional if HF set\n     */\n    Common.prototype.forkHash = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var data = this._getHardfork(hardfork);\n        if (data['block'] === null && data['td'] === undefined) {\n            var msg = 'No fork hash calculation possible for future hardfork';\n            throw new Error(msg);\n        }\n        if (data['forkHash'] !== undefined) {\n            return data['forkHash'];\n        }\n        return this._calcForkHash(hardfork);\n    };\n    /**\n     *\n     * @param forkHash Fork hash as a hex string\n     * @returns Array with hardfork data (name, block, forkHash)\n     */\n    Common.prototype.hardforkForForkHash = function (forkHash) {\n        var resArray = this.hardforks().filter(function (hf) {\n            return hf.forkHash === forkHash;\n        });\n        return resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n    };\n    /**\n     * Returns the Genesis parameters of the current chain\n     * @returns Genesis dictionary\n     */\n    Common.prototype.genesis = function () {\n        return this._chainParams['genesis'];\n    };\n    /**\n     * Returns the Genesis state of the current chain,\n     * all values are provided as hex-prefixed strings.\n     */\n    Common.prototype.genesisState = function () {\n        var e_16, _a;\n        // Use require statements here in favor of import statements\n        // to load json files on demand\n        // (high memory usage by large mainnet.json genesis state file)\n        switch (this.chainName()) {\n            case 'mainnet':\n                return require('./genesisStates/mainnet.json');\n            case 'ropsten':\n                return require('./genesisStates/ropsten.json');\n            case 'rinkeby':\n                return require('./genesisStates/rinkeby.json');\n            case 'kovan':\n                return require('./genesisStates/kovan.json');\n            case 'goerli':\n                return require('./genesisStates/goerli.json');\n            case 'sepolia':\n                return require('./genesisStates/sepolia.json');\n        }\n        // Custom chains with genesis state provided\n        if (this._customChains &&\n            this._customChains.length > 0 &&\n            Array.isArray(this._customChains[0])) {\n            try {\n                for (var _b = __values(this._customChains), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var chainArrayWithGenesis = _c.value;\n                    if (chainArrayWithGenesis[0].name === this.chainName()) {\n                        return chainArrayWithGenesis[1];\n                    }\n                }\n            }\n            catch (e_16_1) { e_16 = { error: e_16_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_16) throw e_16.error; }\n            }\n        }\n        return {};\n    };\n    /**\n     * Returns the hardforks for current chain\n     * @returns {Array} Array with arrays of hardforks\n     */\n    Common.prototype.hardforks = function () {\n        return this._chainParams['hardforks'];\n    };\n    /**\n     * Returns bootstrap nodes for the current chain\n     * @returns {Dictionary} Dict with bootstrap nodes\n     */\n    Common.prototype.bootstrapNodes = function () {\n        return this._chainParams['bootstrapNodes'];\n    };\n    /**\n     * Returns DNS networks for the current chain\n     * @returns {String[]} Array of DNS ENR urls\n     */\n    Common.prototype.dnsNetworks = function () {\n        return this._chainParams['dnsNetworks'];\n    };\n    /**\n     * Returns the hardfork set\n     * @returns Hardfork name\n     */\n    Common.prototype.hardfork = function () {\n        return this._hardfork;\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     * @deprecated Please use {@link Common.chainIdBN} for large number support\n     */\n    Common.prototype.chainId = function () {\n        return (0, ethereumjs_util_1.toType)(this.chainIdBN(), ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     */\n    Common.prototype.chainIdBN = function () {\n        return new ethereumjs_util_1.BN(this._chainParams['chainId']);\n    };\n    /**\n     * Returns the name of current chain\n     * @returns chain name (lower case)\n     */\n    Common.prototype.chainName = function () {\n        return this._chainParams['name'];\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     * @deprecated Please use {@link Common.networkIdBN} for large number support\n     */\n    Common.prototype.networkId = function () {\n        return (0, ethereumjs_util_1.toType)(this.networkIdBN(), ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     */\n    Common.prototype.networkIdBN = function () {\n        return new ethereumjs_util_1.BN(this._chainParams['networkId']);\n    };\n    /**\n     * Returns the active EIPs\n     * @returns List of EIPs\n     */\n    Common.prototype.eips = function () {\n        return this._eips;\n    };\n    /**\n     * Returns the consensus type of the network\n     * Possible values: \"pow\"|\"poa\"|\"pos\"\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusType = function () {\n        var e_17, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_4 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next(); !HARDFORK_CHANGES_4_1.done; HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next()) {\n                var hfChanges = HARDFORK_CHANGES_4_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    value = hfChanges[1]['consensus']['type'];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_17_1) { e_17 = { error: e_17_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_4_1 && !HARDFORK_CHANGES_4_1.done && (_a = HARDFORK_CHANGES_4.return)) _a.call(HARDFORK_CHANGES_4);\n            }\n            finally { if (e_17) throw e_17.error; }\n        }\n        if (value) {\n            return value;\n        }\n        return this._chainParams['consensus']['type'];\n    };\n    /**\n     * Returns the concrete consensus implementation\n     * algorithm or protocol for the network\n     * e.g. \"ethash\" for \"pow\" consensus type,\n     * \"clique\" for \"poa\" consensus type or\n     * \"casper\" for \"pos\" consensus type.\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusAlgorithm = function () {\n        var e_18, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_5 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next(); !HARDFORK_CHANGES_5_1.done; HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next()) {\n                var hfChanges = HARDFORK_CHANGES_5_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    value = hfChanges[1]['consensus']['algorithm'];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_18_1) { e_18 = { error: e_18_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_5_1 && !HARDFORK_CHANGES_5_1.done && (_a = HARDFORK_CHANGES_5.return)) _a.call(HARDFORK_CHANGES_5);\n            }\n            finally { if (e_18) throw e_18.error; }\n        }\n        if (value) {\n            return value;\n        }\n        return this._chainParams['consensus']['algorithm'];\n    };\n    /**\n     * Returns a dictionary with consensus configuration\n     * parameters based on the consensus algorithm\n     *\n     * Expected returns (parameters must be present in\n     * the respective chain json files):\n     *\n     * ethash: -\n     * clique: period, epoch\n     * aura: -\n     * casper: -\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusConfig = function () {\n        var e_19, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_6 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next(); !HARDFORK_CHANGES_6_1.done; HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next()) {\n                var hfChanges = HARDFORK_CHANGES_6_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    // The config parameter is named after the respective consensus algorithm\n                    value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_19_1) { e_19 = { error: e_19_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_6_1 && !HARDFORK_CHANGES_6_1.done && (_a = HARDFORK_CHANGES_6.return)) _a.call(HARDFORK_CHANGES_6);\n            }\n            finally { if (e_19) throw e_19.error; }\n        }\n        if (value) {\n            return value;\n        }\n        var consensusAlgorithm = this.consensusAlgorithm();\n        return this._chainParams['consensus'][consensusAlgorithm];\n    };\n    /**\n     * Returns a deep copy of this {@link Common} instance.\n     */\n    Common.prototype.copy = function () {\n        var copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n        copy.removeAllListeners();\n        return copy;\n    };\n    return Common;\n}(events_1.EventEmitter));\nexports.default = Common;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseTransaction = void 0;\nvar common_1 = __importStar(require(\"@ethereumjs/common\"));\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nvar BaseTransaction = /** @class */ (function () {\n    function BaseTransaction(txData) {\n        this.cache = {\n            hash: undefined,\n            dataFee: undefined,\n        };\n        /**\n         * List of tx type defining EIPs,\n         * e.g. 1559 (fee market) and 2930 (access lists)\n         * for FeeMarketEIP1559Transaction objects\n         */\n        this.activeCapabilities = [];\n        /**\n         * The default chain the tx falls back to if no Common\n         * is provided and if the chain can't be derived from\n         * a passed in chainId (only EIP-2718 typed txs) or\n         * EIP-155 signature (legacy txs).\n         *\n         * @hidden\n         */\n        this.DEFAULT_CHAIN = common_1.Chain.Mainnet;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        this.DEFAULT_HARDFORK = common_1.Hardfork.Istanbul;\n        var nonce = txData.nonce, gasLimit = txData.gasLimit, to = txData.to, value = txData.value, data = txData.data, v = txData.v, r = txData.r, s = txData.s, type = txData.type;\n        this._type = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(type)).toNumber();\n        var toB = (0, ethereumjs_util_1.toBuffer)(to === '' ? '0x' : to);\n        var vB = (0, ethereumjs_util_1.toBuffer)(v === '' ? '0x' : v);\n        var rB = (0, ethereumjs_util_1.toBuffer)(r === '' ? '0x' : r);\n        var sB = (0, ethereumjs_util_1.toBuffer)(s === '' ? '0x' : s);\n        this.nonce = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(nonce === '' ? '0x' : nonce));\n        this.gasLimit = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(gasLimit === '' ? '0x' : gasLimit));\n        this.to = toB.length > 0 ? new ethereumjs_util_1.Address(toB) : undefined;\n        this.value = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(value === '' ? '0x' : value));\n        this.data = (0, ethereumjs_util_1.toBuffer)(data === '' ? '0x' : data);\n        this.v = vB.length > 0 ? new ethereumjs_util_1.BN(vB) : undefined;\n        this.r = rB.length > 0 ? new ethereumjs_util_1.BN(rB) : undefined;\n        this.s = sB.length > 0 ? new ethereumjs_util_1.BN(sB) : undefined;\n        this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s });\n        // geth limits gasLimit to 2^64-1\n        this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64);\n        // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n        this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true);\n    }\n    Object.defineProperty(BaseTransaction.prototype, \"transactionType\", {\n        /**\n         * Alias for {@link BaseTransaction.type}\n         *\n         * @deprecated Use `type` instead\n         */\n        get: function () {\n            return this.type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseTransaction.prototype, \"type\", {\n        /**\n         * Returns the transaction type.\n         *\n         * Note: legacy txs will return tx type `0`.\n         */\n        get: function () {\n            return this._type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Checks if a tx type defining capability is active\n     * on a tx, for example the EIP-1559 fee market mechanism\n     * or the EIP-2930 access list feature.\n     *\n     * Note that this is different from the tx type itself,\n     * so EIP-2930 access lists can very well be active\n     * on an EIP-1559 tx for example.\n     *\n     * This method can be useful for feature checks if the\n     * tx type is unknown (e.g. when instantiated with\n     * the tx factory).\n     *\n     * See `Capabilites` in the `types` module for a reference\n     * on all supported capabilities.\n     */\n    BaseTransaction.prototype.supports = function (capability) {\n        return this.activeCapabilities.includes(capability);\n    };\n    BaseTransaction.prototype.validate = function (stringError) {\n        if (stringError === void 0) { stringError = false; }\n        var errors = [];\n        if (this.getBaseFee().gt(this.gasLimit)) {\n            errors.push(\"gasLimit is too low. given \".concat(this.gasLimit, \", need at least \").concat(this.getBaseFee()));\n        }\n        if (this.isSigned() && !this.verifySignature()) {\n            errors.push('Invalid Signature');\n        }\n        return stringError ? errors : errors.length === 0;\n    };\n    /**\n     * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n     */\n    BaseTransaction.prototype.getBaseFee = function () {\n        var fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'));\n        if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n            fee.iaddn(this.common.param('gasPrices', 'txCreation'));\n        }\n        return fee;\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    BaseTransaction.prototype.getDataFee = function () {\n        var txDataZero = this.common.param('gasPrices', 'txDataZero');\n        var txDataNonZero = this.common.param('gasPrices', 'txDataNonZero');\n        var cost = 0;\n        for (var i = 0; i < this.data.length; i++) {\n            this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero);\n        }\n        cost = new ethereumjs_util_1.BN(cost);\n        if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n            var dataLength = Math.ceil(this.data.length / 32);\n            var initCodeCost = new ethereumjs_util_1.BN(this.common.param('gasPrices', 'initCodeWordCost')).imuln(dataLength);\n            cost.iadd(initCodeCost);\n        }\n        return cost;\n    };\n    /**\n     * If the tx's `to` is to the creation address\n     */\n    BaseTransaction.prototype.toCreationAddress = function () {\n        return this.to === undefined || this.to.buf.length === 0;\n    };\n    BaseTransaction.prototype.isSigned = function () {\n        var _a = this, v = _a.v, r = _a.r, s = _a.s;\n        if (this.type === 0) {\n            if (!v || !r || !s) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n        else {\n            if (v === undefined || !r || !s) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n    };\n    /**\n     * Determines if the signature is valid\n     */\n    BaseTransaction.prototype.verifySignature = function () {\n        try {\n            // Main signature verification is done in `getSenderPublicKey()`\n            var publicKey = this.getSenderPublicKey();\n            return (0, ethereumjs_util_1.unpadBuffer)(publicKey).length !== 0;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * Returns the sender's address\n     */\n    BaseTransaction.prototype.getSenderAddress = function () {\n        return new ethereumjs_util_1.Address((0, ethereumjs_util_1.publicToAddress)(this.getSenderPublicKey()));\n    };\n    /**\n     * Signs a transaction.\n     *\n     * Note that the signed tx is returned as a new object,\n     * use as follows:\n     * ```javascript\n     * const signedTx = tx.sign(privateKey)\n     * ```\n     */\n    BaseTransaction.prototype.sign = function (privateKey) {\n        if (privateKey.length !== 32) {\n            var msg = this._errorMsg('Private key must be 32 bytes in length.');\n            throw new Error(msg);\n        }\n        // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n        // and want to recreate a signature (where EIP155 should be applied)\n        // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n        // 2021-06-23\n        var hackApplied = false;\n        if (this.type === 0 &&\n            this.common.gteHardfork('spuriousDragon') &&\n            !this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n            hackApplied = true;\n        }\n        var msgHash = this.getMessageToSign(true);\n        var _a = (0, ethereumjs_util_1.ecsign)(msgHash, privateKey), v = _a.v, r = _a.r, s = _a.s;\n        var tx = this._processSignature(v, r, s);\n        // Hack part 2\n        if (hackApplied) {\n            var index = this.activeCapabilities.indexOf(types_1.Capability.EIP155ReplayProtection);\n            if (index > -1) {\n                this.activeCapabilities.splice(index, 1);\n            }\n        }\n        return tx;\n    };\n    /**\n     * Does chain ID checks on common and returns a common\n     * to be used on instantiation\n     * @hidden\n     *\n     * @param common - {@link Common} instance from tx options\n     * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n     */\n    BaseTransaction.prototype._getCommon = function (common, chainId) {\n        var _a;\n        // Chain ID provided\n        if (chainId) {\n            var chainIdBN = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(chainId));\n            if (common) {\n                if (!common.chainIdBN().eq(chainIdBN)) {\n                    var msg = this._errorMsg('The chain ID does not match the chain ID of Common');\n                    throw new Error(msg);\n                }\n                // Common provided, chain ID does match\n                // -> Return provided Common\n                return common.copy();\n            }\n            else {\n                if (common_1.default.isSupportedChainId(chainIdBN)) {\n                    // No Common, chain ID supported by Common\n                    // -> Instantiate Common with chain ID\n                    return new common_1.default({ chain: chainIdBN, hardfork: this.DEFAULT_HARDFORK });\n                }\n                else {\n                    // No Common, chain ID not supported by Common\n                    // -> Instantiate custom Common derived from DEFAULT_CHAIN\n                    return common_1.default.forCustomChain(this.DEFAULT_CHAIN, {\n                        name: 'custom-chain',\n                        networkId: chainIdBN,\n                        chainId: chainIdBN,\n                    }, this.DEFAULT_HARDFORK);\n                }\n            }\n        }\n        else {\n            // No chain ID provided\n            // -> return Common provided or create new default Common\n            return ((_a = common === null || common === void 0 ? void 0 : common.copy()) !== null && _a !== void 0 ? _a : new common_1.default({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK }));\n        }\n    };\n    /**\n     * Validates that an object with BN values cannot exceed the specified bit limit.\n     * @param values Object containing string keys and BN values\n     * @param bits Number of bits to check (64 or 256)\n     * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n     */\n    BaseTransaction.prototype._validateCannotExceedMaxInteger = function (values, bits, cannotEqual) {\n        var e_1, _a;\n        if (bits === void 0) { bits = 256; }\n        if (cannotEqual === void 0) { cannotEqual = false; }\n        try {\n            for (var _b = __values(Object.entries(values)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                switch (bits) {\n                    case 64:\n                        if (cannotEqual) {\n                            if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.MAX_UINT64)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot equal or exceed MAX_UINT64 (2^64-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        else {\n                            if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_UINT64)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot exceed MAX_UINT64 (2^64-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        break;\n                    case 256:\n                        if (cannotEqual) {\n                            if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.MAX_INTEGER)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot equal or exceed MAX_INTEGER (2^256-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        else {\n                            if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_INTEGER)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot exceed MAX_INTEGER (2^256-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        break;\n                    default: {\n                        var msg = this._errorMsg('unimplemented bits value');\n                        throw new Error(msg);\n                    }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Returns the shared error postfix part for _error() method\n     * tx type implementations.\n     */\n    BaseTransaction.prototype._getSharedErrorPostfix = function () {\n        var hash = '';\n        try {\n            hash = this.isSigned() ? (0, ethereumjs_util_1.bufferToHex)(this.hash()) : 'not available (unsigned)';\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        var isSigned = '';\n        try {\n            isSigned = this.isSigned().toString();\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        var hf = '';\n        try {\n            hf = this.common.hardfork();\n        }\n        catch (e) {\n            hf = 'error';\n        }\n        var postfix = \"tx type=\".concat(this.type, \" hash=\").concat(hash, \" nonce=\").concat(this.nonce, \" value=\").concat(this.value, \" \");\n        postfix += \"signed=\".concat(isSigned, \" hf=\").concat(hf);\n        return postfix;\n    };\n    return BaseTransaction;\n}());\nexports.BaseTransaction = BaseTransaction;\n//# sourceMappingURL=baseTransaction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 2;\nvar TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex');\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nvar FeeMarketEIP1559Transaction = /** @class */ (function (_super) {\n    __extends(FeeMarketEIP1559Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function FeeMarketEIP1559Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a, _b;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE })) || this;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        _this.DEFAULT_HARDFORK = 'london';\n        var chainId = txData.chainId, accessList = txData.accessList, maxFeePerGas = txData.maxFeePerGas, maxPriorityFeePerGas = txData.maxPriorityFeePerGas;\n        _this.common = _this._getCommon(opts.common, chainId);\n        _this.chainId = _this.common.chainIdBN();\n        if (!_this.common.isActivatedEIP(1559)) {\n            throw new Error('EIP-1559 not enabled on Common');\n        }\n        _this.activeCapabilities = _this.activeCapabilities.concat([1559, 2718, 2930]);\n        // Populate the access list fields\n        var accessListData = util_1.AccessLists.getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n        _this.accessList = accessListData.accessList;\n        _this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        util_1.AccessLists.verifyAccessList(_this.accessList);\n        _this.maxFeePerGas = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(maxFeePerGas === '' ? '0x' : maxFeePerGas));\n        _this.maxPriorityFeePerGas = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas));\n        _this._validateCannotExceedMaxInteger({\n            maxFeePerGas: _this.maxFeePerGas,\n            maxPriorityFeePerGas: _this.maxPriorityFeePerGas,\n        });\n        if (_this.gasLimit.mul(_this.maxFeePerGas).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        if (_this.maxFeePerGas.lt(_this.maxPriorityFeePerGas)) {\n            var msg = _this._errorMsg('maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)');\n            throw new Error(msg);\n        }\n        if (_this.v && !_this.v.eqn(0) && !_this.v.eqn(1)) {\n            var msg = _this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n            throw new Error(msg);\n        }\n        if (_this.common.gteHardfork('homestead') && ((_a = _this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = _this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_b = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _b !== void 0 ? _b : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"senderR\", {\n        /**\n         * EIP-2930 alias for `r`\n         *\n         * @deprecated use `r` instead\n         */\n        get: function () {\n            return this.r;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"senderS\", {\n        /**\n         * EIP-2930 alias for `s`\n         *\n         * @deprecated use `s` instead\n         */\n        get: function () {\n            return this.s;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"yParity\", {\n        /**\n         * EIP-2930 alias for `v`\n         *\n         * @deprecated use `v` instead\n         */\n        get: function () {\n            return this.v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    FeeMarketEIP1559Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new FeeMarketEIP1559Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     */\n    FeeMarketEIP1559Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n            throw new Error(\"Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: \".concat(TRANSACTION_TYPE, \", received: \").concat(serialized\n                .slice(0, 1)\n                .toString('hex')));\n        }\n        var values = ethereumjs_util_1.rlp.decode(serialized.slice(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        return FeeMarketEIP1559Transaction.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link FeeMarketEIP1559Transaction.fromSerializedTx})\n     *\n     * Note: This means that the Buffer should start with 0x01.\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link FeeMarketEIP1559Transaction.fromSerializedTx} constructor\n     */\n    FeeMarketEIP1559Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return FeeMarketEIP1559Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     */\n    FeeMarketEIP1559Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (values.length !== 9 && values.length !== 12) {\n            throw new Error('Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).');\n        }\n        var _a = __read(values, 12), chainId = _a[0], nonce = _a[1], maxPriorityFeePerGas = _a[2], maxFeePerGas = _a[3], gasLimit = _a[4], to = _a[5], value = _a[6], data = _a[7], accessList = _a[8], v = _a[9], r = _a[10], s = _a[11];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, maxPriorityFeePerGas: maxPriorityFeePerGas, maxFeePerGas: maxFeePerGas, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        return new FeeMarketEIP1559Transaction({\n            chainId: new ethereumjs_util_1.BN(chainId),\n            nonce: nonce,\n            maxPriorityFeePerGas: maxPriorityFeePerGas,\n            maxFeePerGas: maxFeePerGas,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : [],\n            v: v !== undefined ? new ethereumjs_util_1.BN(v) : undefined,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    FeeMarketEIP1559Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        var cost = _super.prototype.getDataFee.call(this);\n        cost.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return cost;\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     * @param baseFee The base fee of the block (will be set to 0 if not provided)\n     */\n    FeeMarketEIP1559Transaction.prototype.getUpfrontCost = function (baseFee) {\n        if (baseFee === void 0) { baseFee = new ethereumjs_util_1.BN(0); }\n        var inclusionFeePerGas = ethereumjs_util_1.BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(baseFee));\n        var gasPrice = inclusionFeePerGas.add(baseFee);\n        return this.gasLimit.mul(gasPrice).add(this.value);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     *\n     * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n     */\n    FeeMarketEIP1559Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.chainId),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.maxPriorityFeePerGas),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.maxFeePerGas),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the EIP-1559 transaction.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    FeeMarketEIP1559Transaction.prototype.serialize = function () {\n        var base = this.raw();\n        return Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n    };\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */\n    FeeMarketEIP1559Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var base = this.raw().slice(0, 9);\n        var message = Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.keccak256)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    FeeMarketEIP1559Transaction.prototype.hash = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.keccak256)(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.keccak256)(this.serialize());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    FeeMarketEIP1559Transaction.prototype.getMessageToVerifySignature = function () {\n        return this.getMessageToSign();\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    FeeMarketEIP1559Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call this method if transaction is not signed');\n            throw new Error(msg);\n        }\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, v = _b.v, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, v.addn(27), // Recover the 27 which was stripped from ecsign\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s));\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    FeeMarketEIP1559Transaction.prototype._processSignature = function (v, r, s) {\n        var opts = {\n            common: this.common,\n        };\n        return FeeMarketEIP1559Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: new ethereumjs_util_1.BN(v - 27),\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    FeeMarketEIP1559Transaction.prototype.toJSON = function () {\n        var accessListJSON = util_1.AccessLists.getAccessListJSON(this.accessList);\n        return {\n            chainId: (0, ethereumjs_util_1.bnToHex)(this.chainId),\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            maxPriorityFeePerGas: (0, ethereumjs_util_1.bnToHex)(this.maxPriorityFeePerGas),\n            maxFeePerGas: (0, ethereumjs_util_1.bnToHex)(this.maxFeePerGas),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    FeeMarketEIP1559Transaction.prototype.errorStr = function () {\n        var errorStr = this._getSharedErrorPostfix();\n        errorStr += \" maxFeePerGas=\".concat(this.maxFeePerGas, \" maxPriorityFeePerGas=\").concat(this.maxPriorityFeePerGas);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    FeeMarketEIP1559Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return FeeMarketEIP1559Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = FeeMarketEIP1559Transaction;\n//# sourceMappingURL=eip1559Transaction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 1;\nvar TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex');\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nvar AccessListEIP2930Transaction = /** @class */ (function (_super) {\n    __extends(AccessListEIP2930Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function AccessListEIP2930Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a, _b;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE })) || this;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        _this.DEFAULT_HARDFORK = 'berlin';\n        var chainId = txData.chainId, accessList = txData.accessList, gasPrice = txData.gasPrice;\n        _this.common = _this._getCommon(opts.common, chainId);\n        _this.chainId = _this.common.chainIdBN();\n        // EIP-2718 check is done in Common\n        if (!_this.common.isActivatedEIP(2930)) {\n            throw new Error('EIP-2930 not enabled on Common');\n        }\n        _this.activeCapabilities = _this.activeCapabilities.concat([2718, 2930]);\n        // Populate the access list fields\n        var accessListData = util_1.AccessLists.getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n        _this.accessList = accessListData.accessList;\n        _this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        util_1.AccessLists.verifyAccessList(_this.accessList);\n        _this.gasPrice = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(gasPrice === '' ? '0x' : gasPrice));\n        _this._validateCannotExceedMaxInteger({\n            gasPrice: _this.gasPrice,\n        });\n        if (_this.gasPrice.mul(_this.gasLimit).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER');\n            throw new Error(msg);\n        }\n        if (_this.v && !_this.v.eqn(0) && !_this.v.eqn(1)) {\n            var msg = _this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n            throw new Error(msg);\n        }\n        if (_this.common.gteHardfork('homestead') && ((_a = _this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = _this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_b = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _b !== void 0 ? _b : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderR\", {\n        /**\n         * EIP-2930 alias for `r`\n         *\n         * @deprecated use `r` instead\n         */\n        get: function () {\n            return this.r;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderS\", {\n        /**\n         * EIP-2930 alias for `s`\n         *\n         * @deprecated use `s` instead\n         */\n        get: function () {\n            return this.s;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"yParity\", {\n        /**\n         * EIP-2930 alias for `v`\n         *\n         * @deprecated use `v` instead\n         */\n        get: function () {\n            return this.v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    AccessListEIP2930Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new AccessListEIP2930Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     */\n    AccessListEIP2930Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n            throw new Error(\"Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: \".concat(TRANSACTION_TYPE, \", received: \").concat(serialized\n                .slice(0, 1)\n                .toString('hex')));\n        }\n        var values = ethereumjs_util_1.rlp.decode(serialized.slice(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        return AccessListEIP2930Transaction.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link AccessListEIP2930Transaction.fromSerializedTx})\n     *\n     * Note: This means that the Buffer should start with 0x01.\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link AccessListEIP2930Transaction.fromSerializedTx} constructor\n     */\n    AccessListEIP2930Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return AccessListEIP2930Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     */\n    AccessListEIP2930Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (values.length !== 8 && values.length !== 11) {\n            throw new Error('Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).');\n        }\n        var _a = __read(values, 11), chainId = _a[0], nonce = _a[1], gasPrice = _a[2], gasLimit = _a[3], to = _a[4], value = _a[5], data = _a[6], accessList = _a[7], v = _a[8], r = _a[9], s = _a[10];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, gasPrice: gasPrice, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        var emptyAccessList = [];\n        return new AccessListEIP2930Transaction({\n            chainId: new ethereumjs_util_1.BN(chainId),\n            nonce: nonce,\n            gasPrice: gasPrice,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : emptyAccessList,\n            v: v !== undefined ? new ethereumjs_util_1.BN(v) : undefined,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    AccessListEIP2930Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        var cost = _super.prototype.getDataFee.call(this);\n        cost.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return cost;\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    AccessListEIP2930Transaction.prototype.getUpfrontCost = function () {\n        return this.gasLimit.mul(this.gasPrice).add(this.value);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     *\n     * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n     */\n    AccessListEIP2930Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.chainId),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the EIP-2930 transaction.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    AccessListEIP2930Transaction.prototype.serialize = function () {\n        var base = this.raw();\n        return Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n    };\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */\n    AccessListEIP2930Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var base = this.raw().slice(0, 8);\n        var message = Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.keccak256)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    AccessListEIP2930Transaction.prototype.hash = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.keccak256)(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.keccak256)(this.serialize());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    AccessListEIP2930Transaction.prototype.getMessageToVerifySignature = function () {\n        return this.getMessageToSign();\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    AccessListEIP2930Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call this method if transaction is not signed');\n            throw new Error(msg);\n        }\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, yParity = _b.yParity, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, yParity.addn(27), // Recover the 27 which was stripped from ecsign\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s));\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    AccessListEIP2930Transaction.prototype._processSignature = function (v, r, s) {\n        var opts = {\n            common: this.common,\n        };\n        return AccessListEIP2930Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: new ethereumjs_util_1.BN(v - 27),\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    AccessListEIP2930Transaction.prototype.toJSON = function () {\n        var accessListJSON = util_1.AccessLists.getAccessListJSON(this.accessList);\n        return {\n            chainId: (0, ethereumjs_util_1.bnToHex)(this.chainId),\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            gasPrice: (0, ethereumjs_util_1.bnToHex)(this.gasPrice),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    AccessListEIP2930Transaction.prototype.errorStr = function () {\n        var _a, _b;\n        var errorStr = this._getSharedErrorPostfix();\n        // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n        errorStr += \" gasPrice=\".concat(this.gasPrice, \" accessListCount=\").concat((_b = (_a = this.accessList) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    AccessListEIP2930Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return AccessListEIP2930Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = AccessListEIP2930Transaction;\n//# sourceMappingURL=eip2930Transaction.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FeeMarketEIP1559Transaction = exports.TransactionFactory = exports.AccessListEIP2930Transaction = exports.Transaction = void 0;\nvar legacyTransaction_1 = require(\"./legacyTransaction\");\nObject.defineProperty(exports, \"Transaction\", { enumerable: true, get: function () { return __importDefault(legacyTransaction_1).default; } });\nvar eip2930Transaction_1 = require(\"./eip2930Transaction\");\nObject.defineProperty(exports, \"AccessListEIP2930Transaction\", { enumerable: true, get: function () { return __importDefault(eip2930Transaction_1).default; } });\nvar transactionFactory_1 = require(\"./transactionFactory\");\nObject.defineProperty(exports, \"TransactionFactory\", { enumerable: true, get: function () { return __importDefault(transactionFactory_1).default; } });\nvar eip1559Transaction_1 = require(\"./eip1559Transaction\");\nObject.defineProperty(exports, \"FeeMarketEIP1559Transaction\", { enumerable: true, get: function () { return __importDefault(eip1559Transaction_1).default; } });\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 0;\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nvar Transaction = /** @class */ (function (_super) {\n    __extends(Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE })) || this;\n        _this.common = _this._validateTxV(_this.v, opts.common);\n        _this.gasPrice = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(txData.gasPrice === '' ? '0x' : txData.gasPrice));\n        if (_this.gasPrice.mul(_this.gasLimit).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        _this._validateCannotExceedMaxInteger({ gasPrice: _this.gasPrice });\n        if (_this.common.gteHardfork('spuriousDragon')) {\n            if (!_this.isSigned()) {\n                _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n            }\n            else {\n                // EIP155 spec:\n                // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n                // then when computing the hash of a transaction for purposes of signing or recovering\n                // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n                // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n                var v = _this.v;\n                var chainIdDoubled = _this.common.chainIdBN().muln(2);\n                // v and chain ID meet EIP-155 conditions\n                if (v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))) {\n                    _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n                }\n            }\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n     *\n     * Notes:\n     * - All parameters are optional and have some basic default values\n     */\n    Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     */\n    Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        var values = ethereumjs_util_1.rlp.decode(serialized);\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input. Must be array');\n        }\n        return this.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link Transaction.fromSerializedTx})\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link Transaction.fromSerializedTx} constructor\n     */\n    Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     */\n    Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n        // This happens if you get the RLP data from `raw()`\n        if (values.length !== 6 && values.length !== 9) {\n            throw new Error('Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).');\n        }\n        var _a = __read(values, 9), nonce = _a[0], gasPrice = _a[1], gasLimit = _a[2], to = _a[3], value = _a[4], data = _a[5], v = _a[6], r = _a[7], s = _a[8];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, gasPrice: gasPrice, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        return new Transaction({\n            nonce: nonce,\n            gasPrice: gasPrice,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            v: v,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     *\n     * For legacy txs this is also the correct format to add transactions\n     * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n     * for typed txs).\n     *\n     * For an unsigned tx this method returns the empty Buffer values\n     * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n     * representation have a look at {@link Transaction.getMessageToSign}.\n     */\n    Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the legacy transaction.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link Transaction.getMessageToSign}.\n     */\n    Transaction.prototype.serialize = function () {\n        return ethereumjs_util_1.rlp.encode(this.raw());\n    };\n    Transaction.prototype._getMessageToSign = function () {\n        var values = [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n        ];\n        if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            values.push((0, ethereumjs_util_1.toBuffer)(this.common.chainIdBN()));\n            values.push((0, ethereumjs_util_1.unpadBuffer)((0, ethereumjs_util_1.toBuffer)(0)));\n            values.push((0, ethereumjs_util_1.unpadBuffer)((0, ethereumjs_util_1.toBuffer)(0)));\n        }\n        return values;\n    };\n    Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var message = this._getMessageToSign();\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.rlphash)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: _super.prototype.getDataFee.call(this),\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return _super.prototype.getDataFee.call(this);\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    Transaction.prototype.getUpfrontCost = function () {\n        return this.gasLimit.mul(this.gasPrice).add(this.value);\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    Transaction.prototype.hash = function () {\n        // In contrast to the tx type transaction implementations the `hash()` function\n        // for the legacy tx does not throw if the tx is not signed.\n        // This has been considered for inclusion but lead to unexpected backwards\n        // compatibility problems (no concrete reference found, needs validation).\n        //\n        // For context see also https://github.com/ethereumjs/ethereumjs-monorepo/pull/1445,\n        // September, 2021 as well as work done before.\n        //\n        // This should be updated along the next major version release by adding:\n        //\n        //if (!this.isSigned()) {\n        //  const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n        //  throw new Error(msg)\n        //}\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.rlphash)(this.raw());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.rlphash)(this.raw());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    Transaction.prototype.getMessageToVerifySignature = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('This transaction is not signed');\n            throw new Error(msg);\n        }\n        var message = this._getMessageToSign();\n        return (0, ethereumjs_util_1.rlphash)(message);\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, v = _b.v, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, v, (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s), this.supports(types_1.Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : undefined);\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    /**\n     * Process the v, r, s values from the `sign` method of the base transaction.\n     */\n    Transaction.prototype._processSignature = function (v, r, s) {\n        var vBN = new ethereumjs_util_1.BN(v);\n        if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            vBN.iadd(this.common.chainIdBN().muln(2).addn(8));\n        }\n        var opts = {\n            common: this.common,\n        };\n        return Transaction.fromTxData({\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            v: vBN,\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction.\n     */\n    Transaction.prototype.toJSON = function () {\n        return {\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            gasPrice: (0, ethereumjs_util_1.bnToHex)(this.gasPrice),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Validates tx's `v` value\n     */\n    Transaction.prototype._validateTxV = function (v, common) {\n        var chainIdBN;\n        // No unsigned tx and EIP-155 activated and chain ID included\n        if (v !== undefined &&\n            !v.eqn(0) &&\n            (!common || common.gteHardfork('spuriousDragon')) &&\n            !v.eqn(27) &&\n            !v.eqn(28)) {\n            if (common) {\n                var chainIdDoubled = common.chainIdBN().muln(2);\n                var isValidEIP155V = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n                if (!isValidEIP155V) {\n                    throw new Error(\"Incompatible EIP155-based V \".concat(v, \" and chain id \").concat(common.chainIdBN(), \". See the Common parameter of the Transaction constructor to set the chain id.\"));\n                }\n            }\n            else {\n                // Derive the original chain ID\n                var numSub = void 0;\n                if (v.subn(35).isEven()) {\n                    numSub = 35;\n                }\n                else {\n                    numSub = 36;\n                }\n                // Use derived chain ID to create a proper Common\n                chainIdBN = v.subn(numSub).divn(2);\n            }\n        }\n        return this._getCommon(common, chainIdBN);\n    };\n    /**\n     * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n     */\n    Transaction.prototype._unsignedTxImplementsEIP155 = function () {\n        return this.common.gteHardfork('spuriousDragon');\n    };\n    /**\n     * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n     */\n    Transaction.prototype._signedTxImplementsEIP155 = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('This transaction is not signed');\n            throw new Error(msg);\n        }\n        var onEIP155BlockOrLater = this.common.gteHardfork('spuriousDragon');\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        var v = this.v;\n        var chainIdDoubled = this.common.chainIdBN().muln(2);\n        var vAndChainIdMeetEIP155Conditions = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n        return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater;\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    Transaction.prototype.errorStr = function () {\n        var errorStr = this._getSharedErrorPostfix();\n        errorStr += \" gasPrice=\".concat(this.gasPrice);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = Transaction;\n//# sourceMappingURL=legacyTransaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar _1 = require(\".\");\nvar TransactionFactory = /** @class */ (function () {\n    // It is not possible to instantiate a TransactionFactory object.\n    function TransactionFactory() {\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param txOptions - Options to pass on to the constructor of the transaction\n     */\n    TransactionFactory.fromTxData = function (txData, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (!('type' in txData) || txData.type === undefined) {\n            // Assume legacy transaction\n            return _1.Transaction.fromTxData(txData, txOptions);\n        }\n        else {\n            var txType = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(txData.type)).toNumber();\n            if (txType === 0) {\n                return _1.Transaction.fromTxData(txData, txOptions);\n            }\n            else if (txType === 1) {\n                return _1.AccessListEIP2930Transaction.fromTxData(txData, txOptions);\n            }\n            else if (txType === 2) {\n                return _1.FeeMarketEIP1559Transaction.fromTxData(txData, txOptions);\n            }\n            else {\n                throw new Error(\"Tx instantiation with type \".concat(txType, \" not supported\"));\n            }\n        }\n    };\n    /**\n     * This method tries to decode serialized data.\n     *\n     * @param data - The data Buffer\n     * @param txOptions - The transaction options\n     */\n    TransactionFactory.fromSerializedData = function (data, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (data[0] <= 0x7f) {\n            // Determine the type.\n            var EIP = void 0;\n            switch (data[0]) {\n                case 1:\n                    EIP = 2930;\n                    break;\n                case 2:\n                    EIP = 1559;\n                    break;\n                default:\n                    throw new Error(\"TypedTransaction with ID \".concat(data[0], \" unknown\"));\n            }\n            if (EIP === 1559) {\n                return _1.FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions);\n            }\n            else {\n                // EIP === 2930\n                return _1.AccessListEIP2930Transaction.fromSerializedTx(data, txOptions);\n            }\n        }\n        else {\n            return _1.Transaction.fromSerializedTx(data, txOptions);\n        }\n    };\n    /**\n     * When decoding a BlockBody, in the transactions field, a field is either:\n     * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n     * A Buffer[] (Legacy Transaction)\n     * This method returns the right transaction.\n     *\n     * @param data - A Buffer or Buffer[]\n     * @param txOptions - The transaction options\n     */\n    TransactionFactory.fromBlockBodyData = function (data, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (Buffer.isBuffer(data)) {\n            return this.fromSerializedData(data, txOptions);\n        }\n        else if (Array.isArray(data)) {\n            // It is a legacy transaction\n            return _1.Transaction.fromValuesArray(data, txOptions);\n        }\n        else {\n            throw new Error('Cannot decode transaction: unknown type input');\n        }\n    };\n    /**\n     * This helper method allows one to retrieve the class which matches the transactionID\n     * If transactionID is undefined, returns the legacy transaction class.\n     * @deprecated - This method is deprecated and will be removed on the next major release\n     * @param transactionID\n     * @param _common - This option is not used\n     */\n    TransactionFactory.getTransactionClass = function (transactionID, _common) {\n        if (transactionID === void 0) { transactionID = 0; }\n        var legacyTxn = transactionID == 0 || (transactionID >= 0x80 && transactionID <= 0xff);\n        if (legacyTxn) {\n            return _1.Transaction;\n        }\n        switch (transactionID) {\n            case 1:\n                return _1.AccessListEIP2930Transaction;\n            case 2:\n                return _1.FeeMarketEIP1559Transaction;\n            default:\n                throw new Error(\"TypedTransaction with ID \".concat(transactionID, \" unknown\"));\n        }\n    };\n    return TransactionFactory;\n}());\nexports.default = TransactionFactory;\n//# sourceMappingURL=transactionFactory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.N_DIV_2 = exports.isAccessList = exports.isAccessListBuffer = exports.Capability = void 0;\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nvar Capability;\n(function (Capability) {\n    /**\n     * Tx supports EIP-155 replay protection\n     * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n     */\n    Capability[Capability[\"EIP155ReplayProtection\"] = 155] = \"EIP155ReplayProtection\";\n    /**\n     * Tx supports EIP-1559 gas fee market mechansim\n     * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n     */\n    Capability[Capability[\"EIP1559FeeMarket\"] = 1559] = \"EIP1559FeeMarket\";\n    /**\n     * Tx is a typed transaction as defined in EIP-2718\n     * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n     */\n    Capability[Capability[\"EIP2718TypedTransaction\"] = 2718] = \"EIP2718TypedTransaction\";\n    /**\n     * Tx supports access list generation as defined in EIP-2930\n     * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n     */\n    Capability[Capability[\"EIP2930AccessLists\"] = 2930] = \"EIP2930AccessLists\";\n})(Capability = exports.Capability || (exports.Capability = {}));\nfunction isAccessListBuffer(input) {\n    if (input.length === 0) {\n        return true;\n    }\n    var firstItem = input[0];\n    if (Array.isArray(firstItem)) {\n        return true;\n    }\n    return false;\n}\nexports.isAccessListBuffer = isAccessListBuffer;\nfunction isAccessList(input) {\n    return !isAccessListBuffer(input); // This is exactly the same method, except the output is negated.\n}\nexports.isAccessList = isAccessList;\n/**\n * A const defining secp256k1n/2\n */\nexports.N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccessLists = exports.checkMaxInitCodeSize = void 0;\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\nfunction checkMaxInitCodeSize(common, length) {\n    if (length > common.param('vm', 'maxInitCodeSize')) {\n        throw new Error(\"the initcode size of this transaction is too large: it is \".concat(length, \" while the max is \").concat(common.param('vm', 'maxInitCodeSize')));\n    }\n}\nexports.checkMaxInitCodeSize = checkMaxInitCodeSize;\nvar AccessLists = /** @class */ (function () {\n    function AccessLists() {\n    }\n    AccessLists.getAccessListData = function (accessList) {\n        var AccessListJSON;\n        var bufferAccessList;\n        if (accessList && (0, types_1.isAccessList)(accessList)) {\n            AccessListJSON = accessList;\n            var newAccessList = [];\n            for (var i = 0; i < accessList.length; i++) {\n                var item = accessList[i];\n                var addressBuffer = (0, ethereumjs_util_1.toBuffer)(item.address);\n                var storageItems = [];\n                for (var index = 0; index < item.storageKeys.length; index++) {\n                    storageItems.push((0, ethereumjs_util_1.toBuffer)(item.storageKeys[index]));\n                }\n                newAccessList.push([addressBuffer, storageItems]);\n            }\n            bufferAccessList = newAccessList;\n        }\n        else {\n            bufferAccessList = accessList !== null && accessList !== void 0 ? accessList : [];\n            // build the JSON\n            var json = [];\n            for (var i = 0; i < bufferAccessList.length; i++) {\n                var data = bufferAccessList[i];\n                var address = (0, ethereumjs_util_1.bufferToHex)(data[0]);\n                var storageKeys = [];\n                for (var item = 0; item < data[1].length; item++) {\n                    storageKeys.push((0, ethereumjs_util_1.bufferToHex)(data[1][item]));\n                }\n                var jsonItem = {\n                    address: address,\n                    storageKeys: storageKeys,\n                };\n                json.push(jsonItem);\n            }\n            AccessListJSON = json;\n        }\n        return {\n            AccessListJSON: AccessListJSON,\n            accessList: bufferAccessList,\n        };\n    };\n    AccessLists.verifyAccessList = function (accessList) {\n        for (var key = 0; key < accessList.length; key++) {\n            var accessListItem = accessList[key];\n            var address = accessListItem[0];\n            var storageSlots = accessListItem[1];\n            if (accessListItem[2] !== undefined) {\n                throw new Error('Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.');\n            }\n            if (address.length != 20) {\n                throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes');\n            }\n            for (var storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n                if (storageSlots[storageSlot].length != 32) {\n                    throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes');\n                }\n            }\n        }\n    };\n    AccessLists.getAccessListJSON = function (accessList) {\n        var accessListJSON = [];\n        for (var index = 0; index < accessList.length; index++) {\n            var item = accessList[index];\n            var JSONItem = {\n                address: '0x' + (0, ethereumjs_util_1.setLengthLeft)(item[0], 20).toString('hex'),\n                storageKeys: [],\n            };\n            var storageSlots = item[1];\n            for (var slot = 0; slot < storageSlots.length; slot++) {\n                var storageSlot = storageSlots[slot];\n                JSONItem.storageKeys.push('0x' + (0, ethereumjs_util_1.setLengthLeft)(storageSlot, 32).toString('hex'));\n            }\n            accessListJSON.push(JSONItem);\n        }\n        return accessListJSON;\n    };\n    AccessLists.getDataFeeEIP2930 = function (accessList, common) {\n        var accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost');\n        var accessListAddressCost = common.param('gasPrices', 'accessListAddressCost');\n        var slots = 0;\n        for (var index = 0; index < accessList.length; index++) {\n            var item = accessList[index];\n            var storageSlots = item[1];\n            slots += storageSlots.length;\n        }\n        var addresses = accessList.length;\n        return addresses * accessListAddressCost + slots * accessListStorageKeyCost;\n    };\n    return AccessLists;\n}());\nexports.AccessLists = AccessLists;\n//# sourceMappingURL=util.js.map"],"sourceRoot":""}