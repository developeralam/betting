{"version":3,"sources":["webpack:///./node_modules/miller-rabin/lib/mr.js","webpack:///./node_modules/miller-rabin/node_modules/bn.js/lib/bn.js"],"names":["bn","brorand","MillerRabin","rand","this","Rand","module","exports","create","prototype","_randbelow","n","len","bitLength","min_bytes","Math","ceil","a","generate","cmp","_randrange","start","stop","size","sub","add","test","k","cb","red","mont","rone","toRed","max","n1","subn","s","testn","d","shrn","rn1","x","redPow","i","redSqr","getDivisor","g","gcd","cmpn","fromRed","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","constructor","BN","number","base","endian","isBN","negative","words","length","_init","Buffer","wordSize","e","parseHex","str","end","r","min","c","charCodeAt","parseBase","mul","num","Array","isArray","left","right","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","strip","toArray","j","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","b","lo","carry","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","y","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","ushrn","imaskn","maskn","isubn","addn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","isEven","yp","xp","im","isOdd","jm","_invmp","x1","x2","delta","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","ctx","convertTo","_forceRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","u"],"mappings":"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","file":"js/vendor/miller-rabin.js","sourcesContent":["var bn = require('bn.js');\nvar brorand = require('brorand');\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8);\n\n  // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n  do\n    var a = new bn(this.rand.generate(min_bytes));\n  while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"sourceRoot":""}