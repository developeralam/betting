{"version":3,"sources":["webpack:///./node_modules/web3-utils/lib/index.js","webpack:///./node_modules/web3-utils/lib/soliditySha3.js","webpack:///./node_modules/web3-utils/lib/utils.js","webpack:///./node_modules/web3-utils/node_modules/bn.js/lib/bn.js"],"names":["ethjsUnit","utils","soliditySha3","randombytes","BN","_flattenTypes","includeTuple","puts","types","forEach","param","components","type","substring","Error","suffix","arrayBracket","indexOf","result","Array","isArray","push","join","hexToAscii","hex","isHexStrict","str","i","l","length","code","parseInt","substr","String","fromCharCode","asciiToHex","n","charCodeAt","toString","getUnitValue","unit","toLowerCase","unitMap","JSON","stringify","module","exports","_fireError","error","emitter","reject","callback","optionalData","data","message","listeners","catch","setTimeout","emit","removeAllListeners","_jsonInterfaceMethodToString","json","name","inputs","randomHex","size","isBN","isBigNumber","isHex","sha3","sha3Raw","keccak256","soliditySha3Raw","encodePacked","isAddress","checkAddressChecksum","toChecksumAddress","address","test","replace","addressHash","checksumAddress","toUpperCase","toHex","toBN","bytesToHex","hexToBytes","hexToNumberString","hexToNumber","toDecimal","numberToHex","fromDecimal","hexToUtf8","hexToString","toUtf8","stripHexPrefix","utf8ToHex","stringToHex","fromUtf8","toAscii","fromAscii","toWei","number","fromWei","padLeft","leftPad","padRight","rightPad","toTwosComplement","isBloom","isUserEthereumAddressInBloom","isContractAddressInBloom","isTopic","isTopicInBloom","isInBloom","compareBlockNumbers","a","b","bnA","bnB","lt","eq","toNumber","_parseNumber","arg","_solidityPack","value","arraySize","num","startsWith","slice","typesize","exec","_parseTypeN","bitLength","toTwos","_processSolidityEncodePackedArgs","hasOwnProperty","t","v","_parseTypeNArray","map","val","args","prototype","call","arguments","hexArgs","numberToBN","utf8","ethereumjsUtil","ethereumBloomFilters","object","constructor","apply","e","encode","split","reverse","isFinite","returnType","Buffer","isBuffer","SHA3_NULL_S","toBuffer","from","returnValue","bufferToHex","_Hash","bloom","ethereumAddress","contractAddress","topic","decode","bytes","c","string","chars","sign","hasPrefix","padding","assert","msg","inherits","ctor","superCtor","super_","TempCtor","base","endian","this","negative","words","red","_init","wordSize","window","parseHex4Bits","index","parseHexByte","lowerBound","r","parseBase","start","end","mul","len","Math","min","max","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","ceil","j","w","off","strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","lo","carry","k","ncarry","rword","maxJ","groupSize","groupBase","isZero","modn","idivn","ret","toJSON","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","_zeroBits","hi","zeroBits","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lten","lte","eqn","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","undefined","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u"],"mappings":"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","file":"js/vendor/web3-utils.js","sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar ethjsUnit = require('ethjs-unit');\nvar utils = require('./utils.js');\nvar soliditySha3 = require('./soliditySha3.js');\nvar randombytes = require('randombytes');\nvar BN = require('bn.js');\n/**\n * Fires an error in an event emitter and callback and returns the eventemitter\n *\n * @method _fireError\n * @param {Object} error a string, a error, or an object with {message, data}\n * @param {Object} emitter\n * @param {Function} reject\n * @param {Function} callback\n * @param {any} optionalData\n * @return {Object} the emitter\n */\nvar _fireError = function (error, emitter, reject, callback, optionalData) {\n    /*jshint maxcomplexity: 10 */\n    // add data if given\n    if (!!error && typeof error === 'object' && !(error instanceof Error) && error.data) {\n        if (!!error.data && typeof error.data === 'object' || Array.isArray(error.data)) {\n            error.data = JSON.stringify(error.data, null, 2);\n        }\n        error = error.message + \"\\n\" + error.data;\n    }\n    if (typeof error === 'string') {\n        error = new Error(error);\n    }\n    if (typeof callback === 'function') {\n        callback(error, optionalData);\n    }\n    if (typeof reject === 'function') {\n        // suppress uncatched error if an error listener is present\n        // OR suppress uncatched error if an callback listener is present\n        if (emitter &&\n            (typeof emitter.listeners === 'function' &&\n                emitter.listeners('error').length) || typeof callback === 'function') {\n            emitter.catch(function () { });\n        }\n        // reject later, to be able to return emitter\n        setTimeout(function () {\n            reject(error);\n        }, 1);\n    }\n    if (emitter && typeof emitter.emit === 'function') {\n        // emit later, to be able to return emitter\n        setTimeout(function () {\n            emitter.emit('error', error, optionalData);\n            emitter.removeAllListeners();\n        }, 1);\n    }\n    return emitter;\n};\n/**\n * Should be used to create full function/event name from json abi\n *\n * @method _jsonInterfaceMethodToString\n * @param {Object} json\n * @return {String} full function/event name\n */\nvar _jsonInterfaceMethodToString = function (json) {\n    if (!!json && typeof json === 'object' && json.name && json.name.indexOf('(') !== -1) {\n        return json.name;\n    }\n    return json.name + '(' + _flattenTypes(false, json.inputs).join(',') + ')';\n};\n/**\n * Should be used to flatten json abi inputs/outputs into an array of type-representing-strings\n *\n * @method _flattenTypes\n * @param {bool} includeTuple\n * @param {Object} puts\n * @return {Array} parameters as strings\n */\nvar _flattenTypes = function (includeTuple, puts) {\n    // console.log(\"entered _flattenTypes. inputs/outputs: \" + puts)\n    var types = [];\n    puts.forEach(function (param) {\n        if (typeof param.components === 'object') {\n            if (param.type.substring(0, 5) !== 'tuple') {\n                throw new Error('components found but type is not tuple; report on GitHub');\n            }\n            var suffix = '';\n            var arrayBracket = param.type.indexOf('[');\n            if (arrayBracket >= 0) {\n                suffix = param.type.substring(arrayBracket);\n            }\n            var result = _flattenTypes(includeTuple, param.components);\n            // console.log(\"result should have things: \" + result)\n            if (Array.isArray(result) && includeTuple) {\n                // console.log(\"include tuple word, and its an array. joining...: \" + result.types)\n                types.push('tuple(' + result.join(',') + ')' + suffix);\n            }\n            else if (!includeTuple) {\n                // console.log(\"don't include tuple, but its an array. joining...: \" + result)\n                types.push('(' + result.join(',') + ')' + suffix);\n            }\n            else {\n                // console.log(\"its a single type within a tuple: \" + result.types)\n                types.push('(' + result + ')');\n            }\n        }\n        else {\n            // console.log(\"its a type and not directly in a tuple: \" + param.type)\n            types.push(param.type);\n        }\n    });\n    return types;\n};\n/**\n * Returns a random hex string by the given bytes size\n *\n * @param {Number} size\n * @returns {string}\n */\nvar randomHex = function (size) {\n    return '0x' + randombytes(size).toString('hex');\n};\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method hexToAscii\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToAscii = function (hex) {\n    if (!utils.isHexStrict(hex))\n        throw new Error('The parameter must be a valid HEX string.');\n    var str = \"\";\n    var i = 0, l = hex.length;\n    if (hex.substring(0, 2) === '0x') {\n        i = 2;\n    }\n    for (; i < l; i += 2) {\n        var code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n    return str;\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method asciiToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar asciiToHex = function (str) {\n    if (!str)\n        return \"0x00\";\n    var hex = \"\";\n    for (var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n    }\n    return \"0x\" + hex;\n};\n/**\n * Returns value of unit in Wei\n *\n * @method getUnitValue\n * @param {String} unit the unit to convert to, default ether\n * @returns {BN} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nvar getUnitValue = function (unit) {\n    unit = unit ? unit.toLowerCase() : 'ether';\n    if (!ethjsUnit.unitMap[unit]) {\n        throw new Error('This unit \"' + unit + '\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\n    }\n    return unit;\n};\n/**\n * Takes a number of wei and converts it to any other ether unit.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method fromWei\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert to, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar fromWei = function (number, unit) {\n    unit = getUnitValue(unit);\n    if (!utils.isBN(number) && !(typeof number === 'string')) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n    return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\n};\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method toWei\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert from, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar toWei = function (number, unit) {\n    unit = getUnitValue(unit);\n    if (!utils.isBN(number) && !(typeof number === 'string')) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n    return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\n};\n/**\n * Converts to a checksum address\n *\n * @method toChecksumAddress\n * @param {String} address the given HEX address\n * @return {String}\n */\nvar toChecksumAddress = function (address) {\n    if (typeof address === 'undefined')\n        return '';\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address))\n        throw new Error('Given address \"' + address + '\" is not a valid Ethereum address.');\n    address = address.toLowerCase().replace(/^0x/i, '');\n    var addressHash = utils.sha3(address).replace(/^0x/i, '');\n    var checksumAddress = '0x';\n    for (var i = 0; i < address.length; i++) {\n        // If ith character is 8 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += address[i].toUpperCase();\n        }\n        else {\n            checksumAddress += address[i];\n        }\n    }\n    return checksumAddress;\n};\n/**\n * Returns -1 if a<b, 1 if a>b; 0 if a == b.\n * For more details on this type of function, see\n * developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n *\n * @method compareBlockNumbers\n *\n * @param {String|Number|BN} a\n *\n * @param {String|Number|BN} b\n *\n * @returns {Number} -1, 0, or 1\n */\nvar compareBlockNumbers = function (a, b) {\n    if (a == b) {\n        return 0;\n    }\n    else if ((\"genesis\" == a || \"earliest\" == a || 0 == a) && (\"genesis\" == b || \"earliest\" == b || 0 == b)) {\n        return 0;\n    }\n    else if (\"genesis\" == a || \"earliest\" == a) {\n        // b !== a, thus a < b\n        return -1;\n    }\n    else if (\"genesis\" == b || \"earliest\" == b) {\n        // b !== a, thus a > b\n        return 1;\n    }\n    else if (a == \"latest\") {\n        if (b == \"pending\") {\n            return -1;\n        }\n        else {\n            // b !== (\"pending\" OR \"latest\"), thus a > b\n            return 1;\n        }\n    }\n    else if (b === \"latest\") {\n        if (a == \"pending\") {\n            return 1;\n        }\n        else {\n            // b !== (\"pending\" OR \"latest\"), thus a > b\n            return -1;\n        }\n    }\n    else if (a == \"pending\") {\n        // b (== OR <) \"latest\", thus a > b\n        return 1;\n    }\n    else if (b == \"pending\") {\n        return -1;\n    }\n    else {\n        let bnA = new BN(a);\n        let bnB = new BN(b);\n        if (bnA.lt(bnB)) {\n            return -1;\n        }\n        else if (bnA.eq(bnB)) {\n            return 0;\n        }\n        else {\n            return 1;\n        }\n    }\n};\nmodule.exports = {\n    _fireError: _fireError,\n    _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\n    _flattenTypes: _flattenTypes,\n    // extractDisplayName: extractDisplayName,\n    // extractTypeName: extractTypeName,\n    randomHex: randomHex,\n    BN: utils.BN,\n    isBN: utils.isBN,\n    isBigNumber: utils.isBigNumber,\n    isHex: utils.isHex,\n    isHexStrict: utils.isHexStrict,\n    sha3: utils.sha3,\n    sha3Raw: utils.sha3Raw,\n    keccak256: utils.sha3,\n    soliditySha3: soliditySha3.soliditySha3,\n    soliditySha3Raw: soliditySha3.soliditySha3Raw,\n    encodePacked: soliditySha3.encodePacked,\n    isAddress: utils.isAddress,\n    checkAddressChecksum: utils.checkAddressChecksum,\n    toChecksumAddress: toChecksumAddress,\n    toHex: utils.toHex,\n    toBN: utils.toBN,\n    bytesToHex: utils.bytesToHex,\n    hexToBytes: utils.hexToBytes,\n    hexToNumberString: utils.hexToNumberString,\n    hexToNumber: utils.hexToNumber,\n    toDecimal: utils.hexToNumber,\n    numberToHex: utils.numberToHex,\n    fromDecimal: utils.numberToHex,\n    hexToUtf8: utils.hexToUtf8,\n    hexToString: utils.hexToUtf8,\n    toUtf8: utils.hexToUtf8,\n    stripHexPrefix: utils.stripHexPrefix,\n    utf8ToHex: utils.utf8ToHex,\n    stringToHex: utils.utf8ToHex,\n    fromUtf8: utils.utf8ToHex,\n    hexToAscii: hexToAscii,\n    toAscii: hexToAscii,\n    asciiToHex: asciiToHex,\n    fromAscii: asciiToHex,\n    unitMap: ethjsUnit.unitMap,\n    toWei: toWei,\n    fromWei: fromWei,\n    padLeft: utils.leftPad,\n    leftPad: utils.leftPad,\n    padRight: utils.rightPad,\n    rightPad: utils.rightPad,\n    toTwosComplement: utils.toTwosComplement,\n    isBloom: utils.isBloom,\n    isUserEthereumAddressInBloom: utils.isUserEthereumAddressInBloom,\n    isContractAddressInBloom: utils.isContractAddressInBloom,\n    isTopic: utils.isTopic,\n    isTopicInBloom: utils.isTopicInBloom,\n    isInBloom: utils.isInBloom,\n    compareBlockNumbers: compareBlockNumbers,\n    toNumber: utils.toNumber\n};\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file soliditySha3.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar BN = require('bn.js');\nvar utils = require('./utils.js');\nvar _elementaryName = function (name) {\n    /*jshint maxcomplexity:false */\n    if (name.startsWith('int[')) {\n        return 'int256' + name.slice(3);\n    }\n    else if (name === 'int') {\n        return 'int256';\n    }\n    else if (name.startsWith('uint[')) {\n        return 'uint256' + name.slice(4);\n    }\n    else if (name === 'uint') {\n        return 'uint256';\n    }\n    else if (name.startsWith('fixed[')) {\n        return 'fixed128x128' + name.slice(5);\n    }\n    else if (name === 'fixed') {\n        return 'fixed128x128';\n    }\n    else if (name.startsWith('ufixed[')) {\n        return 'ufixed128x128' + name.slice(6);\n    }\n    else if (name === 'ufixed') {\n        return 'ufixed128x128';\n    }\n    return name;\n};\n// Parse N from type<N>\nvar _parseTypeN = function (type) {\n    var typesize = /^\\D+(\\d+).*$/.exec(type);\n    return typesize ? parseInt(typesize[1], 10) : null;\n};\n// Parse N from type[<N>]\nvar _parseTypeNArray = function (type) {\n    var arraySize = /^\\D+\\d*\\[(\\d+)\\]$/.exec(type);\n    return arraySize ? parseInt(arraySize[1], 10) : null;\n};\nvar _parseNumber = function (arg) {\n    var type = typeof arg;\n    if (type === 'string') {\n        if (utils.isHexStrict(arg)) {\n            return new BN(arg.replace(/0x/i, ''), 16);\n        }\n        else {\n            return new BN(arg, 10);\n        }\n    }\n    else if (type === 'number') {\n        return new BN(arg);\n    }\n    else if (utils.isBigNumber(arg)) {\n        return new BN(arg.toString(10));\n    }\n    else if (utils.isBN(arg)) {\n        return arg;\n    }\n    else {\n        throw new Error(arg + ' is not a number');\n    }\n};\nvar _solidityPack = function (type, value, arraySize) {\n    /*jshint maxcomplexity:false */\n    var size, num;\n    type = _elementaryName(type);\n    if (type === 'bytes') {\n        if (value.replace(/^0x/i, '').length % 2 !== 0) {\n            throw new Error('Invalid bytes characters ' + value.length);\n        }\n        return value;\n    }\n    else if (type === 'string') {\n        return utils.utf8ToHex(value);\n    }\n    else if (type === 'bool') {\n        return value ? '01' : '00';\n    }\n    else if (type.startsWith('address')) {\n        if (arraySize) {\n            size = 64;\n        }\n        else {\n            size = 40;\n        }\n        if (!utils.isAddress(value)) {\n            throw new Error(value + ' is not a valid address, or the checksum is invalid.');\n        }\n        return utils.leftPad(value.toLowerCase(), size);\n    }\n    size = _parseTypeN(type);\n    if (type.startsWith('bytes')) {\n        if (!size) {\n            throw new Error('bytes[] not yet supported in solidity');\n        }\n        // must be 32 byte slices when in an array\n        if (arraySize) {\n            size = 32;\n        }\n        if (size < 1 || size > 32 || size < value.replace(/^0x/i, '').length / 2) {\n            throw new Error('Invalid bytes' + size + ' for ' + value);\n        }\n        return utils.rightPad(value, size * 2);\n    }\n    else if (type.startsWith('uint')) {\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid uint' + size + ' size');\n        }\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n        if (num.lt(new BN(0))) {\n            throw new Error('Supplied uint ' + num.toString() + ' is negative');\n        }\n        return size ? utils.leftPad(num.toString('hex'), size / 8 * 2) : num;\n    }\n    else if (type.startsWith('int')) {\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid int' + size + ' size');\n        }\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n        if (num.lt(new BN(0))) {\n            return num.toTwos(size).toString('hex');\n        }\n        else {\n            return size ? utils.leftPad(num.toString('hex'), size / 8 * 2) : num;\n        }\n    }\n    else {\n        // FIXME: support all other types\n        throw new Error('Unsupported or invalid type: ' + type);\n    }\n};\nvar _processSolidityEncodePackedArgs = function (arg) {\n    /*jshint maxcomplexity:false */\n    if (Array.isArray(arg)) {\n        throw new Error('Autodetection of array types is not supported.');\n    }\n    var type, value = '';\n    var hexArg, arraySize;\n    // if type is given\n    if (!!arg && typeof arg === 'object' && (arg.hasOwnProperty('v') || arg.hasOwnProperty('t') || arg.hasOwnProperty('value') || arg.hasOwnProperty('type'))) {\n        type = arg.hasOwnProperty('t') ? arg.t : arg.type;\n        value = arg.hasOwnProperty('v') ? arg.v : arg.value;\n        // otherwise try to guess the type\n    }\n    else {\n        type = utils.toHex(arg, true);\n        value = utils.toHex(arg);\n        if (!type.startsWith('int') && !type.startsWith('uint')) {\n            type = 'bytes';\n        }\n    }\n    if ((type.startsWith('int') || type.startsWith('uint')) && typeof value === 'string' && !/^(-)?0x/i.test(value)) {\n        value = new BN(value);\n    }\n    // get the array size\n    if (Array.isArray(value)) {\n        arraySize = _parseTypeNArray(type);\n        if (arraySize && value.length !== arraySize) {\n            throw new Error(type + ' is not matching the given array ' + JSON.stringify(value));\n        }\n        else {\n            arraySize = value.length;\n        }\n    }\n    if (Array.isArray(value)) {\n        hexArg = value.map(function (val) {\n            return _solidityPack(type, val, arraySize).toString('hex').replace('0x', '');\n        });\n        return hexArg.join('');\n    }\n    else {\n        hexArg = _solidityPack(type, value, arraySize);\n        return hexArg.toString('hex').replace('0x', '');\n    }\n};\n/**\n * Hashes solidity values to a sha3 hash using keccak 256\n *\n * @method soliditySha3\n * @return {Object} the sha3\n */\nvar soliditySha3 = function () {\n    /*jshint maxcomplexity:false */\n    var args = Array.prototype.slice.call(arguments);\n    var hexArgs = args.map(_processSolidityEncodePackedArgs);\n    // console.log(args, hexArgs);\n    // console.log('0x'+ hexArgs.join(''));\n    return utils.sha3('0x' + hexArgs.join(''));\n};\n/**\n * Hashes solidity values to a sha3 hash using keccak 256 but does return the hash of value `null` instead of `null`\n *\n * @method soliditySha3Raw\n * @return {Object} the sha3\n */\nvar soliditySha3Raw = function () {\n    return utils.sha3Raw('0x' + Array.prototype.slice.call(arguments).map(_processSolidityEncodePackedArgs).join(''));\n};\n/**\n * Encode packed args to hex\n *\n * @method encodePacked\n * @return {String} the hex encoded arguments\n */\nvar encodePacked = function () {\n    /*jshint maxcomplexity:false */\n    var args = Array.prototype.slice.call(arguments);\n    var hexArgs = args.map(_processSolidityEncodePackedArgs);\n    return '0x' + hexArgs.join('').toLowerCase();\n};\nmodule.exports = {\n    soliditySha3: soliditySha3,\n    soliditySha3Raw: soliditySha3Raw,\n    encodePacked: encodePacked\n};\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\nvar utf8 = require('utf8');\nvar ethereumjsUtil = require('ethereumjs-util');\nvar ethereumBloomFilters = require('ethereum-bloom-filters');\n/**\n * Returns true if object is BN, otherwise false\n *\n * @method isBN\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBN = function (object) {\n    return BN.isBN(object);\n};\n/**\n * Returns true if object is BigNumber, otherwise false\n *\n * @method isBigNumber\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBigNumber = function (object) {\n    return object && object.constructor && object.constructor.name === 'BigNumber';\n};\n/**\n * Takes an input and transforms it into an BN\n *\n * @method toBN\n * @param {Number|String|BN} number, string, HEX string or BN\n * @return {BN} BN\n */\nvar toBN = function (number) {\n    try {\n        return numberToBN.apply(null, arguments);\n    }\n    catch (e) {\n        throw new Error(e + ' Given value: \"' + number + '\"');\n    }\n};\n/**\n * Takes and input transforms it into BN and if it is negative value, into two's complement\n *\n * @method toTwosComplement\n * @param {Number|String|BN} number\n * @return {String}\n */\nvar toTwosComplement = function (number) {\n    return '0x' + toBN(number).toTwos(256).toString(16, 64);\n};\n/**\n * Checks if the given string is an address\n *\n * @method isAddress\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar isAddress = function (address) {\n    // check if it has the basic requirements of an address\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        return false;\n        // If it's ALL lowercase or ALL upppercase\n    }\n    else if (/^(0x|0X)?[0-9a-f]{40}$/.test(address) || /^(0x|0X)?[0-9A-F]{40}$/.test(address)) {\n        return true;\n        // Otherwise check each case\n    }\n    else {\n        return checkAddressChecksum(address);\n    }\n};\n/**\n * Checks if the given string is a checksummed address\n *\n * @method checkAddressChecksum\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar checkAddressChecksum = function (address) {\n    // Check each case\n    address = address.replace(/^0x/i, '');\n    var addressHash = sha3(address.toLowerCase()).replace(/^0x/i, '');\n    for (var i = 0; i < 40; i++) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * Should be called to pad string to expected length\n *\n * @method leftPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar leftPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i, '');\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n    return (hasPrefix ? '0x' : '') + new Array(padding).join(sign ? sign : \"0\") + string;\n};\n/**\n * Should be called to pad string to expected length\n *\n * @method rightPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar rightPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i, '');\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n    return (hasPrefix ? '0x' : '') + string + (new Array(padding).join(sign ? sign : \"0\"));\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method utf8ToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar utf8ToHex = function (str) {\n    str = utf8.encode(str);\n    var hex = \"\";\n    // remove \\u0000 padding from either side\n    str = str.replace(/^(?:\\u0000)*/, '');\n    str = str.split(\"\").reverse().join(\"\");\n    str = str.replace(/^(?:\\u0000)*/, '');\n    str = str.split(\"\").reverse().join(\"\");\n    for (var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        // if (code !== 0) {\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n        // }\n    }\n    return \"0x\" + hex;\n};\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method hexToUtf8\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToUtf8 = function (hex) {\n    if (!isHexStrict(hex))\n        throw new Error('The parameter \"' + hex + '\" must be a valid HEX string.');\n    var str = \"\";\n    var code = 0;\n    hex = hex.replace(/^0x/i, '');\n    // remove 00 padding from either side\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    var l = hex.length;\n    for (var i = 0; i < l; i += 2) {\n        code = parseInt(hex.substr(i, 2), 16);\n        // if (code !== 0) {\n        str += String.fromCharCode(code);\n        // }\n    }\n    return utf8.decode(str);\n};\n/**\n * Converts value to it's number representation\n *\n * @method hexToNumber\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumber = function (value) {\n    if (!value) {\n        return value;\n    }\n    if (typeof value === 'string' && !isHexStrict(value)) {\n        throw new Error('Given value \"' + value + '\" is not a valid hex string.');\n    }\n    return toBN(value).toNumber();\n};\n/**\n * Converts value to it's decimal representation in string\n *\n * @method hexToNumberString\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumberString = function (value) {\n    if (!value)\n        return value;\n    if (typeof value === 'string' && !isHexStrict(value)) {\n        throw new Error('Given value \"' + value + '\" is not a valid hex string.');\n    }\n    return toBN(value).toString(10);\n};\n/**\n * Converts value to it's hex representation\n *\n * @method numberToHex\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar numberToHex = function (value) {\n    if ((value === null || value === undefined)) {\n        return value;\n    }\n    if (!isFinite(value) && !isHexStrict(value)) {\n        throw new Error('Given input \"' + value + '\" is not a number.');\n    }\n    var number = toBN(value);\n    var result = number.toString(16);\n    return number.lt(new BN(0)) ? '-0x' + result.substr(1) : '0x' + result;\n};\n/**\n * Convert a byte array to a hex string\n *\n * Note: Implementation from crypto-js\n *\n * @method bytesToHex\n * @param {Array} bytes\n * @return {String} the hex string\n */\nvar bytesToHex = function (bytes) {\n    for (var hex = [], i = 0; i < bytes.length; i++) {\n        /* jshint ignore:start */\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n        /* jshint ignore:end */\n    }\n    return '0x' + hex.join(\"\");\n};\n/**\n * Convert a hex string to a byte array\n *\n * Note: Implementation from crypto-js\n *\n * @method hexToBytes\n * @param {string} hex\n * @return {Array} the byte array\n */\nvar hexToBytes = function (hex) {\n    hex = hex.toString(16);\n    if (!isHexStrict(hex)) {\n        throw new Error('Given value \"' + hex + '\" is not a valid hex string.');\n    }\n    hex = hex.replace(/^0x/i, '');\n    for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n    return bytes;\n};\n/**\n * Auto converts any given value into it's hex representation.\n *\n * And even stringifys objects before.\n *\n * @method toHex\n * @param {String|Number|BN|Object|Buffer} value\n * @param {Boolean} returnType\n * @return {String}\n */\nvar toHex = function (value, returnType) {\n    /*jshint maxcomplexity: false */\n    if (isAddress(value)) {\n        return returnType ? 'address' : '0x' + value.toLowerCase().replace(/^0x/i, '');\n    }\n    if (typeof value === 'boolean') {\n        return returnType ? 'bool' : value ? '0x01' : '0x00';\n    }\n    if (Buffer.isBuffer(value)) {\n        return '0x' + value.toString('hex');\n    }\n    if (typeof value === 'object' && !!value && !isBigNumber(value) && !isBN(value)) {\n        return returnType ? 'string' : utf8ToHex(JSON.stringify(value));\n    }\n    // if its a negative number, pass it through numberToHex\n    if (typeof value === 'string') {\n        if (value.indexOf('-0x') === 0 || value.indexOf('-0X') === 0) {\n            return returnType ? 'int256' : numberToHex(value);\n        }\n        else if (value.indexOf('0x') === 0 || value.indexOf('0X') === 0) {\n            return returnType ? 'bytes' : value;\n        }\n        else if (!isFinite(value)) {\n            return returnType ? 'string' : utf8ToHex(value);\n        }\n    }\n    return returnType ? (value < 0 ? 'int256' : 'uint256') : numberToHex(value);\n};\n/**\n * Check if string is HEX, requires a 0x in front\n *\n * @method isHexStrict\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHexStrict = function (hex) {\n    return ((typeof hex === 'string' || typeof hex === 'number') && /^(-)?0x[0-9a-f]*$/i.test(hex));\n};\n/**\n * Check if string is HEX\n *\n * @method isHex\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHex = function (hex) {\n    return ((typeof hex === 'string' || typeof hex === 'number') && /^(-0x|0x)?[0-9a-f]*$/i.test(hex));\n};\n/**\n * Remove 0x prefix from string\n *\n * @method stripHexPrefix\n * @param {String} str to be checked\n * @returns {String}\n */\nvar stripHexPrefix = function (str) {\n    if (str !== 0 && isHex(str))\n        return str.replace(/^(-)?0x/i, '$1');\n    return str;\n};\n/**\n * Returns true if given string is a valid Ethereum block header bloom.\n *\n * @method isBloom\n * @param {String} bloom encoded bloom filter\n * @return {Boolean}\n */\nvar isBloom = function (bloom) {\n    return ethereumBloomFilters.isBloom(bloom);\n};\n/**\n * Returns true if the ethereum users address is part of the given bloom\n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} ethereumAddress encoded bloom filter\n * @param {String} bloom ethereum addresss\n * @return {Boolean}\n */\nvar isUserEthereumAddressInBloom = function (bloom, ethereumAddress) {\n    return ethereumBloomFilters.isUserEthereumAddressInBloom(bloom, ethereumAddress);\n};\n/**\n * Returns true if the contract address is part of the given bloom\n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} contractAddress contract addresss\n * @return {Boolean}\n */\nvar isContractAddressInBloom = function (bloom, contractAddress) {\n    return ethereumBloomFilters.isContractAddressInBloom(bloom, contractAddress);\n};\n/**\n * Returns true if given string is a valid log topic.\n *\n * @method isTopic\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\nvar isTopic = function (topic) {\n    return ethereumBloomFilters.isTopic(topic);\n};\n/**\n * Returns true if the topic is part of the given bloom\n * note: false positives are possible.\n *\n * @method isTopicInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\nvar isTopicInBloom = function (bloom, topic) {\n    return ethereumBloomFilters.isTopicInBloom(bloom, topic);\n};\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n *\n * @method isInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String | Uint8Array} topic encoded value\n * @return {Boolean}\n */\nvar isInBloom = function (bloom, topic) {\n    return ethereumBloomFilters.isInBloom(bloom, topic);\n};\n/**\n * Hashes values to a sha3 hash using keccak 256\n *\n * To hash a HEX string the hex must have 0x in front.\n *\n * @method sha3\n * @return {String} the sha3 string\n */\nvar SHA3_NULL_S = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\nvar sha3 = function (value) {\n    if (isBN(value)) {\n        value = value.toString();\n    }\n    if (isHexStrict(value) && /^0x/i.test((value).toString())) {\n        value = ethereumjsUtil.toBuffer(value);\n    }\n    else if (typeof value === 'string') {\n        // Assume value is an arbitrary string\n        value = Buffer.from(value, 'utf-8');\n    }\n    var returnValue = ethereumjsUtil.bufferToHex(ethereumjsUtil.keccak256(value));\n    if (returnValue === SHA3_NULL_S) {\n        return null;\n    }\n    else {\n        return returnValue;\n    }\n};\n// expose the under the hood keccak256\nsha3._Hash = ethereumjsUtil.keccak256;\n/**\n * @method sha3Raw\n *\n * @param value\n *\n * @returns {string}\n */\nvar sha3Raw = function (value) {\n    value = sha3(value);\n    if (value === null) {\n        return SHA3_NULL_S;\n    }\n    return value;\n};\n/**\n * Auto converts any given value into it's hex representation,\n * then converts hex to number.\n *\n * @method toNumber\n * @param {String|Number|BN} value\n * @return {Number}\n */\nvar toNumber = function (value) {\n    return typeof value === 'number' ? value : hexToNumber(toHex(value));\n};\nmodule.exports = {\n    BN: BN,\n    isBN: isBN,\n    isBigNumber: isBigNumber,\n    toBN: toBN,\n    isAddress: isAddress,\n    isBloom: isBloom,\n    isUserEthereumAddressInBloom: isUserEthereumAddressInBloom,\n    isContractAddressInBloom: isContractAddressInBloom,\n    isTopic: isTopic,\n    isTopicInBloom: isTopicInBloom,\n    isInBloom: isInBloom,\n    checkAddressChecksum: checkAddressChecksum,\n    utf8ToHex: utf8ToHex,\n    hexToUtf8: hexToUtf8,\n    hexToNumber: hexToNumber,\n    hexToNumberString: hexToNumberString,\n    numberToHex: numberToHex,\n    toHex: toHex,\n    hexToBytes: hexToBytes,\n    bytesToHex: bytesToHex,\n    isHex: isHex,\n    isHexStrict: isHexStrict,\n    stripHexPrefix: stripHexPrefix,\n    leftPad: leftPad,\n    rightPad: rightPad,\n    toTwosComplement: toTwosComplement,\n    sha3: sha3,\n    sha3Raw: sha3Raw,\n    toNumber: toNumber\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"sourceRoot":""}