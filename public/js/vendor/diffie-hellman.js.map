{"version":3,"sources":["webpack:///./node_modules/diffie-hellman/browser.js","webpack:///./node_modules/diffie-hellman/lib/dh.js","webpack:///./node_modules/diffie-hellman/lib/generatePrime.js","webpack:///./node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js"],"names":["generatePrime","primes","DH","ENCODINGS","exports","DiffieHellmanGroup","createDiffieHellmanGroup","getDiffieHellman","mod","prime","Buffer","gen","createDiffieHellman","DiffieHellman","enc","generator","genc","isBuffer","undefined","BN","millerRabin","TWENTYFOUR","ELEVEN","TEN","THREE","SEVEN","randomBytes","setPublicKey","pub","this","_pub","setPrivateKey","priv","_priv","module","primeCache","malleable","setGenerator","__prime","_prime","mont","_primeLen","length","_primeCode","formatReturnValue","bn","buf","toArray","toString","Object","defineProperty","prototype","enumerable","get","hex","join","rem","error","isEven","simpleSieve","fermatTest","test","shrn","cmp","checkPrime","__gen","generateKeys","_gen","toRed","redPow","fromRed","getPublicKey","computeSecret","other","secret","out","getPrime","front","fill","concat","getPrivateKey","getGenerator","findPrime","ONE","TWO","FIVE","FOUR","_getPrimes","res","i","k","sqrt","Math","ceil","j","p","modn","cmpn","red","subn","bits","num","n2","bitLength","ishrn","iadd","testn","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","constructor","number","base","endian","isBN","negative","words","_init","wordSize","e","parseHex","str","start","end","r","len","min","c","charCodeAt","parseBase","mul","Array","isArray","max","left","right","_initNumber","_initArray","replace","_parseHex","_parseBase","strip","w","off","limbLen","limbPow","total","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","a","b","lo","carry","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","q","andln","iushrn","clz32","_countBits","t","_zeroBits","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","shln","ushln","ushrn","imaskn","maskn","isubn","addn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","ctx","convertTo","_forceRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","redInvm","redNeg","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","u"],"mappings":"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","file":"js/vendor/diffie-hellman.js","sourcesContent":["var generatePrime = require('./lib/generatePrime')\nvar primes = require('./lib/primes.json')\n\nvar DH = require('./lib/dh')\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n","var BN = require('bn.js');\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar TWENTYFOUR = new BN(24);\nvar ELEVEN = new BN(11);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar primes = require('./generatePrime');\nvar randomBytes = require('randombytes');\nmodule.exports = DH;\n\nfunction setPublicKey(pub, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n  this._pub = new BN(pub);\n  return this;\n}\n\nfunction setPrivateKey(priv, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n  this._priv = new BN(priv);\n  return this;\n}\n\nvar primeCache = {};\nfunction checkPrime(prime, generator) {\n  var gen = generator.toString('hex');\n  var hex = [gen, prime.toString(16)].join('_');\n  if (hex in primeCache) {\n    return primeCache[hex];\n  }\n  var error = 0;\n\n  if (prime.isEven() ||\n    !primes.simpleSieve ||\n    !primes.fermatTest(prime) ||\n    !millerRabin.test(prime)) {\n    //not a prime so +1\n    error += 1;\n\n    if (gen === '02' || gen === '05') {\n      // we'd be able to check the generator\n      // it would fail so +8\n      error += 8;\n    } else {\n      //we wouldn't be able to test the generator\n      // so +4\n      error += 4;\n    }\n    primeCache[hex] = error;\n    return error;\n  }\n  if (!millerRabin.test(prime.shrn(1))) {\n    //not a safe prime\n    error += 2;\n  }\n  var rem;\n  switch (gen) {\n    case '02':\n      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        // unsuidable generator\n        error += 8;\n      }\n      break;\n    case '05':\n      rem = prime.mod(TEN);\n      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n        // prime mod 10 needs to equal 3 or 7\n        error += 8;\n      }\n      break;\n    default:\n      error += 4;\n  }\n  primeCache[hex] = error;\n  return error;\n}\n\nfunction DH(prime, generator, malleable) {\n  this.setGenerator(generator);\n  this.__prime = new BN(prime);\n  this._prime = BN.mont(this.__prime);\n  this._primeLen = prime.length;\n  this._pub = undefined;\n  this._priv = undefined;\n  this._primeCode = undefined;\n  if (malleable) {\n    this.setPublicKey = setPublicKey;\n    this.setPrivateKey = setPrivateKey;\n  } else {\n    this._primeCode = 8;\n  }\n}\nObject.defineProperty(DH.prototype, 'verifyError', {\n  enumerable: true,\n  get: function () {\n    if (typeof this._primeCode !== 'number') {\n      this._primeCode = checkPrime(this.__prime, this.__gen);\n    }\n    return this._primeCode;\n  }\n});\nDH.prototype.generateKeys = function () {\n  if (!this._priv) {\n    this._priv = new BN(randomBytes(this._primeLen));\n  }\n  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n  return this.getPublicKey();\n};\n\nDH.prototype.computeSecret = function (other) {\n  other = new BN(other);\n  other = other.toRed(this._prime);\n  var secret = other.redPow(this._priv).fromRed();\n  var out = new Buffer(secret.toArray());\n  var prime = this.getPrime();\n  if (out.length < prime.length) {\n    var front = new Buffer(prime.length - out.length);\n    front.fill(0);\n    out = Buffer.concat([front, out]);\n  }\n  return out;\n};\n\nDH.prototype.getPublicKey = function getPublicKey(enc) {\n  return formatReturnValue(this._pub, enc);\n};\n\nDH.prototype.getPrivateKey = function getPrivateKey(enc) {\n  return formatReturnValue(this._priv, enc);\n};\n\nDH.prototype.getPrime = function (enc) {\n  return formatReturnValue(this.__prime, enc);\n};\n\nDH.prototype.getGenerator = function (enc) {\n  return formatReturnValue(this._gen, enc);\n};\n\nDH.prototype.setGenerator = function (gen, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(gen)) {\n    gen = new Buffer(gen, enc);\n  }\n  this.__gen = gen;\n  this._gen = new BN(gen);\n  return this;\n};\n\nfunction formatReturnValue(bn, enc) {\n  var buf = new Buffer(bn.toArray());\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}\n","var randomBytes = require('randombytes');\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\nvar BN = require('bn.js');\nvar TWENTYFOUR = new BN(24);\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null)\n    return primes;\n\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n    for (var j = 0; j < i && res[j] <= sqrt; j++)\n      if (k % res[j] === 0)\n        break;\n\n    if (i !== j && res[j] <= sqrt)\n      continue;\n\n    res[i++] = k;\n  }\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++)\n    if (p.modn(primes[i]) === 0) {\n      if (p.cmpn(primes[i]) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n  gen = new BN(gen);\n\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n    n2 = num.shrn(1);\n    if (simpleSieve(n2) && simpleSieve(num) &&\n      fermatTest(n2) && fermatTest(num) &&\n      millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"sourceRoot":""}