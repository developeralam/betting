{"version":3,"sources":["webpack:///./node_modules/web3-eth-iban/lib/index.js","webpack:///./node_modules/web3-eth-iban/node_modules/bn.js/lib/bn.js"],"names":["utils","BigNumber","iso13616Prepare","iban","A","charCodeAt","Z","toUpperCase","substr","split","map","n","code","join","mod9710","block","remainder","length","slice","parseInt","Iban","this","_iban","ib","isDirect","Error","toAddress","address","fromAddress","toString","isAddress","replace","padded","string","bytes","result","leftPad","fromBban","bban","checkDigit","countryCode","options","institution","identifier","isValid","test","isIndirect","base36","asBn","toChecksumAddress","module","exports","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","window","e","parseHex4Bits","index","c","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","len","Math","min","i","num","Array","isArray","max","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","ceil","j","w","off","strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","a","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","undefined","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u"],"mappings":"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","file":"js/vendor/web3-eth-iban.js","sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file iban.js\n *\n * Details: https://github.com/ethereum/wiki/wiki/ICAP:-Inter-exchange-Client-Address-Protocol\n *\n * @author Marek Kotewicz <marek@parity.io>\n * @date 2015\n */\n\"use strict\";\nconst utils = require('web3-utils');\nconst BigNumber = require('bn.js');\nconst leftPad = function (string, bytes) {\n    let result = string;\n    while (result.length < bytes * 2) {\n        result = '0' + result;\n    }\n    return result;\n};\n/**\n * Prepare an IBAN for mod 97 computation by moving the first 4 chars to the end and transforming the letters to\n * numbers (A = 10, B = 11, ..., Z = 35), as specified in ISO13616.\n *\n * @method iso13616Prepare\n * @param {String} iban the IBAN\n * @returns {String} the prepared IBAN\n */\nconst iso13616Prepare = function (iban) {\n    const A = 'A'.charCodeAt(0);\n    const Z = 'Z'.charCodeAt(0);\n    iban = iban.toUpperCase();\n    iban = iban.substr(4) + iban.substr(0, 4);\n    return iban.split('').map(function (n) {\n        const code = n.charCodeAt(0);\n        if (code >= A && code <= Z) {\n            // A = 10, B = 11, ... Z = 35\n            return code - A + 10;\n        }\n        else {\n            return n;\n        }\n    }).join('');\n};\n/**\n * Calculates the MOD 97 10 of the passed IBAN as specified in ISO7064.\n *\n * @method mod9710\n * @param {String} iban\n * @returns {Number}\n */\nconst mod9710 = function (iban) {\n    let remainder = iban;\n    let block;\n    while (remainder.length > 2) {\n        block = remainder.slice(0, 9);\n        remainder = parseInt(block, 10) % 97 + remainder.slice(block.length);\n    }\n    return parseInt(remainder, 10) % 97;\n};\n/**\n * This prototype should be used to create iban object from iban correct string\n *\n * @param {String} iban\n */\nclass Iban {\n    constructor(iban) {\n        this._iban = iban;\n    }\n    /**\n     * This method should be used to create an ethereum address from a direct iban address\n     *\n     * @method toAddress\n     * @param {String} iban address\n     * @return {String} the ethereum address\n     */\n    static toAddress(ib) {\n        ib = new Iban(ib);\n        if (!ib.isDirect()) {\n            throw new Error('IBAN is indirect and can\\'t be converted');\n        }\n        return ib.toAddress();\n    }\n    /**\n     * This method should be used to create iban address from an ethereum address\n     *\n     * @method toIban\n     * @param {String} address\n     * @return {String} the IBAN address\n     */\n    static toIban(address) {\n        return Iban.fromAddress(address).toString();\n    }\n    /**\n     * This method should be used to create iban object from an ethereum address\n     *\n     * @method fromAddress\n     * @param {String} address\n     * @return {Iban} the IBAN object\n     */\n    static fromAddress(address) {\n        if (!utils.isAddress(address)) {\n            throw new Error('Provided address is not a valid address: ' + address);\n        }\n        address = address.replace('0x', '').replace('0X', '');\n        const asBn = new BigNumber(address, 16);\n        const base36 = asBn.toString(36);\n        const padded = leftPad(base36, 15);\n        return Iban.fromBban(padded.toUpperCase());\n    }\n    /**\n     * Convert the passed BBAN to an IBAN for this country specification.\n     * Please note that <i>\"generation of the IBAN shall be the exclusive responsibility of the bank/branch servicing the account\"</i>.\n     * This method implements the preferred algorithm described in http://en.wikipedia.org/wiki/International_Bank_Account_Number#Generating_IBAN_check_digits\n     *\n     * @method fromBban\n     * @param {String} bban the BBAN to convert to IBAN\n     * @returns {Iban} the IBAN object\n     */\n    static fromBban(bban) {\n        const countryCode = 'XE';\n        const remainder = mod9710(iso13616Prepare(countryCode + '00' + bban));\n        const checkDigit = ('0' + (98 - remainder)).slice(-2);\n        return new Iban(countryCode + checkDigit + bban);\n    }\n    /**\n     * Should be used to create IBAN object for given institution and identifier\n     *\n     * @method createIndirect\n     * @param {Object} options, required options are \"institution\" and \"identifier\"\n     * @return {Iban} the IBAN object\n     */\n    static createIndirect(options) {\n        return Iban.fromBban('ETH' + options.institution + options.identifier);\n    }\n    /**\n     * This method should be used to check if given string is valid iban object\n     *\n     * @method isValid\n     * @param {String} iban string\n     * @return {Boolean} true if it is valid IBAN\n     */\n    static isValid(iban) {\n        const i = new Iban(iban);\n        return i.isValid();\n    }\n    ;\n    /**\n     * Should be called to check if iban is correct\n     *\n     * @method isValid\n     * @returns {Boolean} true if it is, otherwise false\n     */\n    isValid() {\n        return /^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(this._iban) &&\n            mod9710(iso13616Prepare(this._iban)) === 1;\n    }\n    ;\n    /**\n     * Should be called to check if iban number is direct\n     *\n     * @method isDirect\n     * @returns {Boolean} true if it is, otherwise false\n     */\n    isDirect() {\n        return this._iban.length === 34 || this._iban.length === 35;\n    }\n    ;\n    /**\n     * Should be called to check if iban number if indirect\n     *\n     * @method isIndirect\n     * @returns {Boolean} true if it is, otherwise false\n     */\n    isIndirect() {\n        return this._iban.length === 20;\n    }\n    ;\n    /**\n     * Should be called to get iban checksum\n     * Uses the mod-97-10 checksumming protocol (ISO/IEC 7064:2003)\n     *\n     * @method checksum\n     * @returns {String} checksum\n     */\n    checksum() {\n        return this._iban.substr(2, 2);\n    }\n    ;\n    /**\n     * Should be called to get institution identifier\n     * eg. XREG\n     *\n     * @method institution\n     * @returns {String} institution identifier\n     */\n    institution() {\n        return this.isIndirect() ? this._iban.substr(7, 4) : '';\n    }\n    ;\n    /**\n     * Should be called to get client identifier within institution\n     * eg. GAVOFYORK\n     *\n     * @method client\n     * @returns {String} client identifier\n     */\n    client() {\n        return this.isIndirect() ? this._iban.substr(11) : '';\n    }\n    ;\n    /**\n     * Should be called to get client direct address\n     *\n     * @method toAddress\n     * @returns {String} ethereum address\n     */\n    toAddress() {\n        if (this.isDirect()) {\n            const base36 = this._iban.substr(4);\n            const asBn = new BigNumber(base36, 36);\n            return utils.toChecksumAddress(asBn.toString(16, 20));\n        }\n        return '';\n    }\n    ;\n    toString() {\n        return this._iban;\n    }\n    ;\n}\nmodule.exports = Iban;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"sourceRoot":""}