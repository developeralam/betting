{"version":3,"sources":["webpack:///./node_modules/ethjs-unit/lib/index.js","webpack:///./node_modules/ethjs-unit/node_modules/bn.js/lib/bn.js"],"names":["BN","numberToBN","zero","negative1","unitMap","getValueOfUnit","unitInput","unit","toLowerCase","unitValue","Error","JSON","stringify","numberToString","arg","match","String","toString","toTwos","dividedToIntegerBy","toPrecision","module","exports","fromWei","weiInput","optionsInput","wei","negative","lt","base","baseLength","length","options","mul","fraction","mod","pad","whole","div","commify","replace","value","toWei","etherInput","ether","substring","comps","split","add","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","number","endian","isBN","this","words","red","_init","Buffer","wordSize","e","parseHex","str","start","end","r","len","Math","min","i","c","charCodeAt","parseBase","num","Array","isArray","max","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","strip","toArray","ceil","j","w","off","limbLen","limbPow","total","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","a","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u"],"mappings":"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","file":"js/vendor/ethjs-unit.js","sourcesContent":["'use strict';\n\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\n\nvar zero = new BN(0);\nvar negative1 = new BN(-1);\n\n// complete ethereum unit map\nvar unitMap = {\n  'noether': '0', // eslint-disable-line\n  'wei': '1', // eslint-disable-line\n  'kwei': '1000', // eslint-disable-line\n  'Kwei': '1000', // eslint-disable-line\n  'babbage': '1000', // eslint-disable-line\n  'femtoether': '1000', // eslint-disable-line\n  'mwei': '1000000', // eslint-disable-line\n  'Mwei': '1000000', // eslint-disable-line\n  'lovelace': '1000000', // eslint-disable-line\n  'picoether': '1000000', // eslint-disable-line\n  'gwei': '1000000000', // eslint-disable-line\n  'Gwei': '1000000000', // eslint-disable-line\n  'shannon': '1000000000', // eslint-disable-line\n  'nanoether': '1000000000', // eslint-disable-line\n  'nano': '1000000000', // eslint-disable-line\n  'szabo': '1000000000000', // eslint-disable-line\n  'microether': '1000000000000', // eslint-disable-line\n  'micro': '1000000000000', // eslint-disable-line\n  'finney': '1000000000000000', // eslint-disable-line\n  'milliether': '1000000000000000', // eslint-disable-line\n  'milli': '1000000000000000', // eslint-disable-line\n  'ether': '1000000000000000000', // eslint-disable-line\n  'kether': '1000000000000000000000', // eslint-disable-line\n  'grand': '1000000000000000000000', // eslint-disable-line\n  'mether': '1000000000000000000000000', // eslint-disable-line\n  'gether': '1000000000000000000000000000', // eslint-disable-line\n  'tether': '1000000000000000000000000000000' };\n\n/**\n * Returns value of unit in Wei\n *\n * @method getValueOfUnit\n * @param {String} unit the unit to convert to, default ether\n * @returns {BigNumber} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nfunction getValueOfUnit(unitInput) {\n  var unit = unitInput ? unitInput.toLowerCase() : 'ether';\n  var unitValue = unitMap[unit]; // eslint-disable-line\n\n  if (typeof unitValue !== 'string') {\n    throw new Error('[ethjs-unit] the unit provided ' + unitInput + ' doesn\\'t exists, please use the one of the following units ' + JSON.stringify(unitMap, null, 2));\n  }\n\n  return new BN(unitValue, 10);\n}\n\nfunction numberToString(arg) {\n  if (typeof arg === 'string') {\n    if (!arg.match(/^-?[0-9.]+$/)) {\n      throw new Error('while converting number to string, invalid number value \\'' + arg + '\\', should be a number matching (^-?[0-9.]+).');\n    }\n    return arg;\n  } else if (typeof arg === 'number') {\n    return String(arg);\n  } else if (typeof arg === 'object' && arg.toString && (arg.toTwos || arg.dividedToIntegerBy)) {\n    if (arg.toPrecision) {\n      return String(arg.toPrecision());\n    } else {\n      // eslint-disable-line\n      return arg.toString(10);\n    }\n  }\n  throw new Error('while converting number to string, invalid number value \\'' + arg + '\\' type ' + typeof arg + '.');\n}\n\nfunction fromWei(weiInput, unit, optionsInput) {\n  var wei = numberToBN(weiInput); // eslint-disable-line\n  var negative = wei.lt(zero); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n  var options = optionsInput || {};\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  var fraction = wei.mod(base).toString(10); // eslint-disable-line\n\n  while (fraction.length < baseLength) {\n    fraction = '0' + fraction;\n  }\n\n  if (!options.pad) {\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n  }\n\n  var whole = wei.div(base).toString(10); // eslint-disable-line\n\n  if (options.commify) {\n    whole = whole.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  var value = '' + whole + (fraction == '0' ? '' : '.' + fraction); // eslint-disable-line\n\n  if (negative) {\n    value = '-' + value;\n  }\n\n  return value;\n}\n\nfunction toWei(etherInput, unit) {\n  var ether = numberToString(etherInput); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n\n  // Is it negative?\n  var negative = ether.substring(0, 1) === '-'; // eslint-disable-line\n  if (negative) {\n    ether = ether.substring(1);\n  }\n\n  if (ether === '.') {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, invalid value');\n  }\n\n  // Split it into a whole and fractional part\n  var comps = ether.split('.'); // eslint-disable-line\n  if (comps.length > 2) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei,  too many decimal points');\n  }\n\n  var whole = comps[0],\n      fraction = comps[1]; // eslint-disable-line\n\n  if (!whole) {\n    whole = '0';\n  }\n  if (!fraction) {\n    fraction = '0';\n  }\n  if (fraction.length > baseLength) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, too many decimal places');\n  }\n\n  while (fraction.length < baseLength) {\n    fraction += '0';\n  }\n\n  whole = new BN(whole);\n  fraction = new BN(fraction);\n  var wei = whole.mul(base).add(fraction); // eslint-disable-line\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  return new BN(wei.toString(10), 10);\n}\n\nmodule.exports = {\n  unitMap: unitMap,\n  numberToString: numberToString,\n  getValueOfUnit: getValueOfUnit,\n  fromWei: fromWei,\n  toWei: toWei\n};","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buf' + 'fer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"sourceRoot":""}