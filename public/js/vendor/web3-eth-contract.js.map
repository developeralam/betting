{"version":3,"sources":["webpack:///./node_modules/web3-eth-contract/lib/index.js"],"names":["core","Method","utils","Subscription","formatters","errors","promiEvent","abi","Contract","jsonInterface","address","options","_this","this","args","Array","prototype","slice","call","arguments","Error","setProvider","packageInit","clearSubscriptions","_requestManager","constructor","isArray","ContractMissingABIError","lastArg","length","_getOrSetDefaultOptions","Object","defineProperty","set","value","_address","toChecksumAddress","inputAddressFormatter","get","enumerable","methods","events","_jsonInterface","map","method","func","funcName","constant","stateMutability","payable","name","_jsonInterfaceMethodToString","type","signature","encodeFunctionSignature","_createTxObject","bind","parent","cascadeFunc","nextMethod","encodeEventSignature","event","_on","allEvents","defaultAccount","defaultBlock","handleRevert","val","common","defaultCommon","hardfork","defaultHardfork","chain","defaultChain","transactionPollingTimeout","transactionPollingInterval","transactionConfirmationBlocks","transactionBlockTimeout","blockHeaderTimeout","provider","accounts","_ethAccounts","_getCallback","pop","_checkListener","ContractReservedEventError","gasPrice","String","from","data","gas","gasLimit","_encodeEventABI","filter","result","f","undefined","forEach","inputBlockNumberFormatter","topics","anonymous","push","indexedTopics","inputs","i","indexed","v","encodeParameter","concat","toLowerCase","_decodeEventABI","outputLogFormatter","find","intf","indexedInputs","input","argTopics","returnValues","decodeLog","__length__","raw","_encodeMethodABI","methodSignature","_method","paramsABI","_parent","json","replace","inputLength","encodeParameters","_deployData","startsWith","returnValue","_decodeMethodReturn","outputs","decodeParameters","deploy","callback","ContractMissingDeployDataError","apply","deployData","_generateEventOptions","eventName","ContractEventDoesNotExistError","isAddress","ContractNoAddressDefinedError","params","clone","once","ContractOnceRequiresCallbackError","fromBlock","err","res","sub","unsubscribe","subOptions","toBlock","console","warn","subscription","inputFormatter","inputLogFormatter","outputFormatter","subscriptionHandler","output","removed","emit","requestManager","subscribe","getPastEvents","getPastLogs","setRequestManager","buildCall","txObject","_executeMethod","request","send","encodeABI","estimateGas","createAccessList","InvalidNumberOfParams","_processExecuteArguments","defer","processedArgs","shift","isFinite","generateRequest","to","_fireError","eventEmitter","reject","ethAccounts","payload","inputCallFormatter","inputDefaultBlockNumberFormatter","format","ContractNoFromAddressDefinedError","inputTransactionFormatter","createFunction","hexToNumber","abiCoder","extraFormatters","receiptFormatter","receipt","logs","log","count","ev","contractDeployFormatter","newContract","contractAddress","sendTransaction","module","exports"],"mappings":"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","file":"js/vendor/web3-eth-contract.js","sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file contract.js\n *\n * To initialize a contract use:\n *\n *  var Contract = require('web3-eth-contract');\n *  Contract.setProvider('ws://localhost:8546');\n *  var contract = new Contract(abi, address, ...);\n *\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\"use strict\";\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar utils = require('web3-utils');\nvar Subscription = require('web3-core-subscriptions').subscription;\nvar formatters = require('web3-core-helpers').formatters;\nvar errors = require('web3-core-helpers').errors;\nvar promiEvent = require('web3-core-promievent');\nvar abi = require('web3-eth-abi');\n/**\n * Should be called to create new contract instance\n *\n * @method Contract\n * @constructor\n * @param {Array} jsonInterface\n * @param {String} address\n * @param {Object} options\n */\nvar Contract = function Contract(jsonInterface, address, options) {\n    var _this = this, args = Array.prototype.slice.call(arguments);\n    if (!(this instanceof Contract)) {\n        throw new Error('Please use the \"new\" keyword to instantiate a web3.eth.Contract() object!');\n    }\n    this.setProvider = function () {\n        core.packageInit(_this, arguments);\n        _this.clearSubscriptions = _this._requestManager.clearSubscriptions;\n    };\n    // sets _requestmanager\n    core.packageInit(this, [this.constructor]);\n    this.clearSubscriptions = this._requestManager.clearSubscriptions;\n    if (!jsonInterface || !(Array.isArray(jsonInterface))) {\n        throw errors.ContractMissingABIError();\n    }\n    // create the options object\n    this.options = {};\n    var lastArg = args[args.length - 1];\n    if (!!lastArg && typeof lastArg === 'object' && !Array.isArray(lastArg)) {\n        options = lastArg;\n        this.options = { ...this.options, ...this._getOrSetDefaultOptions(options) };\n        if (!!address && typeof address === 'object') {\n            address = null;\n        }\n    }\n    // set address\n    Object.defineProperty(this.options, 'address', {\n        set: function (value) {\n            if (value) {\n                _this._address = utils.toChecksumAddress(formatters.inputAddressFormatter(value));\n            }\n        },\n        get: function () {\n            return _this._address;\n        },\n        enumerable: true\n    });\n    // add method and event signatures, when the jsonInterface gets set\n    Object.defineProperty(this.options, 'jsonInterface', {\n        set: function (value) {\n            _this.methods = {};\n            _this.events = {};\n            _this._jsonInterface = value.map(function (method) {\n                var func, funcName;\n                // make constant and payable backwards compatible\n                method.constant = (method.stateMutability === \"view\" || method.stateMutability === \"pure\" || method.constant);\n                method.payable = (method.stateMutability === \"payable\" || method.payable);\n                if (method.name) {\n                    funcName = utils._jsonInterfaceMethodToString(method);\n                }\n                // function\n                if (method.type === 'function') {\n                    method.signature = abi.encodeFunctionSignature(funcName);\n                    func = _this._createTxObject.bind({\n                        method: method,\n                        parent: _this\n                    });\n                    // add method only if not one already exists\n                    if (!_this.methods[method.name]) {\n                        _this.methods[method.name] = func;\n                    }\n                    else {\n                        var cascadeFunc = _this._createTxObject.bind({\n                            method: method,\n                            parent: _this,\n                            nextMethod: _this.methods[method.name]\n                        });\n                        _this.methods[method.name] = cascadeFunc;\n                    }\n                    // definitely add the method based on its signature\n                    _this.methods[method.signature] = func;\n                    // add method by name\n                    _this.methods[funcName] = func;\n                    // event\n                }\n                else if (method.type === 'event') {\n                    method.signature = abi.encodeEventSignature(funcName);\n                    var event = _this._on.bind(_this, method.signature);\n                    // add method only if not already exists\n                    if (!_this.events[method.name] || _this.events[method.name].name === 'bound ')\n                        _this.events[method.name] = event;\n                    // definitely add the method based on its signature\n                    _this.events[method.signature] = event;\n                    // add event by name\n                    _this.events[funcName] = event;\n                }\n                return method;\n            });\n            // add allEvents\n            _this.events.allEvents = _this._on.bind(_this, 'allevents');\n            return _this._jsonInterface;\n        },\n        get: function () {\n            return _this._jsonInterface;\n        },\n        enumerable: true\n    });\n    // get default account from the Class\n    var defaultAccount = this.constructor.defaultAccount;\n    var defaultBlock = this.constructor.defaultBlock || 'latest';\n    Object.defineProperty(this, 'handleRevert', {\n        get: function () {\n            if (_this.options.handleRevert === false || _this.options.handleRevert === true) {\n                return _this.options.handleRevert;\n            }\n            return this.constructor.handleRevert;\n        },\n        set: function (val) {\n            _this.options.handleRevert = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultCommon', {\n        get: function () {\n            return _this.options.common || this.constructor.defaultCommon;\n        },\n        set: function (val) {\n            _this.options.common = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultHardfork', {\n        get: function () {\n            return _this.options.hardfork || this.constructor.defaultHardfork;\n        },\n        set: function (val) {\n            _this.options.hardfork = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultChain', {\n        get: function () {\n            return _this.options.chain || this.constructor.defaultChain;\n        },\n        set: function (val) {\n            _this.options.chain = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionPollingTimeout', {\n        get: function () {\n            if (_this.options.transactionPollingTimeout === 0) {\n                return _this.options.transactionPollingTimeout;\n            }\n            return _this.options.transactionPollingTimeout || this.constructor.transactionPollingTimeout;\n        },\n        set: function (val) {\n            _this.options.transactionPollingTimeout = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionPollingInterval', {\n        get: function () {\n            if (_this.options.transactionPollingInterval === 0) {\n                return _this.options.transactionPollingInterval;\n            }\n            return _this.options.transactionPollingInterval || this.constructor.transactionPollingInterval;\n        },\n        set: function (val) {\n            _this.options.transactionPollingInterval = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionConfirmationBlocks', {\n        get: function () {\n            if (_this.options.transactionConfirmationBlocks === 0) {\n                return _this.options.transactionConfirmationBlocks;\n            }\n            return _this.options.transactionConfirmationBlocks || this.constructor.transactionConfirmationBlocks;\n        },\n        set: function (val) {\n            _this.options.transactionConfirmationBlocks = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionBlockTimeout', {\n        get: function () {\n            if (_this.options.transactionBlockTimeout === 0) {\n                return _this.options.transactionBlockTimeout;\n            }\n            return _this.options.transactionBlockTimeout || this.constructor.transactionBlockTimeout;\n        },\n        set: function (val) {\n            _this.options.transactionBlockTimeout = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'blockHeaderTimeout', {\n        get: function () {\n            if (_this.options.blockHeaderTimeout === 0) {\n                return _this.options.blockHeaderTimeout;\n            }\n            return _this.options.blockHeaderTimeout || this.constructor.blockHeaderTimeout;\n        },\n        set: function (val) {\n            _this.options.blockHeaderTimeout = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultAccount', {\n        get: function () {\n            return defaultAccount;\n        },\n        set: function (val) {\n            if (val) {\n                defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val));\n            }\n            return val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultBlock', {\n        get: function () {\n            return defaultBlock;\n        },\n        set: function (val) {\n            defaultBlock = val;\n            return val;\n        },\n        enumerable: true\n    });\n    // properties\n    this.methods = {};\n    this.events = {};\n    this._address = null;\n    this._jsonInterface = [];\n    // set getter/setter properties\n    this.options.address = address;\n    this.options.jsonInterface = jsonInterface;\n};\n/**\n * Sets the new provider, creates a new requestManager, registers the \"data\" listener on the provider and sets the\n * accounts module for the Contract class.\n *\n * @method setProvider\n *\n * @param {string|provider} provider\n * @param {Accounts} accounts\n *\n * @returns void\n */\nContract.setProvider = function (provider, accounts) {\n    // Contract.currentProvider = provider;\n    core.packageInit(this, [provider]);\n    this._ethAccounts = accounts;\n};\n/**\n * Get the callback and modify the array if necessary\n *\n * @method _getCallback\n * @param {Array} args\n * @return {Function} the callback\n */\nContract.prototype._getCallback = function getCallback(args) {\n    if (args && !!args[args.length - 1] && typeof args[args.length - 1] === 'function') {\n        return args.pop(); // modify the args array!\n    }\n};\n/**\n * Checks that no listener with name \"newListener\" or \"removeListener\" is added.\n *\n * @method _checkListener\n * @param {String} type\n * @param {String} event\n * @return {Object} the contract instance\n */\nContract.prototype._checkListener = function (type, event) {\n    if (event === type) {\n        throw errors.ContractReservedEventError(type);\n    }\n};\n/**\n * Use default values, if options are not available\n *\n * @method _getOrSetDefaultOptions\n * @param {Object} options the options gived by the user\n * @return {Object} the options with gaps filled by defaults\n */\nContract.prototype._getOrSetDefaultOptions = function getOrSetDefaultOptions(options) {\n    var gasPrice = options.gasPrice ? String(options.gasPrice) : null;\n    var from = options.from ? utils.toChecksumAddress(formatters.inputAddressFormatter(options.from)) : null;\n    options.data = options.data || this.options.data;\n    options.from = from || this.options.from;\n    options.gasPrice = gasPrice || this.options.gasPrice;\n    options.gas = options.gas || options.gasLimit || this.options.gas;\n    // TODO replace with only gasLimit?\n    delete options.gasLimit;\n    return options;\n};\n/**\n * Should be used to encode indexed params and options to one final object\n *\n * @method _encodeEventABI\n * @param {Object} event\n * @param {Object} options\n * @return {Object} everything combined together and encoded\n */\nContract.prototype._encodeEventABI = function (event, options) {\n    options = options || {};\n    var filter = options.filter || {}, result = {};\n    ['fromBlock', 'toBlock'].filter(function (f) {\n        return options[f] !== undefined;\n    }).forEach(function (f) {\n        result[f] = formatters.inputBlockNumberFormatter(options[f]);\n    });\n    // use given topics\n    if (Array.isArray(options.topics)) {\n        result.topics = options.topics;\n        // create topics based on filter\n    }\n    else {\n        result.topics = [];\n        // add event signature\n        if (event && !event.anonymous && event.name !== 'ALLEVENTS') {\n            result.topics.push(event.signature);\n        }\n        // add event topics (indexed arguments)\n        if (event.name !== 'ALLEVENTS') {\n            var indexedTopics = event.inputs.filter(function (i) {\n                return i.indexed === true;\n            }).map(function (i) {\n                var value = filter[i.name];\n                if (!value) {\n                    return null;\n                }\n                // TODO: https://github.com/ethereum/web3.js/issues/344\n                // TODO: deal properly with components\n                if (Array.isArray(value)) {\n                    return value.map(function (v) {\n                        return abi.encodeParameter(i.type, v);\n                    });\n                }\n                return abi.encodeParameter(i.type, value);\n            });\n            result.topics = result.topics.concat(indexedTopics);\n        }\n        if (!result.topics.length)\n            delete result.topics;\n    }\n    if (this.options.address) {\n        result.address = this.options.address.toLowerCase();\n    }\n    return result;\n};\n/**\n * Should be used to decode indexed params and options\n *\n * @method _decodeEventABI\n * @param {Object} data\n * @return {Object} result object with decoded indexed && not indexed params\n */\nContract.prototype._decodeEventABI = function (data) {\n    var event = this;\n    data.data = data.data || '';\n    data.topics = data.topics || [];\n    var result = formatters.outputLogFormatter(data);\n    // if allEvents get the right event\n    if (event.name === 'ALLEVENTS') {\n        event = event.jsonInterface.find(function (intf) {\n            return (intf.signature === data.topics[0]);\n        }) || { anonymous: true };\n    }\n    // create empty inputs if none are present (e.g. anonymous events on allEvents)\n    event.inputs = event.inputs || [];\n    // Handle case where an event signature shadows the current ABI with non-identical\n    // arg indexing. If # of topics doesn't match, event is anon.\n    if (!event.anonymous) {\n        let indexedInputs = 0;\n        event.inputs.forEach(input => input.indexed ? indexedInputs++ : null);\n        if (indexedInputs > 0 && (data.topics.length !== indexedInputs + 1)) {\n            event = {\n                anonymous: true,\n                inputs: []\n            };\n        }\n    }\n    var argTopics = event.anonymous ? data.topics : data.topics.slice(1);\n    result.returnValues = abi.decodeLog(event.inputs, data.data, argTopics);\n    delete result.returnValues.__length__;\n    // add name\n    result.event = event.name;\n    // add signature\n    result.signature = (event.anonymous || !data.topics[0]) ? null : data.topics[0];\n    // move the data and topics to \"raw\"\n    result.raw = {\n        data: result.data,\n        topics: result.topics\n    };\n    delete result.data;\n    delete result.topics;\n    return result;\n};\n/**\n * Encodes an ABI for a method, including signature or the method.\n * Or when constructor encodes only the constructor parameters.\n *\n * @method _encodeMethodABI\n * @param {Mixed} args the arguments to encode\n * @param {String} the encoded ABI\n */\nContract.prototype._encodeMethodABI = function _encodeMethodABI() {\n    var methodSignature = this._method.signature, args = this.arguments || [];\n    var signature = false, paramsABI = this._parent.options.jsonInterface.filter(function (json) {\n        return ((methodSignature === 'constructor' && json.type === methodSignature) ||\n            ((json.signature === methodSignature || json.signature === methodSignature.replace('0x', '') || json.name === methodSignature) && json.type === 'function'));\n    }).map(function (json) {\n        var inputLength = (Array.isArray(json.inputs)) ? json.inputs.length : 0;\n        if (inputLength !== args.length) {\n            throw new Error('The number of arguments is not matching the methods required number. You need to pass ' + inputLength + ' arguments.');\n        }\n        if (json.type === 'function') {\n            signature = json.signature;\n        }\n        return Array.isArray(json.inputs) ? json.inputs : [];\n    }).map(function (inputs) {\n        return abi.encodeParameters(inputs, args).replace('0x', '');\n    })[0] || '';\n    // return constructor\n    if (methodSignature === 'constructor') {\n        if (!this._deployData)\n            throw new Error('The contract has no contract data option set. This is necessary to append the constructor parameters.');\n        if (!this._deployData.startsWith('0x')) {\n            this._deployData = '0x' + this._deployData;\n        }\n        return this._deployData + paramsABI;\n    }\n    // return method\n    var returnValue = (signature) ? signature + paramsABI : paramsABI;\n    if (!returnValue) {\n        throw new Error('Couldn\\'t find a matching contract method named \"' + this._method.name + '\".');\n    }\n    return returnValue;\n};\n/**\n * Decode method return values\n *\n * @method _decodeMethodReturn\n * @param {Array} outputs\n * @param {String} returnValues\n * @return {Object} decoded output return values\n */\nContract.prototype._decodeMethodReturn = function (outputs, returnValues) {\n    if (!returnValues) {\n        return null;\n    }\n    returnValues = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;\n    var result = abi.decodeParameters(outputs, returnValues);\n    if (result.__length__ === 1) {\n        return result[0];\n    }\n    delete result.__length__;\n    return result;\n};\n/**\n * Deploys a contract and fire events based on its state: transactionHash, receipt\n *\n * All event listeners will be removed, once the last possible event is fired (\"error\", or \"receipt\")\n *\n * @method deploy\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} EventEmitter possible events are \"error\", \"transactionHash\" and \"receipt\"\n */\nContract.prototype.deploy = function (options, callback) {\n    options = options || {};\n    options.arguments = options.arguments || [];\n    options = this._getOrSetDefaultOptions(options);\n    // throw error, if no \"data\" is specified\n    if (!options.data) {\n        if (typeof callback === 'function') {\n            return callback(errors.ContractMissingDeployDataError());\n        }\n        throw errors.ContractMissingDeployDataError();\n    }\n    var constructor = this.options.jsonInterface.find((method) => {\n        return (method.type === 'constructor');\n    }) || {};\n    constructor.signature = 'constructor';\n    return this._createTxObject.apply({\n        method: constructor,\n        parent: this,\n        deployData: options.data,\n        _ethAccounts: this.constructor._ethAccounts\n    }, options.arguments);\n};\n/**\n * Gets the event signature and outputFormatters\n *\n * @method _generateEventOptions\n * @param {Object} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event options object\n */\nContract.prototype._generateEventOptions = function () {\n    var args = Array.prototype.slice.call(arguments);\n    // get the callback\n    var callback = this._getCallback(args);\n    // get the options\n    var options = (!!args[args.length - 1] && typeof args[args.length - 1]) === 'object' ? args.pop() : {};\n    var eventName = (typeof args[0] === 'string') ? args[0] : 'allevents';\n    var event = (eventName.toLowerCase() === 'allevents') ? {\n        name: 'ALLEVENTS',\n        jsonInterface: this.options.jsonInterface\n    } : this.options.jsonInterface.find(function (json) {\n        return (json.type === 'event' && (json.name === eventName || json.signature === '0x' + eventName.replace('0x', '')));\n    });\n    if (!event) {\n        throw errors.ContractEventDoesNotExistError(eventName);\n    }\n    if (!utils.isAddress(this.options.address)) {\n        throw errors.ContractNoAddressDefinedError();\n    }\n    return {\n        params: this._encodeEventABI(event, options),\n        event: event,\n        callback: callback\n    };\n};\n/**\n * Adds event listeners and creates a subscription, and remove it once its fired.\n *\n * @method clone\n * @return {Object} the event subscription\n */\nContract.prototype.clone = function () {\n    return new this.constructor(this.options.jsonInterface, this.options.address, this.options);\n};\n/**\n * Adds event listeners and creates a subscription, and remove it once its fired.\n *\n * @method once\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event subscription\n */\nContract.prototype.once = function (event, options, callback) {\n    var args = Array.prototype.slice.call(arguments);\n    // get the callback\n    callback = this._getCallback(args);\n    if (!callback) {\n        throw errors.ContractOnceRequiresCallbackError();\n    }\n    // don't allow fromBlock\n    if (options)\n        delete options.fromBlock;\n    // don't return as once shouldn't provide \"on\"\n    this._on(event, options, function (err, res, sub) {\n        sub.unsubscribe();\n        if (typeof callback === 'function') {\n            callback(err, res, sub);\n        }\n    });\n    return undefined;\n};\n/**\n * Adds event listeners and creates a subscription.\n *\n * @method _on\n *\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n *\n * @return {Object} the event subscription\n */\nContract.prototype._on = function () {\n    var subOptions = this._generateEventOptions.apply(this, arguments);\n    if (subOptions.params && subOptions.params.toBlock) {\n        delete subOptions.params.toBlock;\n        console.warn('Invalid option: toBlock. Use getPastEvents for specific range.');\n    }\n    // prevent the event \"newListener\" and \"removeListener\" from being overwritten\n    this._checkListener('newListener', subOptions.event.name);\n    this._checkListener('removeListener', subOptions.event.name);\n    // TODO check if listener already exists? and reuse subscription if options are the same.\n    // create new subscription\n    var subscription = new Subscription({\n        subscription: {\n            params: 1,\n            inputFormatter: [formatters.inputLogFormatter],\n            outputFormatter: this._decodeEventABI.bind(subOptions.event),\n            // DUBLICATE, also in web3-eth\n            subscriptionHandler: function (output) {\n                if (output.removed) {\n                    this.emit('changed', output);\n                }\n                else {\n                    this.emit('data', output);\n                }\n                if (typeof this.callback === 'function') {\n                    this.callback(null, output, this);\n                }\n            }\n        },\n        type: 'eth',\n        requestManager: this._requestManager\n    });\n    subscription.subscribe('logs', subOptions.params, subOptions.callback || function () { });\n    return subscription;\n};\n/**\n * Get past events from contracts\n *\n * @method getPastEvents\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the promievent\n */\nContract.prototype.getPastEvents = function () {\n    var subOptions = this._generateEventOptions.apply(this, arguments);\n    var getPastLogs = new Method({\n        name: 'getPastLogs',\n        call: 'eth_getLogs',\n        params: 1,\n        inputFormatter: [formatters.inputLogFormatter],\n        outputFormatter: this._decodeEventABI.bind(subOptions.event)\n    });\n    getPastLogs.setRequestManager(this._requestManager);\n    var call = getPastLogs.buildCall();\n    getPastLogs = null;\n    return call(subOptions.params, subOptions.callback);\n};\n/**\n * returns the an object with call, send, estimate functions\n *\n * @method _createTxObject\n * @returns {Object} an object with functions to call the methods\n */\nContract.prototype._createTxObject = function _createTxObject() {\n    var args = Array.prototype.slice.call(arguments);\n    var txObject = {};\n    if (this.method.type === 'function') {\n        txObject.call = this.parent._executeMethod.bind(txObject, 'call');\n        txObject.call.request = this.parent._executeMethod.bind(txObject, 'call', true); // to make batch requests\n    }\n    txObject.send = this.parent._executeMethod.bind(txObject, 'send');\n    txObject.send.request = this.parent._executeMethod.bind(txObject, 'send', true); // to make batch requests\n    txObject.encodeABI = this.parent._encodeMethodABI.bind(txObject);\n    txObject.estimateGas = this.parent._executeMethod.bind(txObject, 'estimate');\n    txObject.createAccessList = this.parent._executeMethod.bind(txObject, 'createAccessList');\n    if (args && this.method.inputs && args.length !== this.method.inputs.length) {\n        if (this.nextMethod) {\n            return this.nextMethod.apply(null, args);\n        }\n        throw errors.InvalidNumberOfParams(args.length, this.method.inputs.length, this.method.name);\n    }\n    txObject.arguments = args || [];\n    txObject._method = this.method;\n    txObject._parent = this.parent;\n    txObject._ethAccounts = this.parent.constructor._ethAccounts || this._ethAccounts;\n    if (this.deployData) {\n        txObject._deployData = this.deployData;\n    }\n    return txObject;\n};\n/**\n * Generates the options for the execute call\n *\n * @method _processExecuteArguments\n * @param {Array} args\n * @param {Promise} defer\n */\nContract.prototype._processExecuteArguments = function _processExecuteArguments(args, defer) {\n    var processedArgs = {};\n    processedArgs.type = args.shift();\n    // get the callback\n    processedArgs.callback = this._parent._getCallback(args);\n    // get block number to use for call\n    if (processedArgs.type === 'call' && args[args.length - 1] !== true && (typeof args[args.length - 1] === 'string' || isFinite(args[args.length - 1])))\n        processedArgs.defaultBlock = args.pop();\n    // get the options\n    processedArgs.options = (!!args[args.length - 1] && typeof args[args.length - 1]) === 'object' ? args.pop() : {};\n    // get the generateRequest argument for batch requests\n    processedArgs.generateRequest = (args[args.length - 1] === true) ? args.pop() : false;\n    processedArgs.options = this._parent._getOrSetDefaultOptions(processedArgs.options);\n    processedArgs.options.data = this.encodeABI();\n    // add contract address\n    if (!this._deployData && !utils.isAddress(this._parent.options.address))\n        throw errors.ContractNoAddressDefinedError();\n    if (!this._deployData)\n        processedArgs.options.to = this._parent.options.address;\n    // return error, if no \"data\" is specified\n    if (!processedArgs.options.data)\n        return utils._fireError(new Error('Couldn\\'t find a matching contract method, or the number of parameters is wrong.'), defer.eventEmitter, defer.reject, processedArgs.callback);\n    return processedArgs;\n};\n/**\n * Executes a call, transact or estimateGas on a contract function\n *\n * @method _executeMethod\n * @param {String} type the type this execute function should execute\n * @param {Boolean} makeRequest if true, it simply returns the request parameters, rather than executing it\n */\nContract.prototype._executeMethod = function _executeMethod() {\n    var _this = this, args = this._parent._processExecuteArguments.call(this, Array.prototype.slice.call(arguments), defer), defer = promiEvent((args.type !== 'send')), ethAccounts = _this.constructor._ethAccounts || _this._ethAccounts;\n    // simple return request for batch requests\n    if (args.generateRequest) {\n        var payload = {\n            params: [formatters.inputCallFormatter.call(this._parent, args.options)],\n            callback: args.callback\n        };\n        if (args.type === 'call') {\n            payload.params.push(formatters.inputDefaultBlockNumberFormatter.call(this._parent, args.defaultBlock));\n            payload.method = 'eth_call';\n            payload.format = this._parent._decodeMethodReturn.bind(null, this._method.outputs);\n        }\n        else {\n            payload.method = 'eth_sendTransaction';\n        }\n        return payload;\n    }\n    switch (args.type) {\n        case 'createAccessList':\n            // return error, if no \"from\" is specified\n            if (!utils.isAddress(args.options.from)) {\n                return utils._fireError(errors.ContractNoFromAddressDefinedError(), defer.eventEmitter, defer.reject, args.callback);\n            }\n            var createAccessList = (new Method({\n                name: 'createAccessList',\n                call: 'eth_createAccessList',\n                params: 2,\n                inputFormatter: [formatters.inputTransactionFormatter, formatters.inputDefaultBlockNumberFormatter],\n                requestManager: _this._parent._requestManager,\n                accounts: ethAccounts,\n                defaultAccount: _this._parent.defaultAccount,\n                defaultBlock: _this._parent.defaultBlock\n            })).createFunction();\n            return createAccessList(args.options, args.callback);\n        case 'estimate':\n            var estimateGas = (new Method({\n                name: 'estimateGas',\n                call: 'eth_estimateGas',\n                params: 1,\n                inputFormatter: [formatters.inputCallFormatter],\n                outputFormatter: utils.hexToNumber,\n                requestManager: _this._parent._requestManager,\n                accounts: ethAccounts,\n                defaultAccount: _this._parent.defaultAccount,\n                defaultBlock: _this._parent.defaultBlock\n            })).createFunction();\n            return estimateGas(args.options, args.callback);\n        case 'call':\n            // TODO check errors: missing \"from\" should give error on deploy and send, call ?\n            var call = (new Method({\n                name: 'call',\n                call: 'eth_call',\n                params: 2,\n                inputFormatter: [formatters.inputCallFormatter, formatters.inputDefaultBlockNumberFormatter],\n                // add output formatter for decoding\n                outputFormatter: function (result) {\n                    return _this._parent._decodeMethodReturn(_this._method.outputs, result);\n                },\n                requestManager: _this._parent._requestManager,\n                accounts: ethAccounts,\n                defaultAccount: _this._parent.defaultAccount,\n                defaultBlock: _this._parent.defaultBlock,\n                handleRevert: _this._parent.handleRevert,\n                abiCoder: abi\n            })).createFunction();\n            return call(args.options, args.defaultBlock, args.callback);\n        case 'send':\n            // return error, if no \"from\" is specified\n            if (!utils.isAddress(args.options.from)) {\n                return utils._fireError(errors.ContractNoFromAddressDefinedError(), defer.eventEmitter, defer.reject, args.callback);\n            }\n            if (typeof this._method.payable === 'boolean' && !this._method.payable && args.options.value && args.options.value > 0) {\n                return utils._fireError(new Error('Can not send value to non-payable contract method or constructor'), defer.eventEmitter, defer.reject, args.callback);\n            }\n            // make sure receipt logs are decoded\n            var extraFormatters = {\n                receiptFormatter: function (receipt) {\n                    if (Array.isArray(receipt.logs)) {\n                        // decode logs\n                        var events = receipt.logs.map((log) => {\n                            return _this._parent._decodeEventABI.call({\n                                name: 'ALLEVENTS',\n                                jsonInterface: _this._parent.options.jsonInterface\n                            }, log);\n                        });\n                        // make log names keys\n                        receipt.events = {};\n                        var count = 0;\n                        events.forEach(function (ev) {\n                            if (ev.event) {\n                                // if > 1 of the same event, don't overwrite any existing events\n                                if (receipt.events[ev.event]) {\n                                    if (Array.isArray(receipt.events[ev.event])) {\n                                        receipt.events[ev.event].push(ev);\n                                    }\n                                    else {\n                                        receipt.events[ev.event] = [receipt.events[ev.event], ev];\n                                    }\n                                }\n                                else {\n                                    receipt.events[ev.event] = ev;\n                                }\n                            }\n                            else {\n                                receipt.events[count] = ev;\n                                count++;\n                            }\n                        });\n                        delete receipt.logs;\n                    }\n                    return receipt;\n                },\n                contractDeployFormatter: function (receipt) {\n                    var newContract = _this._parent.clone();\n                    newContract.options.address = receipt.contractAddress;\n                    return newContract;\n                }\n            };\n            var sendTransaction = (new Method({\n                name: 'sendTransaction',\n                call: 'eth_sendTransaction',\n                params: 1,\n                inputFormatter: [formatters.inputTransactionFormatter],\n                requestManager: _this._parent._requestManager,\n                accounts: _this.constructor._ethAccounts || _this._ethAccounts,\n                defaultAccount: _this._parent.defaultAccount,\n                defaultBlock: _this._parent.defaultBlock,\n                transactionBlockTimeout: _this._parent.transactionBlockTimeout,\n                transactionConfirmationBlocks: _this._parent.transactionConfirmationBlocks,\n                transactionPollingTimeout: _this._parent.transactionPollingTimeout,\n                transactionPollingInterval: _this._parent.transactionPollingInterval,\n                defaultCommon: _this._parent.defaultCommon,\n                defaultChain: _this._parent.defaultChain,\n                defaultHardfork: _this._parent.defaultHardfork,\n                handleRevert: _this._parent.handleRevert,\n                extraFormatters: extraFormatters,\n                abiCoder: abi\n            })).createFunction();\n            return sendTransaction(args.options, args.callback);\n        default:\n            throw new Error('Method \"' + args.type + '\" not implemented.');\n    }\n};\nmodule.exports = Contract;\n"],"sourceRoot":""}