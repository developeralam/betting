{"version":3,"sources":["webpack:///./node_modules/@solana/buffer-layout/lib/Layout.js","webpack:///./node_modules/@solana/buffer-layout/node_modules/buffer/index.js","webpack:///./node_modules/@solana/web3.js/lib/index.browser.esm.js","webpack:///./node_modules/@solana/web3.js/node_modules/bs58/index.js","webpack:///./node_modules/@solana/web3.js/node_modules/buffer/index.js"],"names":["exports","u8","buffer_1","checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","Buffer","from","buffer","byteOffset","length","Layout","span","property","Number","isInteger","this","offset","RangeError","rv","Object","create","constructor","prototype","assign","values","nameWithProperty","name","lo","ExternalLayout","Error","GreedyCount","elementSpan","super","rem","Math","floor","src","OffsetLayout","layout","UInt","UIntBE","decode","encode","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","isCount","idx","getSpan","i","push","elo","reduce","v","Structure","fields","decodePrefixes","Array","isArray","acc","undefined","fd","e","fsp","dest","makeDestinationObject","firstOffset","lastOffset","lastWrote","fv","shift","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","replicate","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","hasOwnProperty","call","tag","dlo","clo","contentOffset","variant","VariantLayout","vb","union","fromArray","fixBitwiseResult","BitStructure","word","msb","value","_packedSetValue","_packedGetValue","bits","bf","BitField","Boolean","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","slice","srcBuffer","write","toString","CString","String","srcb","copy","UTF8","maxSpan","Constant","base64","ieee754","customInspectSymbol","Symbol","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","buf","setPrototypeOf","arg","encodingOrOffset","allocUnsafe","string","encoding","isEncoding","byteLength","actual","fromString","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","obj","isBuffer","len","checked","numberIsNaN","type","data","fromObject","toPrimitive","assertSize","size","array","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","base64Write","ucs2Write","units","c","hi","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","mul","readUintBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readInt8","readInt16LE","readInt16BE","readBigInt64LE","readBigInt64BE","writeUintLE","writeUintBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","limit","sub","writeInt8","writeInt16LE","writeInt16BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","code","errors","E","sym","getMessage","Base","writable","configurable","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","base64clean","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","toBuffer","commonjsGlobal","globalThis","window","g","self","getDefaultExportFromCjs","__esModule","hash$1","utils$9","minimalisticAssert","assert$6","equal","l","r","inherits_browser","ctor","superCtor","super_","TempCtor","assert$5","inherits","isSurrogatePair","htonl","w","zero2","zero8","toArray","enc","p","toHex","toHex32","endian","join32","k","split32","rotr32","rotl32","sum32","sum32_3","sum32_4","d","sum32_5","sum64","ah","al","bh","sum64_hi","bl","sum64_lo","sum64_4_hi","ch","cl","dh","dl","carry","sum64_4_lo","sum64_5_hi","eh","el","sum64_5_lo","rotr64_hi","num","rotr64_lo","shr64_hi","shr64_lo","common$5","utils$8","assert$4","BlockHash$4","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","BlockHash","update","_update","digest","_pad","_digest","t","sha","common$4","ch32$1","z","maj32$1","p32","ft_1","s","ch32","maj32","s0_256","s1_256","g0_256","g1_256","utils$6","common$3","shaCommon$1","rotl32$1","sum32$2","sum32_5$1","BlockHash$3","sha1_K","SHA1","h","W","_1","utils$5","common$2","shaCommon","assert$3","sum32$1","sum32_4$1","BlockHash$2","sha256_K","SHA256$1","_256","f","T1","T2","utils$4","SHA256","SHA224","_224","utils$3","common$1","assert$2","BlockHash$1","sha512_K","SHA512$1","_512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","utils$2","SHA512","SHA384","_384","sha1","sha224","sha256","sha384","sha512","ripemd","utils$1","common","RIPEMD160","K","Kh","ripemd160","A","B","C","D","Ah","Bh","Ch","Dh","Eh","T","rh","sh","utils","assert$1","Hmac","hash","key","Hash","inner","outer","_init","hmac","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","off","_logLevel","_globalLogger","_normalizeError","missing","forEach","form","normalize","join","_checkNormalize","LogLevel","ErrorCode","HEX","Logger","version","logLevel","args","level","throwArgumentError","log","_log","levels","DEBUG","INFO","WARNING","params","makeError","UNKNOWN_ERROR","messageDetails","keys","hex","JSON","stringify","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","INVALID_ARGUMENT","argument","condition","UNSUPPORTED_OPERATION","operation","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","kind","censorship","permanent","globalLogger","warn","logger","addSlice","arrayify","options","checkSafeUint53","result","unshift","allowMissingPrefix","substring","isHexable","toHexString","match","isHexString","hexPad","isBytes","Struct","properties","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","Map","PublicKey","_bn","isPublicKeyData","decoded","publicKey","eq","toBytes","toBase58","toArrayLike","zeroPad","fromPublicKey","seed","programId","seeds","publicKeyBytes","is_on_curve","address","nonce","seedsWithNonce","createProgramAddress","err","pubkey","default","naclLowLevel","gf","chk","den","den2","den4","den6","set25519","gf1","unpack25519","S","M","Z","pow2523","neq25519","I","pack25519","crypto_verify_32","rustString","rsl","_decode","_encode","rslShim","chars","decodeLength","elem","encodeLength","rem_len","Message","header","accountKeys","recentBlockhash","instructions","indexToProgramIds","map","account","ix","programIdIndex","index","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","has","filter","_","isProgramId","numKeys","keyCount","instruction","accounts","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","PACKET_DATA_SIZE","instructionBufferLength","signDataLayout","transaction","signData","accountCount","dataSlice","messageArgs","assert","DEFAULT_SIGNATURE","TransactionInstruction","opts","isSigner","isWritable","Transaction","signatures","signature","feePayer","nonceInfo","_message","_json","nonceInstruction","items","item","programIds","accountMetas","accountMeta","sort","pubkeySorting","localeCompare","checkSigner","checkWritable","uniqueMetas","pubkeyString","uniqueIndex","findIndex","feePayerIndex","payerMeta","splice","signedKeys","unsignedKeys","meta","keyIndex","compileMessage","every","pair","_compile","connection","getFeeForMessage","signers","seen","Set","add","uniqueSigners","signer","_partialSign","_verifySignatures","secretKey","_addSignature","sigpair","serializeMessage","requireAllSignatures","config","verifySignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","isAccountSigner","isAccountWritable","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","async","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","getAlloc","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","SYSTEM_INSTRUCTION_LAYOUTS","freeze","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","SystemProgram","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","base","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","nonceInitialize","authorized","instructionData","newAuthorizedPubkey","CHUNK_SIZE","Loader","ceil","chunkSize","payer","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","allocate","owner","transfer","dataLayout","transactions","bytesLength","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","browserPonyfill","module","global","__self__","F","fetch","DOMException","support","viewClasses","isArrayBufferView","normalizeName","test","normalizeValue","iteratorFor","iterator","next","done","Headers","headers","append","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","view","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","arrayBuffer","then","text","readAsText","readArrayBufferAsText","formData","json","parse","oldValue","callback","thisArg","entries","methods","Request","method","upcased","credentials","mode","signal","toUpperCase","referrer","decodeURIComponent","Response","bodyInit","ok","statusText","clone","response","redirectStatuses","redirect","location","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","ponyfill","ctx","crossFetch","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","SendTransactionError","logs","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","createRpcResult","jsonrpc","id","UnknownRpcResult","jsonRpcResult","schema","jsonRpcResultAndContext","context","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","state","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","GetBlockRpcResult","blockhash","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","lastValidBlockHeight","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","endpoint","commitmentOrConfig","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","lastFetch","transactionSignatures","simulatedSignatures","_accountChangeSubscriptionCounter","_accountChangeSubscriptions","_programAccountChangeSubscriptionCounter","_programAccountChangeSubscriptions","_rootSubscriptionCounter","_rootSubscriptions","_signatureSubscriptionCounter","_signatureSubscriptions","_slotSubscriptionCounter","_slotSubscriptions","_logsSubscriptionCounter","_logsSubscriptions","_slotUpdateSubscriptionCounter","_slotUpdateSubscriptions","URL","protocol","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","client","confirmTransactionInitialTimeout","useHttps","host","port","makeWebsocketUrl","customFetch","fetchWithMiddleware","modifiedFetchArgs","modifiedUrl","modifiedOptions","agent","too_many_requests_retries","waitTime","createRpcClient","requests","batch","methodName","createRpcBatchRequest","autoconnect","max_reconnects","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_buildArgs","unsafeRes","getBalanceAndContext","catch","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","mintAddress","getAccountInfoAndContext","publicKeys","getMultipleAccountsInfoAndContext","configOrCommitment","extra","filters","decodedSignature","Date","now","subscriptionCommitment","subscriptionId","confirmPromise","onSignature","timeoutMs","timeoutId","timeoutPromise","race","clearTimeout","promiseTimeout","removeSignatureListener","duration","toFixed","startSlot","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","addresses","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","rest","block","endSlot","transactionDetails","firstAvailableBlock","getFirstAvailableBlock","getConfirmedBlockSignatures","until","highestConfirmedRoot","getSlot","before","getConfirmedSignaturesForAddress2","accountInfo","fromAccountData","getNonceAndContext","to","disableCache","expired","_pollNewBlockhash","startTime","getRecentBlockhash","MS_PER_SLOT","transactionOrMessage","includeAccounts","originalTx","sign","_recentBlockhash","encodedTransaction","nonProgramIds","sigVerify","traceIndent","logTrace","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","clearInterval","_resetSubscriptions","rpcMethod","rpcArgs","unsubscribeId","programKeys","slotKeys","slotUpdateKeys","signatureKeys","rootKeys","logsKeys","_subscribe","mentions","connect","close","notification","subInfo","_unsubscribe","accountId","override","Keypair","keypair","_keypair","skipValidation","TextEncoder","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","privateKey","fromSecretKey","createInstructionWithPublicKey","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","lockup","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","StakeProgram","stakePubkey","maybeLockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","publicKeyCreate","ecdsaSign","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","startsWith","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","recid","website","details","keybaseUsername","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","voteInit","Voter","VoteProgram","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","authorizedWithdrawerPubkey","http","devnet","testnet","https","clusterApiUrl","cluster","tls","basex"],"mappings":"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","file":"js/vendor/solana.js","sourcesContent":["/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","import nacl from 'tweetnacl';\nimport { Buffer } from 'buffer';\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport { serialize, deserialize, deserializeUnchecked } from 'borsh';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { coerce, instance, string, tuple, literal, unknown, union, type, optional, any, number, array, nullable, create, boolean, record, assert as assert$7 } from 'superstruct';\nimport { Client } from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nconst toBuffer = arr => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar hash$1 = {};\n\nvar utils$9 = {};\n\nvar minimalisticAssert = assert$6;\n\nfunction assert$6(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert$6.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\nvar inherits_browser = {exports: {}};\n\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  inherits_browser.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    }\n  };\n} else {\n  // old school shim for old browsers\n  inherits_browser.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      var TempCtor = function () {};\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    }\n  };\n}\n\nvar assert$5 = minimalisticAssert;\nvar inherits = inherits_browser.exports;\n\nutils$9.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nutils$9.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils$9.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nutils$9.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nutils$9.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils$9.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nutils$9.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert$5(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nutils$9.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nutils$9.split32 = split32;\n\nfunction rotr32$1(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nutils$9.rotr32 = rotr32$1;\n\nfunction rotl32$2(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nutils$9.rotl32 = rotl32$2;\n\nfunction sum32$3(a, b) {\n  return (a + b) >>> 0;\n}\nutils$9.sum32 = sum32$3;\n\nfunction sum32_3$1(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nutils$9.sum32_3 = sum32_3$1;\n\nfunction sum32_4$2(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nutils$9.sum32_4 = sum32_4$2;\n\nfunction sum32_5$2(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nutils$9.sum32_5 = sum32_5$2;\n\nfunction sum64$1(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nutils$9.sum64 = sum64$1;\n\nfunction sum64_hi$1(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nutils$9.sum64_hi = sum64_hi$1;\n\nfunction sum64_lo$1(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nutils$9.sum64_lo = sum64_lo$1;\n\nfunction sum64_4_hi$1(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nutils$9.sum64_4_hi = sum64_4_hi$1;\n\nfunction sum64_4_lo$1(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nutils$9.sum64_4_lo = sum64_4_lo$1;\n\nfunction sum64_5_hi$1(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nutils$9.sum64_5_hi = sum64_5_hi$1;\n\nfunction sum64_5_lo$1(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nutils$9.sum64_5_lo = sum64_5_lo$1;\n\nfunction rotr64_hi$1(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nutils$9.rotr64_hi = rotr64_hi$1;\n\nfunction rotr64_lo$1(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nutils$9.rotr64_lo = rotr64_lo$1;\n\nfunction shr64_hi$1(ah, al, num) {\n  return ah >>> num;\n}\nutils$9.shr64_hi = shr64_hi$1;\n\nfunction shr64_lo$1(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nutils$9.shr64_lo = shr64_lo$1;\n\nvar common$5 = {};\n\nvar utils$8 = utils$9;\nvar assert$4 = minimalisticAssert;\n\nfunction BlockHash$4() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\ncommon$5.BlockHash = BlockHash$4;\n\nBlockHash$4.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils$8.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils$8.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash$4.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert$4(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash$4.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n\nvar sha = {};\n\nvar common$4 = {};\n\nvar utils$7 = utils$9;\nvar rotr32 = utils$7.rotr32;\n\nfunction ft_1$1(s, x, y, z) {\n  if (s === 0)\n    return ch32$1(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32$1(x, y, z);\n}\ncommon$4.ft_1 = ft_1$1;\n\nfunction ch32$1(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\ncommon$4.ch32 = ch32$1;\n\nfunction maj32$1(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\ncommon$4.maj32 = maj32$1;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\ncommon$4.p32 = p32;\n\nfunction s0_256$1(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\ncommon$4.s0_256 = s0_256$1;\n\nfunction s1_256$1(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\ncommon$4.s1_256 = s1_256$1;\n\nfunction g0_256$1(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\ncommon$4.g0_256 = g0_256$1;\n\nfunction g1_256$1(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\ncommon$4.g1_256 = g1_256$1;\n\nvar utils$6 = utils$9;\nvar common$3 = common$5;\nvar shaCommon$1 = common$4;\n\nvar rotl32$1 = utils$6.rotl32;\nvar sum32$2 = utils$6.sum32;\nvar sum32_5$1 = utils$6.sum32_5;\nvar ft_1 = shaCommon$1.ft_1;\nvar BlockHash$3 = common$3.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash$3.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils$6.inherits(SHA1, BlockHash$3);\nvar _1 = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32$1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5$1(rotl32$1(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32$1(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32$2(this.h[0], a);\n  this.h[1] = sum32$2(this.h[1], b);\n  this.h[2] = sum32$2(this.h[2], c);\n  this.h[3] = sum32$2(this.h[3], d);\n  this.h[4] = sum32$2(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils$6.toHex32(this.h, 'big');\n  else\n    return utils$6.split32(this.h, 'big');\n};\n\nvar utils$5 = utils$9;\nvar common$2 = common$5;\nvar shaCommon = common$4;\nvar assert$3 = minimalisticAssert;\n\nvar sum32$1 = utils$5.sum32;\nvar sum32_4$1 = utils$5.sum32_4;\nvar sum32_5 = utils$5.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash$2 = common$2.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256$1() {\n  if (!(this instanceof SHA256$1))\n    return new SHA256$1();\n\n  BlockHash$2.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils$5.inherits(SHA256$1, BlockHash$2);\nvar _256 = SHA256$1;\n\nSHA256$1.blockSize = 512;\nSHA256$1.outSize = 256;\nSHA256$1.hmacStrength = 192;\nSHA256$1.padLength = 64;\n\nSHA256$1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4$1(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert$3(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32$1(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32$1(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32$1(T1, T2);\n  }\n\n  this.h[0] = sum32$1(this.h[0], a);\n  this.h[1] = sum32$1(this.h[1], b);\n  this.h[2] = sum32$1(this.h[2], c);\n  this.h[3] = sum32$1(this.h[3], d);\n  this.h[4] = sum32$1(this.h[4], e);\n  this.h[5] = sum32$1(this.h[5], f);\n  this.h[6] = sum32$1(this.h[6], g);\n  this.h[7] = sum32$1(this.h[7], h);\n};\n\nSHA256$1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils$5.toHex32(this.h, 'big');\n  else\n    return utils$5.split32(this.h, 'big');\n};\n\nvar utils$4 = utils$9;\nvar SHA256 = _256;\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils$4.inherits(SHA224, SHA256);\nvar _224 = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils$4.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils$4.split32(this.h.slice(0, 7), 'big');\n};\n\nvar utils$3 = utils$9;\nvar common$1 = common$5;\nvar assert$2 = minimalisticAssert;\n\nvar rotr64_hi = utils$3.rotr64_hi;\nvar rotr64_lo = utils$3.rotr64_lo;\nvar shr64_hi = utils$3.shr64_hi;\nvar shr64_lo = utils$3.shr64_lo;\nvar sum64 = utils$3.sum64;\nvar sum64_hi = utils$3.sum64_hi;\nvar sum64_lo = utils$3.sum64_lo;\nvar sum64_4_hi = utils$3.sum64_4_hi;\nvar sum64_4_lo = utils$3.sum64_4_lo;\nvar sum64_5_hi = utils$3.sum64_5_hi;\nvar sum64_5_lo = utils$3.sum64_5_lo;\n\nvar BlockHash$1 = common$1.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512$1() {\n  if (!(this instanceof SHA512$1))\n    return new SHA512$1();\n\n  BlockHash$1.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils$3.inherits(SHA512$1, BlockHash$1);\nvar _512 = SHA512$1;\n\nSHA512$1.blockSize = 1024;\nSHA512$1.outSize = 512;\nSHA512$1.hmacStrength = 192;\nSHA512$1.padLength = 128;\n\nSHA512$1.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512$1.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert$2(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512$1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils$3.toHex32(this.h, 'big');\n  else\n    return utils$3.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nvar utils$2 = utils$9;\n\nvar SHA512 = _512;\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils$2.inherits(SHA384, SHA512);\nvar _384 = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils$2.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils$2.split32(this.h.slice(0, 12), 'big');\n};\n\nsha.sha1 = _1;\nsha.sha224 = _224;\nsha.sha256 = _256;\nsha.sha384 = _384;\nsha.sha512 = _512;\n\nvar ripemd = {};\n\nvar utils$1 = utils$9;\nvar common = common$5;\n\nvar rotl32 = utils$1.rotl32;\nvar sum32 = utils$1.sum32;\nvar sum32_3 = utils$1.sum32_3;\nvar sum32_4 = utils$1.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils$1.inherits(RIPEMD160, BlockHash);\nripemd.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils$1.toHex32(this.h, 'little');\n  else\n    return utils$1.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n\nvar utils = utils$9;\nvar assert$1 = minimalisticAssert;\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nvar hmac = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert$1(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\n(function (exports) {\nvar hash = exports;\n\nhash.utils = utils$9;\nhash.common = common$5;\nhash.sha = sha;\nhash.ripemd = ripemd;\nhash.hmac = hmac;\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n}(hash$1));\n\nvar hash = hash$1;\n\nconst version$2 = \"logger/5.6.0\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nvar ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\nconst HEX = \"0123456789abcdef\";\nclass Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version$2);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n\nconst version$1 = \"bytes/5.6.0\";\n\nconst logger = new Logger(version$1);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nfunction isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nfunction isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\n\nconst version = \"sha2/5.6.0\";\n\nnew Logger(version);\nfunction sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nclass Struct {\n  constructor(properties) {\n    Object.assign(this, properties);\n  }\n\n  encode() {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data) {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data) {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n\n} // Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\n\nclass Enum extends Struct {\n  constructor(properties) {\n    super(properties);\n    this.enum = '';\n\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n\n}\nconst SOLANA_SCHEMA = new Map();\n\n/**\n * Maximum length of derived pubkey seed\n */\n\nconst MAX_SEED_LENGTH = 32;\n/**\n * Value to be converted into public key\n */\n\nfunction isPublicKeyData(value) {\n  return value._bn !== undefined;\n}\n/**\n * A public key\n */\n\n\nclass PublicKey extends Struct {\n  /** @internal */\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value) {\n    super({});\n    this._bn = void 0;\n\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n  /**\n   * Default public key value. (All zeros)\n   */\n\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey) {\n    return this._bn.eq(publicKey._bn);\n  }\n  /**\n   * Return the base-58 representation of the public key\n   */\n\n\n  toBase58() {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON() {\n    return this.toBase58();\n  }\n  /**\n   * Return the byte array representation of the public key\n   */\n\n\n  toBytes() {\n    return this.toBuffer();\n  }\n  /**\n   * Return the Buffer representation of the public key\n   */\n\n\n  toBuffer() {\n    const b = this._bn.toArrayLike(Buffer);\n\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n  /**\n   * Return the base-58 representation of the public key\n   */\n\n\n  toString() {\n    return this.toBase58();\n  }\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n\n  /* eslint-disable require-await */\n\n\n  static async createWithSeed(fromPublicKey, seed, programId) {\n    const buffer = Buffer.concat([fromPublicKey.toBuffer(), Buffer.from(seed), programId.toBuffer()]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n\n  /* eslint-disable require-await */\n\n\n  static async createProgramAddress(seeds, programId) {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([buffer, programId.toBuffer(), Buffer.from('ProgramDerivedAddress')]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n\n    return new PublicKey(publicKeyBytes);\n  }\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n\n\n  static async findProgramAddress(seeds, programId) {\n    let nonce = 255;\n    let address;\n\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = await this.createProgramAddress(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n\n        nonce--;\n        continue;\n      }\n\n      return [address, nonce];\n    }\n\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n\n\n  static isOnCurve(pubkey) {\n    return is_on_curve(pubkey) == 1;\n  }\n\n}\nPublicKey.default = new PublicKey('11111111111111111111111111111111');\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']]\n}); // @ts-ignore\n\nlet naclLowLevel = nacl.lowlevel; // Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\n\nfunction is_on_curve(p) {\n  var r = [naclLowLevel.gf(), naclLowLevel.gf(), naclLowLevel.gf(), naclLowLevel.gf()];\n  var t = naclLowLevel.gf(),\n      chk = naclLowLevel.gf(),\n      num = naclLowLevel.gf(),\n      den = naclLowLevel.gf(),\n      den2 = naclLowLevel.gf(),\n      den4 = naclLowLevel.gf(),\n      den6 = naclLowLevel.gf();\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\n\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32),\n      d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\n\nclass Account {\n  /** @internal */\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey) {\n    this._keypair = void 0;\n\n    if (secretKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(toBuffer(secretKey));\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n  /**\n   * The public key for this account\n   */\n\n\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n  /**\n   * The **unencrypted** secret key for this account\n   */\n\n\n  get secretKey() {\n    return toBuffer(this._keypair.secretKey);\n  }\n\n}\n\nconst BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey('BPFLoader1111111111111111111111111111111111');\n\n/**\n * Layout for a public key\n */\n\nconst publicKey = (property = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a Rust String type\n */\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n\n  const _decode = rsl.decode.bind(rsl);\n\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl;\n\n  rslShim.decode = (b, offset) => {\n    const data = _decode(b, offset);\n\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str, b, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = str => {\n    return BufferLayout.u32().span + BufferLayout.u32().span + Buffer.from(str, 'utf8').length;\n  };\n\n  return rslShim;\n};\n/**\n * Layout for an Authorized object\n */\n\nconst authorized = (property = 'authorized') => {\n  return BufferLayout.struct([publicKey('staker'), publicKey('withdrawer')], property);\n};\n/**\n * Layout for a Lockup object\n */\n\nconst lockup = (property = 'lockup') => {\n  return BufferLayout.struct([BufferLayout.ns64('unixTimestamp'), BufferLayout.ns64('epoch'), publicKey('custodian')], property);\n};\n/**\n *  Layout for a VoteInit object\n */\n\nconst voteInit = (property = 'voteInit') => {\n  return BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedVoter'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission')], property);\n};\nfunction getAlloc(type, fields) {\n  let alloc = 0;\n  type.layout.fields.forEach(item => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n\nfunction decodeLength(bytes) {\n  let len = 0;\n  let size = 0;\n\n  for (;;) {\n    let elem = bytes.shift();\n    len |= (elem & 0x7f) << size * 7;\n    size += 1;\n\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n\n  return len;\n}\nfunction encodeLength(bytes, len) {\n  let rem_len = len;\n\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n\n/**\n * The message header, identifying signed and read-only account\n */\n\nconst PUBKEY_LENGTH = 32;\n/**\n * List of instructions to be processed atomically\n */\n\nclass Message {\n  constructor(args) {\n    this.header = void 0;\n    this.accountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.instructions = void 0;\n    this.indexToProgramIds = new Map();\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix => this.indexToProgramIds.set(ix.programIdIndex, this.accountKeys[ix.programIdIndex]));\n  }\n\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index) {\n    return index < this.header.numRequiredSignatures - this.header.numReadonlySignedAccounts || index >= this.header.numRequiredSignatures && index < this.accountKeys.length - this.header.numReadonlyUnsignedAccounts;\n  }\n\n  isProgramId(index) {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds() {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds() {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize() {\n    const numKeys = this.accountKeys.length;\n    let keyCount = [];\n    encodeLength(keyCount, numKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        accounts,\n        programIdIndex\n      } = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n      let keyIndicesCount = [];\n      encodeLength(keyIndicesCount, accounts.length);\n      let dataCount = [];\n      encodeLength(dataCount, data.length);\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data\n      };\n    });\n    let instructionCount = [];\n    encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(instruction.keyIndicesCount.length, 'keyIndicesCount'), BufferLayout.seq(BufferLayout.u8('keyIndex'), instruction.keyIndices.length, 'keyIndices'), BufferLayout.blob(instruction.dataLength.length, 'dataLength'), BufferLayout.seq(BufferLayout.u8('userdatum'), instruction.data.length, 'data')]);\n      const length = instructionLayout.encode(instruction, instructionBuffer, instructionBufferLength);\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n    const signDataLayout = BufferLayout.struct([BufferLayout.blob(1, 'numRequiredSignatures'), BufferLayout.blob(1, 'numReadonlySignedAccounts'), BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'), BufferLayout.blob(keyCount.length, 'keyCount'), BufferLayout.seq(publicKey('key'), numKeys, 'keys'), publicKey('recentBlockhash')]);\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([this.header.numReadonlySignedAccounts]),\n      numReadonlyUnsignedAccounts: Buffer.from([this.header.numReadonlyUnsignedAccounts]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash)\n    };\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n  /**\n   * Decode a compiled message into a Message object.\n   */\n\n\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const numRequiredSignatures = byteArray.shift();\n    const numReadonlySignedAccounts = byteArray.shift();\n    const numReadonlyUnsignedAccounts = byteArray.shift();\n    const accountCount = decodeLength(byteArray);\n    let accountKeys = [];\n\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n    const instructionCount = decodeLength(byteArray);\n    let instructions = [];\n\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift();\n      const accountCount = decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions\n    };\n    return new Message(messageArgs);\n  }\n\n}\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\n/**\n * Default (empty) signature\n *\n * Signatures are 64 bytes in length\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(64).fill(0);\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\n\nconst PACKET_DATA_SIZE = 1280 - 40 - 8;\nconst SIGNATURE_LENGTH = 64;\n/**\n * Account metadata used to define instructions\n */\n\n/**\n * Transaction Instruction class\n */\nclass TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n\n  /**\n   * Program Id to execute\n   */\n\n  /**\n   * Program input\n   */\n  constructor(opts) {\n    this.keys = void 0;\n    this.programId = void 0;\n    this.data = Buffer.alloc(0);\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  toJSON() {\n    return {\n      keys: this.keys.map(({\n        pubkey,\n        isSigner,\n        isWritable\n      }) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data]\n    };\n  }\n\n}\n/**\n * Pair of signature and corresponding public key\n */\n\n/**\n * Transaction class\n */\nclass Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature() {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n\n    return null;\n  }\n  /**\n   * The transaction fee payer\n   */\n\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts) {\n    this.signatures = [];\n    this.feePayer = void 0;\n    this.instructions = [];\n    this.recentBlockhash = void 0;\n    this.nonceInfo = void 0;\n    this._message = void 0;\n    this._json = void 0;\n    opts && Object.assign(this, opts);\n  }\n  /**\n   * @internal\n   */\n\n\n  toJSON() {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo ? {\n        nonce: this.nonceInfo.nonce,\n        nonceInstruction: this.nonceInfo.nonceInstruction.toJSON()\n      } : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signatures: this.signatures.map(({\n        publicKey,\n        signature\n      }) => ({\n        publicKey: publicKey.toJSON(),\n        signature: signature ? [...signature] : null\n      }))\n    };\n  }\n  /**\n   * Add one or more instructions to this Transaction\n   */\n\n\n  add(...items) {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach(item => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n  /**\n   * Compile transaction data\n   */\n\n\n  compileMessage() {\n    if (this._message) {\n      if (JSON.stringify(this.toJSON()) !== JSON.stringify(this._json)) {\n        throw new Error('Transaction mutated after being populated from Message');\n      }\n\n      return this._message;\n    }\n\n    const {\n      nonceInfo\n    } = this;\n\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n\n    const {\n      recentBlockhash\n    } = this;\n\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer;\n\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < this.instructions.length; i++) {\n      if (this.instructions[i].programId === undefined) {\n        throw new Error(`Transaction instruction index ${i} has undefined program id`);\n      }\n    }\n\n    const programIds = [];\n    const accountMetas = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({ ...accountMeta\n        });\n      });\n      const programId = instruction.programId.toString();\n\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    }); // Append programID account metas\n\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false\n      });\n    }); // Sort. Prioritizing first by signer, then by writable\n\n    accountMetas.sort(function (x, y) {\n      const pubkeySorting = x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n      const checkSigner = x.isSigner === y.isSigner ? 0 : x.isSigner ? -1 : 1;\n      const checkWritable = x.isWritable === y.isWritable ? pubkeySorting : x.isWritable ? -1 : 1;\n      return checkSigner || checkWritable;\n    }); // Cull duplicate account metas\n\n    const uniqueMetas = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable = uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    }); // Move fee payer to the front\n\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true\n      });\n    } // Disallow unknown signers\n\n\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn('Transaction references a signature that is unnecessary, ' + 'only the fee payer and instruction signer accounts should sign a transaction. ' + 'This behavior is deprecated and will throw an error in the next major version release.');\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0; // Split out signing from non-signing keys and count header values\n\n    const signedKeys = [];\n    const unsignedKeys = [];\n    uniqueMetas.forEach(({\n      pubkey,\n      isSigner,\n      isWritable\n    }) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        data,\n        programId\n      } = instruction;\n      return {\n        programIdIndex: accountKeys.indexOf(programId.toString()),\n        accounts: instruction.keys.map(meta => accountKeys.indexOf(meta.pubkey.toString())),\n        data: bs58.encode(data)\n      };\n    });\n    instructions.forEach(instruction => {\n      assert(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => assert(keyIndex >= 0));\n    });\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions\n    });\n  }\n  /**\n   * @internal\n   */\n\n\n  _compile() {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(0, message.header.numRequiredSignatures);\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n    return message;\n  }\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n\n\n  serializeMessage() {\n    return this._compile().serialize();\n  }\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n\n\n  async getEstimatedFee(connection) {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n\n\n  setSigners(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers.filter(publicKey => {\n      const key = publicKey.toString();\n\n      if (seen.has(key)) {\n        return false;\n      } else {\n        seen.add(key);\n        return true;\n      }\n    }).map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n  }\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n\n\n  sign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    } // Dedupe signers\n\n\n    const seen = new Set();\n    const uniqueSigners = [];\n\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey\n    }));\n\n    const message = this._compile();\n\n    this._partialSign(message, ...uniqueSigners);\n\n    this._verifySignatures(message.serialize(), true);\n  }\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n\n\n  partialSign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    } // Dedupe signers\n\n\n    const seen = new Set();\n    const uniqueSigners = [];\n\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n\n    this._partialSign(message, ...uniqueSigners);\n  }\n  /**\n   * @internal\n   */\n\n\n  _partialSign(message, ...signers) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n\n\n  addSignature(pubkey, signature) {\n    this._compile(); // Ensure signatures array is populated\n\n\n    this._addSignature(pubkey, signature);\n  }\n  /**\n   * @internal\n   */\n\n\n  _addSignature(pubkey, signature) {\n    assert(signature.length === 64);\n    const index = this.signatures.findIndex(sigpair => pubkey.equals(sigpair.publicKey));\n\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n\n\n  verifySignatures() {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n  /**\n   * @internal\n   */\n\n\n  _verifySignatures(signData, requireAllSignatures) {\n    for (const {\n      signature,\n      publicKey\n    } of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n\n\n  serialize(config) {\n    const {\n      requireAllSignatures,\n      verifySignatures\n    } = Object.assign({\n      requireAllSignatures: true,\n      verifySignatures: true\n    }, config);\n    const signData = this.serializeMessage();\n\n    if (verifySignatures && !this._verifySignatures(signData, requireAllSignatures)) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n  /**\n   * @internal\n   */\n\n\n  _serialize(signData) {\n    const {\n      signatures\n    } = this;\n    const signatureCount = [];\n    encodeLength(signatureCount, signatures.length);\n    const transactionLength = signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    assert(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({\n      signature\n    }, index) => {\n      if (signature !== null) {\n        assert(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(wireTransaction, signatureCount.length + index * 64);\n      }\n    });\n    signData.copy(wireTransaction, signatureCount.length + signatures.length * 64);\n    assert(wireTransaction.length <= PACKET_DATA_SIZE, `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`);\n    return wireTransaction;\n  }\n  /**\n   * Deprecated method\n   * @internal\n   */\n\n\n  get keys() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n  /**\n   * Deprecated method\n   * @internal\n   */\n\n\n  get programId() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n  /**\n   * Deprecated method\n   * @internal\n   */\n\n\n  get data() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n\n\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const signatureCount = decodeLength(byteArray);\n    let signatures = [];\n\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n  /**\n   * Populate Transaction object from message and signatures\n   */\n\n\n  static populate(message, signatures = []) {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature: signature == bs58.encode(DEFAULT_SIGNATURE) ? null : bs58.decode(signature),\n        publicKey: message.accountKeys[index]\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner: transaction.signatures.some(keyObj => keyObj.publicKey.toString() === pubkey.toString()) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account)\n        };\n      });\n      transaction.instructions.push(new TransactionInstruction({\n        keys,\n        programId: message.accountKeys[instruction.programIdIndex],\n        data: bs58.decode(instruction.data)\n      }));\n    });\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n    return transaction;\n  }\n\n}\n\nconst SYSVAR_CLOCK_PUBKEY = new PublicKey('SysvarC1ock11111111111111111111111111111111');\nconst SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey('SysvarEpochSchedu1e111111111111111111111111');\nconst SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey('Sysvar1nstructions1111111111111111111111111');\nconst SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey('SysvarRecentB1ockHashes11111111111111111111');\nconst SYSVAR_RENT_PUBKEY = new PublicKey('SysvarRent111111111111111111111111111111111');\nconst SYSVAR_REWARDS_PUBKEY = new PublicKey('SysvarRewards111111111111111111111111111111');\nconst SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey('SysvarS1otHashes111111111111111111111111111');\nconst SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey('SysvarS1otHistory11111111111111111111111111');\nconst SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey('SysvarStakeHistory1111111111111111111111111');\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmTransaction(connection, transaction, signers, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries\n  };\n  const signature = await connection.sendTransaction(transaction, signers, sendOptions);\n  const status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n\n  if (status.err) {\n    throw new Error(`Transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n\n  return signature;\n}\n\n// zzz\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nfunction encodeData(type, fields) {\n  const allocLength = type.layout.span >= 0 ? type.layout.span : getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({\n    instruction: type.index\n  }, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\n\nfunction decodeData(type, buffer) {\n  let data;\n\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(`invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`);\n  }\n\n  return data;\n}\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\n\nconst FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n/**\n * Calculator for transaction fees.\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\n\nconst NonceAccountLayout = BufferLayout.struct([BufferLayout.u32('version'), BufferLayout.u32('state'), publicKey('authorizedPubkey'), publicKey('nonce'), BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator')]);\nconst NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * NonceAccount class\n */\nclass NonceAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.authorizedPubkey = void 0;\n    this.nonce = void 0;\n    this.feeCalculator = void 0;\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n\n\n  static fromAccountData(buffer) {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator\n    });\n  }\n\n}\n\n/**\n * Create account system transaction params\n */\n\n/**\n * System Instruction class\n */\nclass SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n\n\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeCreateAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports,\n      space,\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.Create, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeTransfer(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.Transfer, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports\n    };\n  }\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeTransferWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports,\n      seed,\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAllocate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      space\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.Allocate, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space\n    };\n  }\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAllocateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      space,\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAssign(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.Assign, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAssignWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeCreateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      base,\n      seed,\n      lamports,\n      space,\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeNonceInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      authorized\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized)\n    };\n  }\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeNonceAdvance(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeNonceWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n  }\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeNonceAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized)\n    };\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkProgramId(programId) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n\n}\n/**\n * An enumeration of valid SystemInstructionType's\n */\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nconst SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('programId')])\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('space')])\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), publicKey('programId')])\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), rustString('seed'), publicKey('programId')])\n  }\n});\n/**\n * Factory class for transactions to interact with the System program\n */\n\nclass SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Public key that identifies the System program\n   */\n\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.newAccountPubkey,\n        isSigner: true,\n        isWritable: true\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n\n\n  static transfer(params) {\n    let data;\n    let keys;\n\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: params.lamports,\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {\n        lamports: params.lamports\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n\n\n  static assign(params) {\n    let data;\n    let keys;\n\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n\n\n  static createAccountWithSeed(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    let keys = [{\n      pubkey: params.fromPubkey,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: params.newAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n\n\n  static createNonceAccount(params) {\n    const transaction = new Transaction();\n\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    } else {\n      transaction.add(SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey\n    };\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n\n\n  static nonceInitialize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer())\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n\n\n  static nonceAdvance(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n\n\n  static nonceWithdraw(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {\n      lamports: params.lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n\n\n  static nonceAuthorize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n\n\n  static allocate(params) {\n    let data;\n    let keys;\n\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n}\nSystemProgram.programId = new PublicKey('11111111111111111111111111111111');\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n/**\n * Program loader interface\n */\n\nclass Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return 2 * ( // Every transaction requires two signatures (payer + program)\n    Math.ceil(dataLength / Loader.chunkSize) + 1 + // Add one for Create transaction\n    1) // Add one for Finalize transaction\n    ;\n  }\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n\n\n  static async load(connection, payer, program, programId, data) {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(data.length); // Fetch program account info to check if it has already been created\n\n      const programInfo = await connection.getAccountInfo(program.publicKey, 'confirmed');\n      let transaction = null;\n\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.allocate({\n            accountPubkey: program.publicKey,\n            space: data.length\n          }));\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.assign({\n            accountPubkey: program.publicKey,\n            programId\n          }));\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.transfer({\n            fromPubkey: payer.publicKey,\n            toPubkey: program.publicKey,\n            lamports: balanceNeeded - programInfo.lamports\n          }));\n        }\n      } else {\n        transaction = new Transaction().add(SystemProgram.createAccount({\n          fromPubkey: payer.publicKey,\n          newAccountPubkey: program.publicKey,\n          lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n          space: data.length,\n          programId\n        }));\n      } // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n\n\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed'\n        });\n      }\n    }\n    const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.u32('offset'), BufferLayout.u32('bytesLength'), BufferLayout.u32('bytesLengthPadding'), BufferLayout.seq(BufferLayout.u8('byte'), BufferLayout.offset(BufferLayout.u32(), -8), 'bytes')]);\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode({\n        instruction: 0,\n        // Load instruction\n        offset,\n        bytes: bytes,\n        bytesLength: 0,\n        bytesLengthPadding: 0\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }],\n        programId,\n        data\n      });\n      transactions.push(sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      })); // Delay between sends in an attempt to reduce rate limit errors\n\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n\n    await Promise.all(transactions); // Finalize the account loaded with program data for execution\n\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 1 // Finalize instruction\n\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId,\n        data\n      });\n      await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      });\n    } // success\n\n    return true;\n  }\n\n}\nLoader.chunkSize = CHUNK_SIZE;\n\nconst BPF_LOADER_PROGRAM_ID = new PublicKey('BPFLoader2111111111111111111111111111111111');\n/**\n * Factory class for transactions to interact with a program loader\n */\n\nclass BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n\n\n  static load(connection, payer, program, elf, loaderProgramId) {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n\n}\n\nvar browserPonyfill = {exports: {}};\n\n(function (module, exports) {\nvar global = typeof self !== 'undefined' ? self : commonjsGlobal;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException;\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\n((function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}))({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch; // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch; // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch; // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers;\nexports.Request = ctx.Request;\nexports.Response = ctx.Response;\nmodule.exports = exports;\n}(browserPonyfill, browserPonyfill.exports));\n\nvar crossFetch = /*@__PURE__*/getDefaultExportFromCjs(browserPonyfill.exports);\n\nconst MINIMUM_SLOT_PER_EPOCH = 32; // Returns the number of trailing zeros in the binary representation of self.\n\nfunction trailingZeros(n) {\n  let trailingZeros = 0;\n\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n\n  return trailingZeros;\n} // Returns the smallest power of two greater than or equal to n\n\n\nfunction nextPowerOfTwo(n) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\n\n\nclass EpochSchedule {\n  /** The maximum number of slots in each epoch */\n\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n\n  /** Indicates whether epochs start short and grow */\n\n  /** The first epoch with `slotsPerEpoch` slots */\n\n  /** The first slot of `firstNormalEpoch` */\n  constructor(slotsPerEpoch, leaderScheduleSlotOffset, warmup, firstNormalEpoch, firstNormalSlot) {\n    this.slotsPerEpoch = void 0;\n    this.leaderScheduleSlotOffset = void 0;\n    this.warmup = void 0;\n    this.firstNormalEpoch = void 0;\n    this.firstNormalSlot = void 0;\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot) {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot) {\n    if (slot < this.firstNormalSlot) {\n      const epoch = trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) - trailingZeros(MINIMUM_SLOT_PER_EPOCH) - 1;\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch) {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (epoch - this.firstNormalEpoch) * this.slotsPerEpoch + this.firstNormalSlot;\n    }\n  }\n\n  getLastSlotInEpoch(epoch) {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n\n}\n\nclass SendTransactionError extends Error {\n  constructor(message, logs) {\n    super(message);\n    this.logs = void 0;\n    this.logs = logs;\n  }\n\n}\n\n// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nconst NUM_TICKS_PER_SECOND = 160;\n/**\n * @internal\n */\n\nconst DEFAULT_TICKS_PER_SLOT = 64;\n/**\n * @internal\n */\n\nconst NUM_SLOTS_PER_SECOND = NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n/**\n * @internal\n */\n\nconst MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n\nfunction promiseTimeout(promise, timeoutMs) {\n  let timeoutId;\n  const timeoutPromise = new Promise(resolve => {\n    timeoutId = setTimeout(() => resolve(null), timeoutMs);\n  });\n  return Promise.race([promise, timeoutPromise]).then(result => {\n    clearTimeout(timeoutId);\n    return result;\n  });\n}\n\nfunction makeWebsocketUrl(endpoint) {\n  let url = new URL(endpoint);\n  const useHttps = url.protocol === 'https:';\n  url.protocol = useHttps ? 'wss:' : 'ws:';\n  url.host = ''; // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n\n  if (url.port !== '') {\n    url.port = String(Number(url.port) + 1);\n  }\n\n  return url.toString();\n}\n\nconst PublicKeyFromString = coerce(instance(PublicKey), string(), value => new PublicKey(value));\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\nconst BufferFromRawAccountData = coerce(instance(Buffer), RawAccountDataResult, value => Buffer.from(value[0], 'base64'));\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\n\nconst BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * @internal\n */\nfunction createRpcResult(result) {\n  return union([type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    result\n  }), type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    error: type({\n      code: unknown(),\n      message: string(),\n      data: optional(any())\n    })\n  })]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n/**\n * @internal\n */\n\nfunction jsonRpcResult(schema) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return { ...value,\n        result: create(value.result, schema)\n      };\n    }\n  });\n}\n/**\n * @internal\n */\n\n\nfunction jsonRpcResultAndContext(value) {\n  return jsonRpcResult(type({\n    context: type({\n      slot: number()\n    }),\n    value\n  }));\n}\n/**\n * @internal\n */\n\n\nfunction notificationResultAndContext(value) {\n  return type({\n    context: type({\n      slot: number()\n    }),\n    value\n  });\n}\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n\nconst GetInflationGovernorResult = type({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number()\n});\n/**\n * The inflation reward for an epoch\n */\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(array(nullable(type({\n  epoch: number(),\n  effectiveSlot: number(),\n  amount: number(),\n  postBalance: number()\n}))));\n/**\n * Information about the current epoch\n */\n\nconst GetEpochInfoResult = type({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number())\n});\nconst GetEpochScheduleResult = type({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number()\n});\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n/**\n * Transaction error or null\n */\n\nconst TransactionErrorResult = nullable(union([type({}), string()]));\n/**\n * Signature status for a transaction\n */\n\nconst SignatureStatusResult = type({\n  err: TransactionErrorResult\n});\n/**\n * Transaction signature received notification\n */\n\nconst SignatureReceivedResult = literal('receivedSignature');\n/**\n * Version info for a node\n */\n\nconst VersionResult = type({\n  'solana-core': string(),\n  'feature-set': optional(number())\n});\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n  err: nullable(union([type({}), string()])),\n  logs: nullable(array(string())),\n  accounts: optional(nullable(array(nullable(type({\n    executable: boolean(),\n    owner: string(),\n    lamports: number(),\n    data: array(string()),\n    rentEpoch: optional(number())\n  }))))),\n  unitsConsumed: optional(number())\n}));\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(type({\n  byIdentity: record(string(), array(number())),\n  range: type({\n    firstSlot: number(),\n    lastSlot: number()\n  })\n}));\n/**\n * A performance sample\n */\n\nfunction createRpcClient(url, useHttps, httpHeaders, customFetch, fetchMiddleware, disableRetryOnRateLimit) {\n  const fetch = customFetch ? customFetch : crossFetch;\n\n  let fetchWithMiddleware;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (url, options) => {\n      const modifiedFetchArgs = await new Promise((resolve, reject) => {\n        try {\n          fetchMiddleware(url, options, (modifiedUrl, modifiedOptions) => resolve([modifiedUrl, modifiedOptions]));\n        } catch (error) {\n          reject(error);\n        }\n      });\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign({\n        'Content-Type': 'application/json'\n      }, httpHeaders || {})\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res;\n      let waitTime = 500;\n\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429\n        /* Too many requests */\n        ) {\n          break;\n        }\n\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n\n        too_many_requests_retries -= 1;\n\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n\n        console.log(`Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`);\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n    }\n  }, {});\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client) {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client) {\n  return requests => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n      const batch = requests.map(params => {\n        return client.request(params.methodName, params.args);\n      });\n      client.request(batch, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(response);\n      });\n    });\n  };\n}\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\n\n\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\n\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\n\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\n\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\n\nconst SlotRpcResult = jsonRpcResult(number());\n/**\n * Supply\n */\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(type({\n  total: number(),\n  circulating: number(),\n  nonCirculating: number(),\n  nonCirculatingAccounts: array(PublicKeyFromString)\n}));\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = type({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n});\n/**\n * Token address and balance.\n */\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(array(type({\n  address: PublicKeyFromString,\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n})));\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\n\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: BufferFromRawAccountData,\n    rentEpoch: number()\n  })\n})));\nconst ParsedAccountDataResult = type({\n  program: string(),\n  parsed: unknown(),\n  space: number()\n});\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\n\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: ParsedAccountDataResult,\n    rentEpoch: number()\n  })\n})));\n/**\n * Pair of an account address and its balance\n */\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(array(type({\n  lamports: number(),\n  address: PublicKeyFromString\n})));\n/**\n * @internal\n */\n\nconst AccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number()\n});\n/**\n * @internal\n */\n\nconst KeyedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\nconst ParsedOrRawAccountData = coerce(union([instance(Buffer), ParsedAccountDataResult]), union([RawAccountDataResult, ParsedAccountDataResult]), value => {\n  if (Array.isArray(value)) {\n    return create(value, BufferFromRawAccountData);\n  } else {\n    return value;\n  }\n});\n/**\n * @internal\n */\n\nconst ParsedAccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number()\n});\nconst KeyedParsedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult\n});\n/**\n * @internal\n */\n\nconst StakeActivationResult = type({\n  state: union([literal('active'), literal('inactive'), literal('activating'), literal('deactivating')]),\n  active: number(),\n  inactive: number()\n});\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\n\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\n\nconst AccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult)\n});\n/**\n * @internal\n */\n\nconst ProgramAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\n\nconst ProgramAccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult)\n});\n/**\n * @internal\n */\n\nconst SlotInfoResult = type({\n  parent: number(),\n  slot: number(),\n  root: number()\n});\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\n\nconst SlotNotificationResult = type({\n  subscription: number(),\n  result: SlotInfoResult\n});\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([type({\n  type: union([literal('firstShredReceived'), literal('completed'), literal('optimisticConfirmation'), literal('root')]),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('createdBank'),\n  parent: number(),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('frozen'),\n  slot: number(),\n  timestamp: number(),\n  stats: type({\n    numTransactionEntries: number(),\n    numSuccessfulTransactions: number(),\n    numFailedTransactions: number(),\n    maxTransactionsPerEntry: number()\n  })\n}), type({\n  type: literal('dead'),\n  slot: number(),\n  timestamp: number(),\n  err: string()\n})]);\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\n\nconst SlotUpdateNotificationResult = type({\n  subscription: number(),\n  result: SlotUpdateResult\n});\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\n\nconst SignatureNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(union([SignatureStatusResult, SignatureReceivedResult]))\n});\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\n\nconst RootNotificationResult = type({\n  subscription: number(),\n  result: number()\n});\nconst ContactInfoResult = type({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string())\n});\nconst VoteAccountInfoResult = type({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number())\n});\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\n\nconst GetVoteAccounts = jsonRpcResult(type({\n  current: array(VoteAccountInfoResult),\n  delinquent: array(VoteAccountInfoResult)\n}));\nconst ConfirmationStatus = union([literal('processed'), literal('confirmed'), literal('finalized')]);\nconst SignatureStatusResponse = type({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus)\n});\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\n\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(array(nullable(SignatureStatusResponse)));\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\n\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\nconst ConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(string()),\n    header: type({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number()\n    }),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    })),\n    recentBlockhash: string()\n  })\n});\nconst ParsedInstructionResult = type({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString\n});\nconst RawInstructionResult = type({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString\n});\nconst InstructionResult = union([RawInstructionResult, ParsedInstructionResult]);\nconst UnknownInstructionResult = union([type({\n  parsed: unknown(),\n  program: string(),\n  programId: string()\n}), type({\n  accounts: array(string()),\n  data: string(),\n  programId: string()\n})]);\nconst ParsedOrRawInstruction = coerce(InstructionResult, UnknownInstructionResult, value => {\n  if ('accounts' in value) {\n    return create(value, RawInstructionResult);\n  } else {\n    return create(value, ParsedInstructionResult);\n  }\n});\n/**\n * @internal\n */\n\nconst ParsedConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(type({\n      pubkey: PublicKeyFromString,\n      signer: boolean(),\n      writable: boolean()\n    })),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string()\n  })\n});\nconst TokenBalanceResult = type({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult\n});\n/**\n * @internal\n */\n\nconst ConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    }))\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult)))\n});\n/**\n * @internal\n */\n\nconst ParsedConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(ParsedOrRawInstruction)\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult)))\n});\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\n\nconst GetBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(type({\n    pubkey: string(),\n    lamports: number(),\n    postBalance: nullable(number()),\n    rewardType: nullable(string())\n  }))),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\n\nconst GetConfirmedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(type({\n    pubkey: string(),\n    lamports: number(),\n    postBalance: nullable(number()),\n    rewardType: nullable(string())\n  }))),\n  blockTime: nullable(number())\n})));\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\n\nconst GetBlockSignaturesRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  signatures: array(string()),\n  blockTime: nullable(number())\n})));\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\n\nconst GetTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  meta: ConfirmedTransactionMetaResult,\n  blockTime: optional(nullable(number())),\n  transaction: ConfirmedTransactionResult\n})));\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\n\nconst GetParsedTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  transaction: ParsedConfirmedTransactionResult,\n  meta: nullable(ParsedConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number()))\n})));\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\n\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n}));\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\n\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  lastValidBlockHeight: number()\n}));\nconst PerfSampleResult = type({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number()\n});\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\n\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(array(PerfSampleResult));\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\n\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(nullable(type({\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n})));\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\n\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\n\nconst SendTransactionRpcResult = jsonRpcResult(string());\n/**\n * Information about the latest slot being processed by a node\n */\n\n/**\n * @internal\n */\nconst LogsResult = type({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string()\n});\n/**\n * Logs result.\n */\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = type({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number()\n});\n/**\n * Filter for log subscriptions.\n */\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nclass Connection {\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(endpoint, commitmentOrConfig) {\n    this._commitment = void 0;\n    this._confirmTransactionInitialTimeout = void 0;\n    this._rpcEndpoint = void 0;\n    this._rpcWsEndpoint = void 0;\n    this._rpcClient = void 0;\n    this._rpcRequest = void 0;\n    this._rpcBatchRequest = void 0;\n    this._rpcWebSocket = void 0;\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketHeartbeat = null;\n    this._rpcWebSocketIdleTimeout = null;\n    this._disableBlockhashCaching = false;\n    this._pollingBlockhash = false;\n    this._blockhashInfo = {\n      recentBlockhash: null,\n      lastFetch: 0,\n      transactionSignatures: [],\n      simulatedSignatures: []\n    };\n    this._accountChangeSubscriptionCounter = 0;\n    this._accountChangeSubscriptions = {};\n    this._programAccountChangeSubscriptionCounter = 0;\n    this._programAccountChangeSubscriptions = {};\n    this._rootSubscriptionCounter = 0;\n    this._rootSubscriptions = {};\n    this._signatureSubscriptionCounter = 0;\n    this._signatureSubscriptions = {};\n    this._slotSubscriptionCounter = 0;\n    this._slotSubscriptions = {};\n    this._logsSubscriptionCounter = 0;\n    this._logsSubscriptions = {};\n    this._slotUpdateSubscriptionCounter = 0;\n    this._slotUpdateSubscriptions = {};\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout = commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n    this._rpcClient = createRpcClient(url.toString(), useHttps, httpHeaders, fetch, fetchMiddleware, disableRetryOnRateLimit);\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n    this._rpcWebSocket = new Client(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity\n    });\n\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n\n    this._rpcWebSocket.on('accountNotification', this._wsOnAccountNotification.bind(this));\n\n    this._rpcWebSocket.on('programNotification', this._wsOnProgramAccountNotification.bind(this));\n\n    this._rpcWebSocket.on('slotNotification', this._wsOnSlotNotification.bind(this));\n\n    this._rpcWebSocket.on('slotsUpdatesNotification', this._wsOnSlotUpdatesNotification.bind(this));\n\n    this._rpcWebSocket.on('signatureNotification', this._wsOnSignatureNotification.bind(this));\n\n    this._rpcWebSocket.on('rootNotification', this._wsOnRootNotification.bind(this));\n\n    this._rpcWebSocket.on('logsNotification', this._wsOnLogsNotification.bind(this));\n  }\n  /**\n   * The default commitment used for requests\n   */\n\n\n  get commitment() {\n    return this._commitment;\n  }\n  /**\n   * The RPC endpoint\n   */\n\n\n  get rpcEndpoint() {\n    return this._rpcEndpoint;\n  }\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n\n\n  async getBalanceAndContext(publicKey, commitment) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n\n    if ('error' in res) {\n      throw new Error('failed to get balance for ' + publicKey.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the balance for the specified public key\n   */\n\n\n  async getBalance(publicKey, commitment) {\n    return await this.getBalanceAndContext(publicKey, commitment).then(x => x.value).catch(e => {\n      throw new Error('failed to get balance of account ' + publicKey.toBase58() + ': ' + e);\n    });\n  }\n  /**\n   * Fetch the estimated production time of a block\n   */\n\n\n  async getBlockTime(slot) {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n\n    if ('error' in res) {\n      throw new Error('failed to get block time for slot ' + slot + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n\n\n  async getMinimumLedgerSlot() {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n\n    if ('error' in res) {\n      throw new Error('failed to get minimum ledger slot: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n\n\n  async getFirstAvailableBlock() {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get first available block: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch information about the current supply\n   */\n\n\n  async getSupply(config) {\n    let configArg = {};\n\n    if (typeof config === 'string') {\n      configArg = {\n        commitment: config\n      };\n    } else if (config) {\n      configArg = { ...config,\n        commitment: config && config.commitment || this.commitment\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current supply of a token mint\n   */\n\n\n  async getTokenSupply(tokenMintAddress, commitment) {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n\n    if ('error' in res) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current balance of a token account\n   */\n\n\n  async getTokenAccountBalance(tokenAddress, commitment) {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n\n    if ('error' in res) {\n      throw new Error('failed to get token account balance: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n\n\n  async getTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n\n    if ('error' in res) {\n      throw new Error('failed to get token accounts owned by account ' + ownerAddress.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n\n\n  async getParsedTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n\n    if ('error' in res) {\n      throw new Error('failed to get token accounts owned by account ' + ownerAddress.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n\n\n  async getLargestAccounts(config) {\n    const arg = { ...config,\n      commitment: config && config.commitment || this.commitment\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n\n\n  async getTokenLargestAccounts(mintAddress, commitment) {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get token largest accounts: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n\n\n  async getAccountInfoAndContext(publicKey, commitment) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(AccountInfoResult)));\n\n    if ('error' in res) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n\n\n  async getParsedAccountInfo(publicKey, commitment) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'jsonParsed');\n\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)));\n\n    if ('error' in res) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch all the account info for the specified public key\n   */\n\n\n  async getAccountInfo(publicKey, commitment) {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + e);\n    }\n  }\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n\n\n  async getMultipleAccountsInfoAndContext(publicKeys, commitment) {\n    const keys = publicKeys.map(key => key.toBase58());\n\n    const args = this._buildArgs([keys], commitment, 'base64');\n\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(AccountInfoResult))));\n\n    if ('error' in res) {\n      throw new Error('failed to get info for accounts ' + keys + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n\n\n  async getMultipleAccountsInfo(publicKeys, commitment) {\n    const res = await this.getMultipleAccountsInfoAndContext(publicKeys, commitment);\n    return res.value;\n  }\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n\n\n  async getStakeActivation(publicKey, commitment, epoch) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined, epoch !== undefined ? {\n      epoch\n    } : undefined);\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n\n    if ('error' in res) {\n      throw new Error(`failed to get Stake Activation ${publicKey.toBase58()}: ${res.error.message}`);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n\n\n  async getProgramAccounts(programId, configOrCommitment) {\n    const extra = {};\n    let commitment;\n    let encoding;\n\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding;\n\n        if (configOrCommitment.dataSlice) {\n          extra.dataSlice = configOrCommitment.dataSlice;\n        }\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs([programId.toBase58()], commitment, encoding || 'base64', extra);\n\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n\n    if ('error' in res) {\n      throw new Error('failed to get accounts owned by program ' + programId.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n\n\n  async getParsedProgramAccounts(programId, configOrCommitment) {\n    const extra = {};\n    let commitment;\n\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs([programId.toBase58()], commitment, 'jsonParsed', extra);\n\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedParsedAccountInfoResult)));\n\n    if ('error' in res) {\n      throw new Error('failed to get accounts owned by program ' + programId.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Confirm the transaction identified by the specified signature.\n   */\n\n\n  async confirmTransaction(signature, commitment) {\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(signature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + signature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n    const start = Date.now();\n    const subscriptionCommitment = commitment || this.commitment;\n    let subscriptionId;\n    let response = null;\n    const confirmPromise = new Promise((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(signature, (result, context) => {\n          subscriptionId = undefined;\n          response = {\n            context,\n            value: result\n          };\n          resolve(null);\n        }, subscriptionCommitment);\n      } catch (err) {\n        reject(err);\n      }\n    });\n    let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n\n    switch (subscriptionCommitment) {\n      case 'processed':\n      case 'recent':\n      case 'single':\n      case 'confirmed':\n      case 'singleGossip':\n        {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n    }\n\n    try {\n      await promiseTimeout(confirmPromise, timeoutMs);\n    } finally {\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n\n    if (response === null) {\n      const duration = (Date.now() - start) / 1000;\n      throw new Error(`Transaction was not confirmed in ${duration.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature ${signature} using the Solana Explorer or CLI tools.`);\n    }\n\n    return response;\n  }\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n\n\n  async getClusterNodes() {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n\n    if ('error' in res) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n\n\n  async getVoteAccounts(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n\n    if ('error' in res) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current slot that the node is processing\n   */\n\n\n  async getSlot(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n\n\n  async getSlotLeader(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n\n    if ('error' in res) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n\n\n  async getSlotLeaders(startSlot, limit) {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n\n    if ('error' in res) {\n      throw new Error('failed to get slot leaders: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current status of a signature\n   */\n\n\n  async getSignatureStatus(signature, config) {\n    const {\n      context,\n      value: values\n    } = await this.getSignatureStatuses([signature], config);\n    assert(values.length === 1);\n    const value = values[0];\n    return {\n      context,\n      value\n    };\n  }\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n\n\n  async getSignatureStatuses(signatures, config) {\n    const params = [signatures];\n\n    if (config) {\n      params.push(config);\n    }\n\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n\n\n  async getTransactionCount(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n\n    if ('error' in res) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n\n\n  async getTotalSupply(commitment) {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true\n    });\n    return result.value.total;\n  }\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n\n\n  async getInflationGovernor(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n\n\n  async getInflationReward(addresses, epoch, commitment) {\n    const args = this._buildArgs([addresses.map(pubkey => pubkey.toBase58())], commitment, undefined, {\n      epoch\n    });\n\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get inflation reward: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the Epoch Info parameters\n   */\n\n\n  async getEpochInfo(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n\n\n  async getEpochSchedule() {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n\n    const epochSchedule = res.result;\n    return new EpochSchedule(epochSchedule.slotsPerEpoch, epochSchedule.leaderScheduleSlotOffset, epochSchedule.warmup, epochSchedule.firstNormalEpoch, epochSchedule.firstNormalSlot);\n  }\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n\n\n  async getLeaderSchedule() {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n\n\n  async getMinimumBalanceForRentExemption(dataLength, commitment) {\n    const args = this._buildArgs([dataLength], commitment);\n\n    const unsafeRes = await this._rpcRequest('getMinimumBalanceForRentExemption', args);\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n\n\n  async getRecentBlockhashAndContext(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n\n\n  async getRecentPerformanceSamples(limit) {\n    const args = this._buildArgs(limit ? [limit] : []);\n\n    const unsafeRes = await this._rpcRequest('getRecentPerformanceSamples', args);\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get recent performance samples: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n\n\n  async getFeeCalculatorForBlockhash(blockhash, commitment) {\n    const args = this._buildArgs([blockhash], commitment);\n\n    const unsafeRes = await this._rpcRequest('getFeeCalculatorForBlockhash', args);\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n\n    const {\n      context,\n      value\n    } = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null\n    };\n  }\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n\n\n  async getFeeForMessage(message, commitment) {\n    const wireMessage = message.serialize().toString('base64');\n\n    const args = this._buildArgs([wireMessage], commitment);\n\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n\n\n  async getRecentBlockhash(commitment) {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, lastValidBlockHeight: number}>}\n   */\n\n\n  async getLatestBlockhash(commitment) {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, lastValidBlockHeight: number}>}\n   */\n\n\n  async getLatestBlockhashAndContext(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get latest blockhash: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the node version\n   */\n\n\n  async getVersion() {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n\n    if ('error' in res) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the genesis hash\n   */\n\n\n  async getGenesisHash() {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n\n    if ('error' in res) {\n      throw new Error('failed to get genesis hash: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch a processed block from the cluster.\n   */\n\n\n  async getBlock(slot, opts) {\n    const args = this._buildArgsAtLeastConfirmed([slot], opts && opts.commitment);\n\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n    return { ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: { ...transaction,\n            message\n          }\n        };\n      })\n    };\n  }\n  /*\n   * Returns the current block height of the node\n   */\n\n\n  async getBlockHeight(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n\n    if ('error' in res) {\n      throw new Error('failed to get block height information: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n\n\n  async getBlockProduction(configOrCommitment) {\n    let extra;\n    let commitment;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {\n        commitment: c,\n        ...rest\n      } = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n\n    if ('error' in res) {\n      throw new Error('failed to get block production information: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n\n\n  async getTransaction(signature, opts) {\n    const args = this._buildArgsAtLeastConfirmed([signature], opts && opts.commitment);\n\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n    return { ...result,\n      transaction: { ...result.transaction,\n        message: new Message(result.transaction.message)\n      }\n    };\n  }\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n\n\n  async getParsedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n\n\n  async getParsedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n\n      return res.result;\n    });\n    return res;\n  }\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n\n\n  async getConfirmedBlock(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = { ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: { ...transaction,\n            message\n          }\n        };\n      })\n    };\n    return { ...block,\n      transactions: block.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        return {\n          meta,\n          transaction: Transaction.populate(transaction.message, transaction.signatures)\n        };\n      })\n    };\n  }\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n\n\n  async getBlocks(startSlot, endSlot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed(endSlot !== undefined ? [startSlot, endSlot] : [startSlot], commitment);\n\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n\n    if ('error' in res) {\n      throw new Error('failed to get blocks: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n\n\n  async getBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get block: ' + res.error.message);\n    }\n\n    const result = res.result;\n\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n\n    return result;\n  }\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n\n\n  async getConfirmedBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    return result;\n  }\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n\n\n  async getConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return { ...result,\n      transaction: Transaction.populate(message, signatures)\n    };\n  }\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n\n\n  async getParsedConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed transaction: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n\n\n  async getParsedConfirmedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n\n      return {\n        methodName: 'getConfirmedTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n\n      if ('error' in res) {\n        throw new Error('failed to get confirmed transactions: ' + res.error.message);\n      }\n\n      return res.result;\n    });\n    return res;\n  }\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n\n\n  async getConfirmedSignaturesForAddress(address, startSlot, endSlot) {\n    let options = {};\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n\n    while (!('until' in options)) {\n      startSlot--;\n\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(startSlot, 'finalized');\n\n        if (block.signatures.length > 0) {\n          options.until = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n\n    while (!('before' in options)) {\n      endSlot++;\n\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n\n        if (block.signatures.length > 0) {\n          options.before = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(address, options);\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n\n\n  async getConfirmedSignaturesForAddress2(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n\n    const unsafeRes = await this._rpcRequest('getConfirmedSignaturesForAddress2', args);\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed signatures for address: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n\n\n  async getSignaturesForAddress(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get signatures for address: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n\n\n  async getNonceAndContext(nonceAccount, commitment) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(nonceAccount, commitment);\n    let value = null;\n\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value\n    };\n  }\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n\n\n  async getNonce(nonceAccount, commitment) {\n    return await this.getNonceAndContext(nonceAccount, commitment).then(x => x.value).catch(e => {\n      throw new Error('failed to get nonce for account ' + nonceAccount.toBase58() + ': ' + e);\n    });\n  }\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n\n\n  async requestAirdrop(to, lamports) {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [to.toBase58(), lamports]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n\n    if ('error' in res) {\n      throw new Error('airdrop to ' + to.toBase58() + ' failed: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * @internal\n   */\n\n\n  async _recentBlockhash(disableCache) {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n\n      if (this._blockhashInfo.recentBlockhash !== null && !expired) {\n        return this._blockhashInfo.recentBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n  /**\n   * @internal\n   */\n\n\n  async _pollNewBlockhash() {\n    this._pollingBlockhash = true;\n\n    try {\n      const startTime = Date.now();\n\n      for (let i = 0; i < 50; i++) {\n        const {\n          blockhash\n        } = await this.getRecentBlockhash('finalized');\n\n        if (this._blockhashInfo.recentBlockhash != blockhash) {\n          this._blockhashInfo = {\n            recentBlockhash: blockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: []\n          };\n          return blockhash;\n        } // Sleep for approximately half a slot\n\n\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(`Unable to obtain a new blockhash after ${Date.now() - startTime}ms`);\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n  /**\n   * Simulate a transaction\n   */\n\n\n  async simulateTransaction(transactionOrMessage, signers, includeAccounts) {\n    let transaction;\n\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx = transactionOrMessage;\n      transaction = new Transaction({\n        recentBlockhash: originalTx.recentBlockhash,\n        nonceInfo: originalTx.nonceInfo,\n        feePayer: originalTx.feePayer,\n        signatures: [...originalTx.signatures]\n      });\n      transaction.instructions = transactionOrMessage.instructions;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage); // HACK: this function relies on mutating the populated transaction\n\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n        if (!signers) break;\n        transaction.sign(...signers);\n\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n\n        if (!this._blockhashInfo.simulatedSignatures.includes(signature) && !this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n\n    const signData = message.serialize();\n\n    const wireTransaction = transaction._serialize(signData);\n\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = {\n      encoding: 'base64',\n      commitment: this.commitment\n    };\n\n    if (includeAccounts) {\n      const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map(key => key.toBase58());\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n\n    if ('error' in res) {\n      let logs;\n\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n\n      throw new SendTransactionError('failed to simulate transaction: ' + res.error.message, logs);\n    }\n\n    return res.result;\n  }\n  /**\n   * Sign and send a transaction\n   */\n\n\n  async sendTransaction(transaction, signers, options) {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n        transaction.sign(...signers);\n\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n\n\n  async sendRawTransaction(rawTransaction, options) {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(encodedTransaction, options);\n    return result;\n  }\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n\n\n  async sendEncodedTransaction(encodedTransaction, options) {\n    const config = {\n      encoding: 'base64'\n    };\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment = options && options.preflightCommitment || this.commitment;\n\n    if (options && options.maxRetries) {\n      config.maxRetries = options.maxRetries;\n    }\n\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n\n    if ('error' in res) {\n      let logs;\n\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n\n      throw new SendTransactionError('failed to send transaction: ' + res.error.message, logs);\n    }\n\n    return res.result;\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n\n    this._updateSubscriptions();\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnError(err) {\n    console.error('ws error:', err.message);\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnClose(code) {\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n\n      return;\n    } // implicit close, prepare subscriptions for auto-reconnect\n\n\n    this._resetSubscriptions();\n  }\n  /**\n   * @internal\n   */\n\n\n  async _subscribe(sub, rpcMethod, rpcArgs) {\n    if (sub.subscriptionId == null) {\n      sub.subscriptionId = 'subscribing';\n\n      try {\n        const id = await this._rpcWebSocket.call(rpcMethod, rpcArgs);\n\n        if (typeof id === 'number' && sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = id;\n        }\n      } catch (err) {\n        if (sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = null;\n        }\n\n        if (err instanceof Error) {\n          console.error(`${rpcMethod} error for argument`, rpcArgs, err.message);\n        }\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  async _unsubscribe(sub, rpcMethod) {\n    const subscriptionId = sub.subscriptionId;\n\n    if (subscriptionId != null && typeof subscriptionId != 'string') {\n      const unsubscribeId = subscriptionId;\n\n      try {\n        await this._rpcWebSocket.call(rpcMethod, [unsubscribeId]);\n      } catch (err) {\n        if (err instanceof Error) {\n          console.error(`${rpcMethod} error:`, err.message);\n        }\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _resetSubscriptions() {\n    Object.values(this._accountChangeSubscriptions).forEach(s => s.subscriptionId = null);\n    Object.values(this._logsSubscriptions).forEach(s => s.subscriptionId = null);\n    Object.values(this._programAccountChangeSubscriptions).forEach(s => s.subscriptionId = null);\n    Object.values(this._rootSubscriptions).forEach(s => s.subscriptionId = null);\n    Object.values(this._signatureSubscriptions).forEach(s => s.subscriptionId = null);\n    Object.values(this._slotSubscriptions).forEach(s => s.subscriptionId = null);\n    Object.values(this._slotUpdateSubscriptions).forEach(s => s.subscriptionId = null);\n  }\n  /**\n   * @internal\n   */\n\n\n  _updateSubscriptions() {\n    const accountKeys = Object.keys(this._accountChangeSubscriptions).map(Number);\n    const programKeys = Object.keys(this._programAccountChangeSubscriptions).map(Number);\n    const slotKeys = Object.keys(this._slotSubscriptions).map(Number);\n    const slotUpdateKeys = Object.keys(this._slotUpdateSubscriptions).map(Number);\n    const signatureKeys = Object.keys(this._signatureSubscriptions).map(Number);\n    const rootKeys = Object.keys(this._rootSubscriptions).map(Number);\n    const logsKeys = Object.keys(this._logsSubscriptions).map(Number);\n\n    if (accountKeys.length === 0 && programKeys.length === 0 && slotKeys.length === 0 && slotUpdateKeys.length === 0 && signatureKeys.length === 0 && rootKeys.length === 0 && logsKeys.length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(`Error when closing socket connection: ${err.message}`);\n            }\n          }\n        }, 500);\n      }\n\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n\n      return;\n    }\n\n    for (let id of accountKeys) {\n      const sub = this._accountChangeSubscriptions[id];\n\n      this._subscribe(sub, 'accountSubscribe', this._buildArgs([sub.publicKey], sub.commitment, 'base64'));\n    }\n\n    for (let id of programKeys) {\n      const sub = this._programAccountChangeSubscriptions[id];\n\n      this._subscribe(sub, 'programSubscribe', this._buildArgs([sub.programId], sub.commitment, 'base64', {\n        filters: sub.filters\n      }));\n    }\n\n    for (let id of slotKeys) {\n      const sub = this._slotSubscriptions[id];\n\n      this._subscribe(sub, 'slotSubscribe', []);\n    }\n\n    for (let id of slotUpdateKeys) {\n      const sub = this._slotUpdateSubscriptions[id];\n\n      this._subscribe(sub, 'slotsUpdatesSubscribe', []);\n    }\n\n    for (let id of signatureKeys) {\n      const sub = this._signatureSubscriptions[id];\n      const args = [sub.signature];\n      if (sub.options) args.push(sub.options);\n\n      this._subscribe(sub, 'signatureSubscribe', args);\n    }\n\n    for (let id of rootKeys) {\n      const sub = this._rootSubscriptions[id];\n\n      this._subscribe(sub, 'rootSubscribe', []);\n    }\n\n    for (let id of logsKeys) {\n      const sub = this._logsSubscriptions[id];\n      let filter;\n\n      if (typeof sub.filter === 'object') {\n        filter = {\n          mentions: [sub.filter.toString()]\n        };\n      } else {\n        filter = sub.filter;\n      }\n\n      this._subscribe(sub, 'logsSubscribe', this._buildArgs([filter], sub.commitment));\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnAccountNotification(notification) {\n    const res = create(notification, AccountNotificationResult);\n\n    for (const sub of Object.values(this._accountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n\n\n  onAccountChange(publicKey, callback, commitment) {\n    const id = ++this._accountChangeSubscriptionCounter;\n    this._accountChangeSubscriptions[id] = {\n      publicKey: publicKey.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeAccountChangeListener(id) {\n    if (this._accountChangeSubscriptions[id]) {\n      const subInfo = this._accountChangeSubscriptions[id];\n      delete this._accountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'accountUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown account change id: ${id}`);\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnProgramAccountNotification(notification) {\n    const res = create(notification, ProgramAccountNotificationResult);\n\n    for (const sub of Object.values(this._programAccountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        const {\n          value,\n          context\n        } = res.result;\n        sub.callback({\n          accountId: value.pubkey,\n          accountInfo: value.account\n        }, context);\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n\n\n  onProgramAccountChange(programId, callback, commitment, filters) {\n    const id = ++this._programAccountChangeSubscriptionCounter;\n    this._programAccountChangeSubscriptions[id] = {\n      programId: programId.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n      filters\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeProgramAccountChangeListener(id) {\n    if (this._programAccountChangeSubscriptions[id]) {\n      const subInfo = this._programAccountChangeSubscriptions[id];\n      delete this._programAccountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'programUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown program account change id: ${id}`);\n    }\n  }\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n\n\n  onLogs(filter, callback, commitment) {\n    const id = ++this._logsSubscriptionCounter;\n    this._logsSubscriptions[id] = {\n      filter,\n      callback,\n      commitment,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id subscription id to deregister.\n   */\n\n\n  async removeOnLogsListener(id) {\n    if (!this._logsSubscriptions[id]) {\n      throw new Error(`Unknown logs id: ${id}`);\n    }\n\n    const subInfo = this._logsSubscriptions[id];\n    delete this._logsSubscriptions[id];\n    await this._unsubscribe(subInfo, 'logsUnsubscribe');\n\n    this._updateSubscriptions();\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnLogsNotification(notification) {\n    const res = create(notification, LogsNotificationResult);\n    const keys = Object.keys(this._logsSubscriptions).map(Number);\n\n    for (let id of keys) {\n      const sub = this._logsSubscriptions[id];\n\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnSlotNotification(notification) {\n    const res = create(notification, SlotNotificationResult);\n\n    for (const sub of Object.values(this._slotSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n\n\n  onSlotChange(callback) {\n    const id = ++this._slotSubscriptionCounter;\n    this._slotSubscriptions[id] = {\n      callback,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeSlotChangeListener(id) {\n    if (this._slotSubscriptions[id]) {\n      const subInfo = this._slotSubscriptions[id];\n      delete this._slotSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot change id: ${id}`);\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnSlotUpdatesNotification(notification) {\n    const res = create(notification, SlotUpdateNotificationResult);\n\n    for (const sub of Object.values(this._slotUpdateSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n\n\n  onSlotUpdate(callback) {\n    const id = ++this._slotUpdateSubscriptionCounter;\n    this._slotUpdateSubscriptions[id] = {\n      callback,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeSlotUpdateListener(id) {\n    if (this._slotUpdateSubscriptions[id]) {\n      const subInfo = this._slotUpdateSubscriptions[id];\n      delete this._slotUpdateSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotsUpdatesUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot update id: ${id}`);\n    }\n  }\n\n  _buildArgs(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n\n    if (commitment || encoding || extra) {\n      let options = {};\n\n      if (encoding) {\n        options.encoding = encoding;\n      }\n\n      if (commitment) {\n        options.commitment = commitment;\n      }\n\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n\n      args.push(options);\n    }\n\n    return args;\n  }\n  /**\n   * @internal\n   */\n\n\n  _buildArgsAtLeastConfirmed(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error('Using Connection with default commitment: `' + this._commitment + '`, but method requires at least `confirmed`');\n    }\n\n    return this._buildArgs(args, override, encoding, extra);\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnSignatureNotification(notification) {\n    const res = create(notification, SignatureNotificationResult);\n\n    for (const [id, sub] of Object.entries(this._signatureSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        if (res.result.value === 'receivedSignature') {\n          sub.callback({\n            type: 'received'\n          }, res.result.context);\n        } else {\n          // Signatures subscriptions are auto-removed by the RPC service so\n          // no need to explicitly send an unsubscribe message\n          delete this._signatureSubscriptions[Number(id)];\n\n          this._updateSubscriptions();\n\n          sub.callback({\n            type: 'status',\n            result: res.result.value\n          }, res.result.context);\n        }\n\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n\n\n  onSignature(signature, callback, commitment) {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n        }\n      },\n      options: {\n        commitment\n      },\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n\n\n  onSignatureWithOptions(signature, callback, options) {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback,\n      options,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeSignatureListener(id) {\n    if (this._signatureSubscriptions[id]) {\n      const subInfo = this._signatureSubscriptions[id];\n      delete this._signatureSubscriptions[id];\n      await this._unsubscribe(subInfo, 'signatureUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown signature result id: ${id}`);\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnRootNotification(notification) {\n    const res = create(notification, RootNotificationResult);\n\n    for (const sub of Object.values(this._rootSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n\n\n  onRootChange(callback) {\n    const id = ++this._rootSubscriptionCounter;\n    this._rootSubscriptions[id] = {\n      callback,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeRootChangeListener(id) {\n    if (this._rootSubscriptions[id]) {\n      const subInfo = this._rootSubscriptions[id];\n      delete this._rootSubscriptions[id];\n      await this._unsubscribe(subInfo, 'rootUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown root change id: ${id}`);\n    }\n  }\n\n}\n\n/**\n * Keypair signer interface\n */\n\n/**\n * An account keypair used for signing transactions.\n */\nclass Keypair {\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair) {\n    this._keypair = void 0;\n\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n  /**\n   * Generate a new random keypair\n   */\n\n\n  static generate() {\n    return new Keypair(nacl.sign.keyPair());\n  }\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n\n\n  static fromSecretKey(secretKey, options) {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n\n    return new Keypair(keypair);\n  }\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n\n\n  static fromSeed(seed) {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n  /**\n   * The public key for this keypair\n   */\n\n\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n  /**\n   * The raw secret key for this keypair\n   */\n\n\n  get secretKey() {\n    return this._keypair.secretKey;\n  }\n\n}\n\nconst PRIVATE_KEY_BYTES$1 = 64;\nconst PUBLIC_KEY_BYTES$1 = 32;\nconst SIGNATURE_BYTES = 64;\n/**\n * Params for creating an ed25519 instruction using a public key\n */\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u8('padding'), BufferLayout.u16('signatureOffset'), BufferLayout.u16('signatureInstructionIndex'), BufferLayout.u16('publicKeyOffset'), BufferLayout.u16('publicKeyInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u16('messageInstructionIndex')]);\nclass Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Public key that identifies the ed25519 program\n   */\n\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      instructionIndex\n    } = params;\n    assert(publicKey.length === PUBLIC_KEY_BYTES$1, `Public Key must be ${PUBLIC_KEY_BYTES$1} bytes but received ${publicKey.length} bytes`);\n    assert(signature.length === SIGNATURE_BYTES, `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`);\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n    const index = instructionIndex == null ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n    : instructionIndex;\n    ED25519_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      padding: 0,\n      signatureOffset,\n      signatureInstructionIndex: index,\n      publicKeyOffset,\n      publicKeyInstructionIndex: index,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: index\n    }, instructionData);\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData\n    });\n  }\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n\n\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey,\n      message,\n      instructionIndex\n    } = params;\n    assert(privateKey.length === PRIVATE_KEY_BYTES$1, `Private key must be ${PRIVATE_KEY_BYTES$1} bytes but received ${privateKey.length} bytes`);\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n\n}\nEd25519Program.programId = new PublicKey('Ed25519SigVerify111111111111111111111111111');\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\n\nconst STAKE_CONFIG_ID = new PublicKey('StakeConfig11111111111111111111111111111111');\n/**\n * Stake account authority info\n */\n\nclass Authorized {\n  /** stake authority */\n\n  /** withdraw authority */\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker, withdrawer) {\n    this.staker = void 0;\n    this.withdrawer = void 0;\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n\n}\n\n/**\n * Stake account lockup info\n */\nclass Lockup {\n  /** Unix timestamp of lockup expiration */\n\n  /** Epoch of lockup expiration */\n\n  /** Lockup custodian authority */\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp, epoch, custodian) {\n    this.unixTimestamp = void 0;\n    this.epoch = void 0;\n    this.custodian = void 0;\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n  /**\n   * Default, inactive Lockup value\n   */\n\n\n}\nLockup.default = new Lockup(0, 0, PublicKey.default);\n\n/**\n * Stake Instruction class\n */\nclass StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n\n\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized,\n      lockup\n    } = decodeData(STAKE_INSTRUCTION_LAYOUTS.Initialize, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(new PublicKey(authorized.staker), new PublicKey(authorized.withdrawer)),\n      lockup: new Lockup(lockup.unixTimestamp, lockup.epoch, new PublicKey(lockup.custodian))\n    };\n  }\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeDelegate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey\n    };\n  }\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      stakeAuthorizationType\n    } = decodeData(STAKE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n\n    return o;\n  }\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner\n    } = decodeData(STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n\n    return o;\n  }\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeSplit(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData(STAKE_INSTRUCTION_LAYOUTS.Split, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports\n    };\n  }\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeMerge(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey\n    };\n  }\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData(STAKE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n\n    return o;\n  }\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeDeactivate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkProgramId(programId) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n\n}\n/**\n * An enumeration of valid StakeInstructionType's\n */\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nconst STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), authorized(), lockup()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType')])\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType'), rustString('authoritySeed'), publicKey('authorityOwner')])\n  }\n});\n/**\n * Stake authorization type\n */\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nconst StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n/**\n * Factory class for transactions to interact with the Stake program\n */\n\nclass StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Public key that identifies the Stake program\n   */\n\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params) {\n    const {\n      stakePubkey,\n      authorized,\n      lockup: maybeLockup\n    } = params;\n    const lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer())\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer())\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n\n\n  static createAccountWithSeed(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccountWithSeed({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      basePubkey: params.basePubkey,\n      seed: params.seed,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n\n\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n\n\n  static delegate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      votePubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: STAKE_CONFIG_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n\n\n  static authorize(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n\n\n  static authorizeWithSeed(params) {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer())\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorityBase,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * @internal\n   */\n\n\n  static splitInstruction(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {\n      lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: splitStakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n\n\n  static split(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.authorizedPubkey,\n      newAccountPubkey: params.splitStakePubkey,\n      lamports: 0,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.splitInstruction(params));\n  }\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n\n\n  static splitWithSeed(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.allocate({\n      accountPubkey: splitStakePubkey,\n      basePubkey,\n      seed,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.splitInstruction({\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    }));\n  }\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n\n\n  static merge(params) {\n    const {\n      stakePubkey,\n      sourceStakePubKey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: sourceStakePubKey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n\n\n  static withdraw(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      toPubkey,\n      lamports,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n\n\n  static deactivate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n}\nStakeProgram.programId = new PublicKey('Stake11111111111111111111111111111111111111');\nStakeProgram.space = 200;\n\nconst {\n  publicKeyCreate,\n  ecdsaSign\n} = secp256k1;\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u16('signatureOffset'), BufferLayout.u8('signatureInstructionIndex'), BufferLayout.u16('ethAddressOffset'), BufferLayout.u8('ethAddressInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u8('messageInstructionIndex'), BufferLayout.blob(20, 'ethAddress'), BufferLayout.blob(64, 'signature'), BufferLayout.u8('recoveryId')]);\nclass Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(publicKey) {\n    assert(publicKey.length === PUBLIC_KEY_BYTES, `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`);\n\n    try {\n      return Buffer.from(sha3.keccak_256.update(toBuffer(publicKey)).digest()).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n\n\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    } = params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    });\n  }\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n\n\n  static createInstructionWithEthAddress(params) {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0\n    } = params;\n    let ethAddress;\n\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(ethAddress.length === ETHEREUM_ADDRESS_BYTES, `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`);\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(SECP256K1_INSTRUCTION_LAYOUT.span + message.length);\n    SECP256K1_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      signatureOffset,\n      signatureInstructionIndex: instructionIndex,\n      ethAddressOffset,\n      ethAddressInstructionIndex: instructionIndex,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: instructionIndex,\n      signature: toBuffer(signature),\n      ethAddress: toBuffer(ethAddress),\n      recoveryId\n    }, instructionData);\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData\n    });\n  }\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n\n\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey: pkey,\n      message,\n      instructionIndex\n    } = params;\n    assert(pkey.length === PRIVATE_KEY_BYTES, `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`);\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n\n      const messageHash = Buffer.from(sha3.keccak_256.update(toBuffer(message)).digest());\n      const {\n        signature,\n        recid: recoveryId\n      } = ecdsaSign(messageHash, privateKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n\n}\nSecp256k1Program.programId = new PublicKey('KeccakSecp256k11111111111111111111111111111');\n\nconst VALIDATOR_INFO_KEY = new PublicKey('Va1idator1nfo111111111111111111111111111111');\n/**\n * @internal\n */\n\nconst InfoString = type({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string())\n});\n/**\n * ValidatorInfo class\n */\n\nclass ValidatorInfo {\n  /**\n   * validator public key\n   */\n\n  /**\n   * validator information\n   */\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key, info) {\n    this.key = void 0;\n    this.info = void 0;\n    this.key = key;\n    this.info = info;\n  }\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n\n\n  static fromConfigData(buffer) {\n    const PUBKEY_LENGTH = 32;\n    let byteArray = [...buffer];\n    const configKeyCount = decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n    const configKeys = [];\n\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({\n        publicKey,\n        isSigner\n      });\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo = rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo);\n        assert$7(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n\n}\n\nconst VOTE_PROGRAM_ID = new PublicKey('Vote111111111111111111111111111111111111111');\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission'), BufferLayout.nu64(), // votes.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.u32('confirmationCount')]), BufferLayout.offset(BufferLayout.u32(), -8), 'votes'), BufferLayout.u8('rootSlotValid'), BufferLayout.nu64('rootSlot'), BufferLayout.nu64(), // authorizedVoters.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), publicKey('authorizedVoter')]), BufferLayout.offset(BufferLayout.u32(), -8), 'authorizedVoters'), BufferLayout.struct([BufferLayout.seq(BufferLayout.struct([publicKey('authorizedPubkey'), BufferLayout.nu64('epochOfLastAuthorizedSwitch'), BufferLayout.nu64('targetEpoch')]), 32, 'buf'), BufferLayout.nu64('idx'), BufferLayout.u8('isEmpty')], 'priorVoters'), BufferLayout.nu64(), // epochCredits.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), BufferLayout.nu64('credits'), BufferLayout.nu64('prevCredits')]), BufferLayout.offset(BufferLayout.u32(), -8), 'epochCredits'), BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')], 'lastTimestamp')]);\n\n/**\n * VoteAccount class\n */\nclass VoteAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.nodePubkey = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.rootSlot = void 0;\n    this.votes = void 0;\n    this.authorizedVoters = void 0;\n    this.priorVoters = void 0;\n    this.epochCredits = void 0;\n    this.lastTimestamp = void 0;\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n\n\n  static fromAccountData(buffer) {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n    let rootSlot = va.rootSlot;\n\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp\n    });\n  }\n\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch\n}) {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter)\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch\n}) {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch\n  };\n}\n\nfunction getPriorVoters({\n  buf,\n  idx,\n  isEmpty\n}) {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [...buf.slice(idx + 1).map(parsePriorVoters), ...buf.slice(0, idx).map(parsePriorVoters)];\n}\n\n/**\n * Vote account info\n */\n\nclass VoteInit {\n  /** [0, 100] */\n  constructor(nodePubkey, authorizedVoter, authorizedWithdrawer, commission) {\n    this.nodePubkey = void 0;\n    this.authorizedVoter = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n\n}\n/**\n * Create vote account transaction params\n */\n\n/**\n * Vote Instruction class\n */\nclass VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n\n\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n\n\n  static decodeInitializeAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n    const {\n      voteInit\n    } = decodeData(VOTE_INSTRUCTION_LAYOUTS.InitializeAccount, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(new PublicKey(voteInit.nodePubkey), new PublicKey(voteInit.authorizedVoter), new PublicKey(voteInit.authorizedWithdrawer), voteInit.commission)\n    };\n  }\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      voteAuthorizationType\n    } = decodeData(VOTE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      }\n    };\n  }\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n\n\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData(VOTE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey\n    };\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkProgramId(programId) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n\n}\n/**\n * An enumeration of valid VoteInstructionType's\n */\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteInit()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('voteAuthorizationType')])\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  }\n});\n/**\n * VoteAuthorize type\n */\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nconst VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n/**\n * Factory class for transactions to interact with the Vote program\n */\n\nclass VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Public key that identifies the Vote program\n   */\n\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(params) {\n    const {\n      votePubkey,\n      nodePubkey,\n      voteInit\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(voteInit.authorizedWithdrawer.toBuffer()),\n        commission: voteInit.commission\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: nodePubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n\n\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.votePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.initializeAccount({\n      votePubkey: params.votePubkey,\n      nodePubkey: params.voteInit.nodePubkey,\n      voteInit: params.voteInit\n    }));\n  }\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n\n\n  static authorize(params) {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n\n\n  static withdraw(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      lamports,\n      toPubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n}\nVoteProgram.programId = new PublicKey('Vote111111111111111111111111111111111111111');\nVoteProgram.space = 3731;\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment\n  };\n  const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n  const status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n\n  if (status.err) {\n    throw new Error(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n\n  return signature;\n}\n\nconst endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/'\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/'\n  }\n};\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nfunction clusterApiUrl(cluster, tls) {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n\n  return url;\n}\n\n/**\n * There are 1-billion lamports in one SOL\n */\n\nconst LAMPORTS_PER_SOL = 1000000000;\n\nexport { Account, Authorized, BLOCKHASH_CACHE_TIMEOUT_MS, BPF_LOADER_DEPRECATED_PROGRAM_ID, BPF_LOADER_PROGRAM_ID, BpfLoader, Connection, Ed25519Program, Enum, EpochSchedule, FeeCalculatorLayout, Keypair, LAMPORTS_PER_SOL, Loader, Lockup, MAX_SEED_LENGTH, Message, NONCE_ACCOUNT_LENGTH, NonceAccount, PACKET_DATA_SIZE, PublicKey, SOLANA_SCHEMA, STAKE_CONFIG_ID, STAKE_INSTRUCTION_LAYOUTS, SYSTEM_INSTRUCTION_LAYOUTS, SYSVAR_CLOCK_PUBKEY, SYSVAR_EPOCH_SCHEDULE_PUBKEY, SYSVAR_INSTRUCTIONS_PUBKEY, SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY, SYSVAR_REWARDS_PUBKEY, SYSVAR_SLOT_HASHES_PUBKEY, SYSVAR_SLOT_HISTORY_PUBKEY, SYSVAR_STAKE_HISTORY_PUBKEY, Secp256k1Program, SendTransactionError, StakeAuthorizationLayout, StakeInstruction, StakeProgram, Struct, SystemInstruction, SystemProgram, Transaction, TransactionInstruction, VALIDATOR_INFO_KEY, VOTE_PROGRAM_ID, ValidatorInfo, VoteAccount, VoteAuthorizationLayout, VoteInit, VoteInstruction, VoteProgram, clusterApiUrl, sendAndConfirmRawTransaction, sendAndConfirmTransaction };\n//# sourceMappingURL=index.browser.esm.js.map\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n"],"sourceRoot":""}